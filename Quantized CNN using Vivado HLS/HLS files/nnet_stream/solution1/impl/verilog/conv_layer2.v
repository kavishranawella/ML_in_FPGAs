// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_layer2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_pp0_stage0 = 33'd512;
parameter    ap_ST_fsm_state18 = 33'd1024;
parameter    ap_ST_fsm_state19 = 33'd2048;
parameter    ap_ST_fsm_state20 = 33'd4096;
parameter    ap_ST_fsm_state21 = 33'd8192;
parameter    ap_ST_fsm_state22 = 33'd16384;
parameter    ap_ST_fsm_state23 = 33'd32768;
parameter    ap_ST_fsm_state24 = 33'd65536;
parameter    ap_ST_fsm_state25 = 33'd131072;
parameter    ap_ST_fsm_state26 = 33'd262144;
parameter    ap_ST_fsm_state27 = 33'd524288;
parameter    ap_ST_fsm_state28 = 33'd1048576;
parameter    ap_ST_fsm_state29 = 33'd2097152;
parameter    ap_ST_fsm_state30 = 33'd4194304;
parameter    ap_ST_fsm_state31 = 33'd8388608;
parameter    ap_ST_fsm_state32 = 33'd16777216;
parameter    ap_ST_fsm_state33 = 33'd33554432;
parameter    ap_ST_fsm_state34 = 33'd67108864;
parameter    ap_ST_fsm_state35 = 33'd134217728;
parameter    ap_ST_fsm_state36 = 33'd268435456;
parameter    ap_ST_fsm_state37 = 33'd536870912;
parameter    ap_ST_fsm_state38 = 33'd1073741824;
parameter    ap_ST_fsm_state39 = 33'd2147483648;
parameter    ap_ST_fsm_state40 = 33'd4294967296;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [7:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [7:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_V_V_write;
reg in_V_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] conv_layer2_weights_s_address0;
reg    conv_layer2_weights_s_ce0;
wire  signed [7:0] conv_layer2_weights_s_q0;
wire   [8:0] conv_layer2_weights_s_address1;
reg    conv_layer2_weights_s_ce1;
wire   [7:0] conv_layer2_weights_s_q1;
wire   [8:0] conv_layer2_weights_s_address2;
reg    conv_layer2_weights_s_ce2;
wire  signed [7:0] conv_layer2_weights_s_q2;
wire   [8:0] conv_layer2_weights_s_address3;
reg    conv_layer2_weights_s_ce3;
wire   [7:0] conv_layer2_weights_s_q3;
wire   [8:0] conv_layer2_weights_s_address4;
reg    conv_layer2_weights_s_ce4;
wire   [7:0] conv_layer2_weights_s_q4;
wire   [8:0] conv_layer2_weights_s_address5;
reg    conv_layer2_weights_s_ce5;
wire   [7:0] conv_layer2_weights_s_q5;
wire   [8:0] conv_layer2_weights_s_address6;
reg    conv_layer2_weights_s_ce6;
wire  signed [7:0] conv_layer2_weights_s_q6;
wire   [8:0] conv_layer2_weights_s_address7;
reg    conv_layer2_weights_s_ce7;
wire   [7:0] conv_layer2_weights_s_q7;
wire   [8:0] conv_layer2_weights_s_address8;
reg    conv_layer2_weights_s_ce8;
wire  signed [7:0] conv_layer2_weights_s_q8;
wire   [8:0] conv_layer2_weights_s_address9;
reg    conv_layer2_weights_s_ce9;
wire   [7:0] conv_layer2_weights_s_q9;
wire   [8:0] conv_layer2_weights_s_address10;
reg    conv_layer2_weights_s_ce10;
wire   [7:0] conv_layer2_weights_s_q10;
wire   [8:0] conv_layer2_weights_s_address11;
reg    conv_layer2_weights_s_ce11;
wire  signed [7:0] conv_layer2_weights_s_q11;
wire   [8:0] conv_layer2_weights_s_address12;
reg    conv_layer2_weights_s_ce12;
wire   [7:0] conv_layer2_weights_s_q12;
wire   [8:0] conv_layer2_weights_s_address13;
reg    conv_layer2_weights_s_ce13;
wire   [7:0] conv_layer2_weights_s_q13;
wire   [8:0] conv_layer2_weights_s_address14;
reg    conv_layer2_weights_s_ce14;
wire  signed [7:0] conv_layer2_weights_s_q14;
wire   [8:0] conv_layer2_weights_s_address15;
reg    conv_layer2_weights_s_ce15;
wire   [7:0] conv_layer2_weights_s_q15;
wire   [8:0] conv_layer2_weights_s_address16;
reg    conv_layer2_weights_s_ce16;
wire  signed [7:0] conv_layer2_weights_s_q16;
wire   [8:0] conv_layer2_weights_s_address17;
reg    conv_layer2_weights_s_ce17;
wire   [7:0] conv_layer2_weights_s_q17;
wire   [8:0] conv_layer2_weights_s_address18;
reg    conv_layer2_weights_s_ce18;
wire   [7:0] conv_layer2_weights_s_q18;
wire   [8:0] conv_layer2_weights_s_address19;
reg    conv_layer2_weights_s_ce19;
wire  signed [7:0] conv_layer2_weights_s_q19;
wire   [8:0] conv_layer2_weights_s_address20;
reg    conv_layer2_weights_s_ce20;
wire   [7:0] conv_layer2_weights_s_q20;
wire   [8:0] conv_layer2_weights_s_address21;
reg    conv_layer2_weights_s_ce21;
wire  signed [7:0] conv_layer2_weights_s_q21;
wire   [8:0] conv_layer2_weights_s_address22;
reg    conv_layer2_weights_s_ce22;
wire   [7:0] conv_layer2_weights_s_q22;
wire   [8:0] conv_layer2_weights_s_address23;
reg    conv_layer2_weights_s_ce23;
wire  signed [7:0] conv_layer2_weights_s_q23;
wire   [8:0] conv_layer2_weights_s_address24;
reg    conv_layer2_weights_s_ce24;
wire   [7:0] conv_layer2_weights_s_q24;
wire   [8:0] conv_layer2_weights_s_address25;
reg    conv_layer2_weights_s_ce25;
wire  signed [7:0] conv_layer2_weights_s_q25;
wire   [8:0] conv_layer2_weights_s_address26;
reg    conv_layer2_weights_s_ce26;
wire   [7:0] conv_layer2_weights_s_q26;
wire   [8:0] conv_layer2_weights_s_address27;
reg    conv_layer2_weights_s_ce27;
wire  signed [7:0] conv_layer2_weights_s_q27;
wire   [8:0] conv_layer2_weights_s_address28;
reg    conv_layer2_weights_s_ce28;
wire   [7:0] conv_layer2_weights_s_q28;
wire   [8:0] conv_layer2_weights_s_address29;
reg    conv_layer2_weights_s_ce29;
wire  signed [7:0] conv_layer2_weights_s_q29;
wire   [8:0] conv_layer2_weights_s_address30;
reg    conv_layer2_weights_s_ce30;
wire   [7:0] conv_layer2_weights_s_q30;
wire   [8:0] conv_layer2_weights_s_address31;
reg    conv_layer2_weights_s_ce31;
wire  signed [7:0] conv_layer2_weights_s_q31;
reg   [7:0] conv_buff_val_V_1_1_s;
reg  signed [7:0] conv_buff_val_V_1_0_s;
reg  signed [7:0] conv_buff_val_V_1_2_s;
reg   [7:0] conv_buff_val_V_1_3_s;
reg  signed [7:0] conv_buff_val_V_1_4_s;
reg  signed [7:0] conv_buff_val_V_1_5_s;
reg  signed [7:0] conv_buff_val_V_1_6_s;
reg   [7:0] conv_buff_val_V_1_7_s;
reg  signed [7:0] conv_buff_val_V_1_8_s;
reg  signed [7:0] conv_buff_val_V_1_9_s;
reg   [7:0] conv_buff_val_V_1_10_10;
reg  signed [7:0] conv_buff_val_V_1_11_10;
reg   [7:0] conv_buff_val_V_1_12_8;
reg  signed [7:0] conv_buff_val_V_1_13;
reg  signed [7:0] conv_buff_val_V_1_14;
reg   [7:0] conv_buff_val_V_1_15;
reg   [7:0] conv_buff_val_V_1_16;
reg   [7:0] conv_buff_val_V_1_17;
reg   [7:0] conv_buff_val_V_1_18;
reg   [7:0] conv_buff_val_V_1_19;
reg   [7:0] conv_buff_val_V_1_20;
reg   [7:0] conv_buff_val_V_1_21;
reg   [7:0] conv_buff_val_V_1_22;
reg   [7:0] conv_buff_val_V_1_23;
reg   [7:0] conv_buff_val_V_1_24;
reg   [7:0] conv_buff_val_V_1_25;
reg   [7:0] conv_buff_val_V_1_26;
reg   [7:0] conv_buff_val_V_1_27;
reg   [7:0] conv_buff_val_V_1_28;
reg   [7:0] conv_buff_val_V_1_29;
reg   [7:0] conv_buff_val_V_1_30;
reg   [7:0] conv_buff_val_V_1_31;
reg   [7:0] conv_buff_val_V_1_32;
reg   [7:0] conv_buff_val_V_1_33;
reg   [7:0] conv_buff_val_V_1_34;
reg   [7:0] conv_buff_val_V_1_35;
reg   [7:0] conv_buff_val_V_1_36;
reg   [7:0] conv_buff_val_V_1_37;
reg   [7:0] conv_buff_val_V_1_38;
reg   [7:0] conv_buff_val_V_1_39;
reg   [7:0] conv_buff_val_V_1_40;
reg   [7:0] conv_buff_val_V_1_41;
reg   [7:0] conv_buff_val_V_1_42;
reg   [7:0] conv_buff_val_V_1_43;
reg   [7:0] conv_buff_val_V_1_44;
reg   [7:0] conv_buff_val_V_1_45;
reg   [7:0] conv_buff_val_V_1_46;
reg   [7:0] conv_buff_val_V_1_47;
reg   [7:0] conv_buff_val_V_1_48;
reg   [7:0] conv_buff_val_V_1_49;
reg   [7:0] conv_buff_val_V_1_50;
reg   [7:0] conv_buff_val_V_1_51;
reg   [7:0] conv_buff_val_V_1_52;
reg   [7:0] conv_buff_val_V_1_53;
reg   [7:0] conv_buff_val_V_1_54;
reg   [7:0] conv_buff_val_V_1_55;
reg   [7:0] conv_buff_val_V_1_56;
reg   [7:0] conv_buff_val_V_1_57;
reg   [7:0] conv_buff_val_V_1_58;
reg   [7:0] conv_buff_val_V_1_59;
reg   [7:0] conv_buff_val_V_1_60;
reg   [7:0] conv_buff_val_V_1_61;
reg   [7:0] conv_buff_val_V_1_62;
reg   [7:0] conv_buff_val_V_1_63;
reg   [7:0] conv_buff_val_V_1_64;
reg   [7:0] conv_buff_val_V_1_65;
reg   [7:0] conv_buff_val_V_1_66;
reg   [7:0] conv_buff_val_V_1_67;
reg   [7:0] conv_buff_val_V_1_68;
reg   [7:0] conv_buff_val_V_1_69;
reg   [7:0] conv_buff_val_V_1_70;
reg   [7:0] conv_buff_val_V_1_71;
reg   [7:0] conv_buff_val_V_1_72;
reg   [7:0] conv_buff_val_V_1_73;
reg   [7:0] conv_buff_val_V_1_74;
reg   [7:0] conv_buff_val_V_1_75;
reg   [7:0] conv_buff_val_V_1_76;
reg   [7:0] conv_buff_val_V_1_77;
reg   [7:0] conv_buff_val_V_1_78;
reg   [7:0] conv_buff_val_V_1_79;
reg   [7:0] conv_buff_val_V_1_80;
reg   [7:0] conv_buff_val_V_1_81;
reg   [7:0] conv_buff_val_V_1_82;
reg   [7:0] conv_buff_val_V_1_83;
reg   [7:0] conv_buff_val_V_1_84;
reg   [7:0] conv_buff_val_V_1_85;
reg   [7:0] conv_buff_val_V_1_86;
reg   [7:0] conv_buff_val_V_1_87;
reg   [7:0] conv_buff_val_V_1_88;
reg   [7:0] conv_buff_val_V_1_89;
reg   [7:0] conv_buff_val_V_1_90;
reg   [7:0] conv_buff_val_V_1_91;
reg   [7:0] conv_buff_val_V_1_92;
reg   [7:0] conv_buff_val_V_1_93;
reg   [7:0] conv_buff_val_V_1_94;
reg   [7:0] conv_buff_val_V_1_95;
reg   [7:0] conv_buff_val_V_1_96;
reg   [7:0] conv_buff_val_V_1_97;
reg   [7:0] conv_buff_val_V_1_98;
reg   [7:0] conv_buff_val_V_1_99;
reg   [7:0] conv_buff_val_V_1_10_9;
reg   [7:0] conv_buff_val_V_1_10_8;
reg   [7:0] conv_buff_val_V_1_10_7;
reg   [7:0] conv_buff_val_V_1_10_6;
reg   [7:0] conv_buff_val_V_1_10_5;
reg   [7:0] conv_buff_val_V_1_10_4;
reg   [7:0] conv_buff_val_V_1_10_3;
reg   [7:0] conv_buff_val_V_1_10_2;
reg   [7:0] conv_buff_val_V_1_10_1;
reg   [7:0] conv_buff_val_V_1_10;
reg   [7:0] conv_buff_val_V_1_11_9;
reg   [7:0] conv_buff_val_V_1_11_8;
reg  signed [7:0] conv_buff_val_V_1_11_7;
reg  signed [7:0] conv_buff_val_V_1_11_6;
reg   [7:0] conv_buff_val_V_1_11_5;
reg  signed [7:0] conv_buff_val_V_1_11_4;
reg   [7:0] conv_buff_val_V_1_11_3;
reg  signed [7:0] conv_buff_val_V_1_11_2;
reg   [7:0] conv_buff_val_V_1_11_1;
reg  signed [7:0] conv_buff_val_V_1_11;
reg   [7:0] conv_buff_val_V_1_12_7;
reg  signed [7:0] conv_buff_val_V_1_12_6;
reg   [7:0] conv_buff_val_V_1_12_5;
reg  signed [7:0] conv_buff_val_V_1_12_4;
reg   [7:0] conv_buff_val_V_1_12_3;
reg  signed [7:0] conv_buff_val_V_1_12_2;
reg  signed [7:0] conv_buff_val_V_1_12_1;
reg   [7:0] conv_buff_val_V_1_12;
wire   [3:0] scale_1_V_address0;
reg    scale_1_V_ce0;
wire   [19:0] scale_1_V_q0;
wire   [3:0] conv_layer2_bias_V_address0;
reg    conv_layer2_bias_V_ce0;
wire   [10:0] conv_layer2_bias_V_q0;
wire   [3:0] scale_0_V_address0;
reg    scale_0_V_ce0;
wire   [19:0] scale_0_V_q0;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter7;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond6_reg_4032;
reg   [0:0] exitcond6_reg_4032_pp0_iter6_reg;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond7_fu_2474_p2;
wire   [0:0] grp_nbreadreq_fu_500_p3;
wire    ap_CS_fsm_state18;
wire   [0:0] tmp_24_fu_3760_p2;
reg   [0:0] tmp_19_mid2_reg_4023;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
reg   [0:0] tmp_24_reg_4396;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
reg   [4:0] filter_reg_1062;
reg   [4:0] filter_reg_1062_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state10_pp0_stage0_iter0;
wire    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state14_pp0_stage0_iter4;
wire    ap_block_state15_pp0_stage0_iter5;
wire    ap_block_state16_pp0_stage0_iter6;
reg    ap_block_state17_pp0_stage0_iter7;
reg    ap_block_pp0_stage0_11001;
reg   [4:0] filter_reg_1062_pp0_iter2_reg;
reg   [4:0] filter_reg_1062_pp0_iter3_reg;
wire   [4:0] a_1_fu_2356_p2;
reg   [4:0] a_1_reg_3944;
wire    ap_CS_fsm_state2;
wire   [6:0] tmp_57_cast_fu_2375_p1;
reg   [6:0] tmp_57_cast_reg_3949;
wire   [0:0] exitcond_fu_2350_p2;
reg   [3:0] kernel_sum_V_addr_reg_3954;
wire   [1:0] b_1_fu_2385_p2;
reg   [1:0] b_1_reg_3962;
wire    ap_CS_fsm_state3;
wire   [7:0] tmp_129_fu_2400_p3;
reg   [7:0] tmp_129_reg_3967;
wire   [0:0] exitcond9_fu_2379_p2;
wire   [1:0] c_1_fu_2414_p2;
reg   [1:0] c_1_reg_3975;
wire    ap_CS_fsm_state4;
wire   [10:0] tmp_63_cast_fu_2429_p3;
reg   [10:0] tmp_63_cast_reg_3980;
wire   [0:0] exitcond3_fu_2408_p2;
wire   [3:0] d_1_fu_2443_p2;
reg   [3:0] d_1_reg_3988;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond5_fu_2437_p2;
wire   [7:0] i_9_fu_2480_p2;
reg    ap_predicate_op106_read_state8;
reg    ap_block_state8;
wire   [0:0] exitcond_flatten_fu_2498_p2;
wire    ap_CS_fsm_state9;
wire   [7:0] indvar_flatten_next_fu_2504_p2;
reg   [7:0] indvar_flatten_next_reg_4013;
wire   [0:0] exitcond1_fu_2522_p2;
reg   [0:0] exitcond1_reg_4018;
wire   [0:0] tmp_19_mid2_fu_2528_p3;
wire   [3:0] i_1_mid2_fu_2536_p3;
reg   [3:0] i_1_mid2_reg_4027;
wire   [0:0] exitcond6_fu_2544_p2;
reg   [0:0] exitcond6_reg_4032_pp0_iter1_reg;
reg   [0:0] exitcond6_reg_4032_pp0_iter2_reg;
reg   [0:0] exitcond6_reg_4032_pp0_iter3_reg;
reg   [0:0] exitcond6_reg_4032_pp0_iter4_reg;
reg   [0:0] exitcond6_reg_4032_pp0_iter5_reg;
wire   [4:0] filter_1_fu_2550_p2;
reg   [4:0] filter_1_reg_4036;
reg    ap_enable_reg_pp0_iter0;
wire   [9:0] tmp_58_fu_2556_p3;
reg   [9:0] tmp_58_reg_4041;
reg   [9:0] tmp_58_reg_4041_pp0_iter1_reg;
wire  signed [15:0] grp_fu_3773_p3;
reg  signed [15:0] sum_V_0_0_1_reg_4159;
reg    ap_enable_reg_pp0_iter1;
wire  signed [15:0] grp_fu_3781_p3;
reg  signed [15:0] tmp1_reg_4164;
reg  signed [7:0] conv_layer2_weights_39_reg_4169;
reg  signed [7:0] conv_layer2_weights_40_reg_4174;
wire  signed [15:0] grp_fu_3789_p3;
reg  signed [15:0] tmp4_reg_4179;
reg  signed [7:0] conv_layer2_weights_44_reg_4254;
reg    ap_enable_reg_pp0_iter2;
reg   [7:0] conv_layer2_weights_45_reg_4259;
reg  signed [7:0] conv_layer2_weights_48_reg_4264;
wire  signed [18:0] grp_fu_3815_p3;
reg  signed [18:0] tmp6_reg_4269;
wire  signed [15:0] grp_fu_3823_p3;
reg  signed [15:0] tmp9_reg_4274;
wire  signed [15:0] grp_fu_3831_p3;
reg  signed [15:0] tmp11_reg_4279;
wire  signed [15:0] grp_fu_3839_p3;
reg  signed [15:0] tmp26_reg_4284;
wire   [18:0] sum_V_0_1_7_fu_3253_p2;
reg  signed [18:0] sum_V_0_1_7_reg_4289;
reg  signed [7:0] conv_layer2_weights_51_reg_4294;
reg    ap_enable_reg_pp0_iter3;
wire  signed [15:0] grp_fu_3865_p3;
reg  signed [15:0] tmp15_reg_4299;
wire  signed [15:0] grp_fu_3873_p3;
reg  signed [15:0] tmp17_reg_4304;
wire  signed [15:0] grp_fu_3881_p3;
reg  signed [15:0] tmp18_reg_4309;
wire  signed [15:0] grp_fu_3889_p3;
reg  signed [15:0] tmp21_reg_4314;
wire  signed [15:0] grp_fu_3897_p3;
reg  signed [15:0] tmp22_reg_4319;
wire  signed [15:0] grp_fu_3905_p3;
reg  signed [15:0] tmp24_reg_4324;
wire  signed [16:0] grp_fu_3913_p3;
reg  signed [16:0] tmp25_reg_4329;
wire   [19:0] sum_V_1_1_7_fu_3492_p2;
reg   [19:0] sum_V_1_1_7_reg_4334;
wire   [43:0] p_Val2_5_fu_3519_p2;
reg   [43:0] p_Val2_5_reg_4359;
reg  signed [10:0] f_op_V_4_reg_4364;
reg   [19:0] scale_0_V_load_reg_4369;
wire   [7:0] tmp_135_fu_3619_p1;
reg   [7:0] tmp_135_reg_4374;
reg   [0:0] isneg_reg_4379;
reg   [15:0] tmp_30_reg_4385;
wire   [3:0] j_4_fu_3753_p3;
reg   [3:0] j_4_reg_4391;
reg    ap_predicate_op809_read_state18;
reg    ap_predicate_op1068_read_state18;
reg    ap_block_state18;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg   [3:0] kernel_sum_V_address0;
reg    kernel_sum_V_ce0;
reg    kernel_sum_V_we0;
reg   [23:0] kernel_sum_V_d0;
wire  signed [23:0] kernel_sum_V_q0;
reg   [4:0] a_reg_973;
reg    ap_block_state1;
wire    ap_CS_fsm_state7;
reg   [1:0] b_reg_984;
reg   [1:0] c_reg_995;
reg   [3:0] d_reg_1006;
wire    ap_CS_fsm_state6;
reg   [7:0] i_reg_1017;
reg   [7:0] indvar_flatten_reg_1028;
reg    ap_predicate_op4953_read_state33;
reg    ap_block_state33;
reg   [3:0] i_1_reg_1039;
reg   [3:0] j_reg_1050;
reg   [4:0] ap_phi_mux_filter_phi_fu_1066_p4;
wire   [63:0] tmp_s_fu_2362_p1;
wire   [63:0] tmp_128_cast_fu_2458_p1;
wire   [63:0] tmp_59_fu_2564_p1;
wire   [63:0] tmp_61_fu_2575_p3;
wire   [63:0] tmp_63_fu_2590_p3;
wire   [63:0] tmp_65_fu_2605_p3;
wire   [63:0] tmp_67_fu_2620_p3;
wire   [63:0] tmp_69_fu_2635_p3;
wire   [63:0] tmp_71_fu_2650_p3;
wire   [63:0] tmp_73_fu_2665_p3;
wire   [63:0] tmp_75_fu_2679_p3;
wire   [63:0] tmp_77_fu_2693_p3;
wire   [63:0] tmp_79_fu_2707_p3;
wire   [63:0] tmp_81_fu_2721_p3;
wire   [63:0] tmp_83_fu_2735_p3;
wire   [63:0] tmp_85_fu_2749_p3;
wire   [63:0] tmp_87_fu_2763_p3;
wire   [63:0] tmp_89_fu_2777_p3;
wire   [63:0] tmp_119_fu_2791_p3;
wire   [63:0] tmp_121_fu_2805_p3;
wire   [63:0] tmp_91_fu_2889_p3;
wire   [63:0] tmp_93_fu_2903_p3;
wire   [63:0] tmp_95_fu_2917_p3;
wire   [63:0] tmp_97_fu_2931_p3;
wire   [63:0] tmp_99_fu_2945_p3;
wire   [63:0] tmp_101_fu_2959_p3;
wire   [63:0] tmp_103_fu_2973_p3;
wire   [63:0] tmp_105_fu_2987_p3;
wire   [63:0] tmp_107_fu_3001_p3;
wire   [63:0] tmp_109_fu_3015_p3;
wire   [63:0] tmp_111_fu_3029_p3;
wire   [63:0] tmp_113_fu_3043_p3;
wire   [63:0] tmp_115_fu_3057_p3;
wire   [63:0] tmp_117_fu_3071_p3;
wire   [63:0] tmp_25_fu_3402_p1;
reg    ap_block_state19;
reg    ap_block_state20;
reg    ap_block_state21;
reg    ap_block_state22;
reg    ap_block_state23;
reg    ap_block_state24;
reg    ap_block_state25;
reg    ap_block_state26;
reg    ap_block_state27;
reg    ap_block_state28;
reg    ap_block_state29;
reg    ap_block_state30;
reg    ap_block_state31;
reg    ap_block_state32;
reg    ap_block_state34;
reg    ap_block_state35;
reg    ap_block_state36;
reg    ap_block_state37;
reg    ap_block_state38;
reg    ap_block_state39;
reg    ap_block_state40;
reg    ap_block_pp0_stage0_01001;
wire   [23:0] tmp_23_fu_2467_p2;
wire  signed [23:0] tmp_14_fu_3766_p2;
wire   [5:0] tmp_fu_2367_p3;
wire   [6:0] tmp_15_cast_fu_2391_p1;
wire   [6:0] tmp_56_fu_2395_p2;
wire   [7:0] tmp_20_fu_2420_p1;
wire   [7:0] tmp_57_fu_2424_p2;
wire   [10:0] tmp_21_cast_fu_2449_p1;
wire   [10:0] tmp_122_fu_2453_p2;
wire  signed [23:0] tmp_22_fu_2463_p1;
wire   [3:0] i_8_fu_2486_p2;
wire   [3:0] i_9_mid1_fu_2510_p2;
wire   [0:0] tmp_19_mid1_fu_2516_p2;
wire   [0:0] tmp_19_fu_2492_p2;
wire   [9:0] tmp_60_fu_2569_p2;
wire   [9:0] tmp_62_fu_2584_p2;
wire   [9:0] tmp_64_fu_2599_p2;
wire   [9:0] tmp_66_fu_2614_p2;
wire   [9:0] tmp_68_fu_2629_p2;
wire   [9:0] tmp_70_fu_2644_p2;
wire   [9:0] tmp_72_fu_2659_p2;
wire   [9:0] tmp_74_fu_2674_p2;
wire   [9:0] tmp_76_fu_2688_p2;
wire   [9:0] tmp_78_fu_2702_p2;
wire   [9:0] tmp_80_fu_2716_p2;
wire   [9:0] tmp_82_fu_2730_p2;
wire   [9:0] tmp_84_fu_2744_p2;
wire   [9:0] tmp_86_fu_2758_p2;
wire   [9:0] tmp_88_fu_2772_p2;
wire   [9:0] tmp_118_fu_2786_p2;
wire   [9:0] tmp_120_fu_2800_p2;
wire  signed [7:0] r_V_12_0_0_1_fu_2834_p0;
wire  signed [7:0] r_V_12_0_0_1_fu_2834_p1;
wire  signed [7:0] r_V_12_0_0_3_fu_2856_p0;
wire  signed [7:0] r_V_12_0_0_3_fu_2856_p1;
wire  signed [7:0] r_V_12_0_0_7_fu_2878_p0;
wire  signed [7:0] r_V_12_0_0_7_fu_2878_p1;
wire   [9:0] tmp_90_fu_2884_p2;
wire   [9:0] tmp_92_fu_2898_p2;
wire   [9:0] tmp_94_fu_2912_p2;
wire   [9:0] tmp_96_fu_2926_p2;
wire   [9:0] tmp_98_fu_2940_p2;
wire   [9:0] tmp_100_fu_2954_p2;
wire   [9:0] tmp_102_fu_2968_p2;
wire   [9:0] tmp_104_fu_2982_p2;
wire   [9:0] tmp_106_fu_2996_p2;
wire   [9:0] tmp_108_fu_3010_p2;
wire   [9:0] tmp_110_fu_3024_p2;
wire   [9:0] tmp_112_fu_3038_p2;
wire   [9:0] tmp_114_fu_3052_p2;
wire   [9:0] tmp_116_fu_3066_p2;
wire  signed [16:0] sum_V_0_0_1_cast_fu_3080_p1;
wire  signed [16:0] tmp1_cast_fu_3083_p1;
wire  signed [16:0] sum_V_0_0_3_fu_3086_p2;
wire  signed [16:0] grp_fu_3806_p3;
wire  signed [17:0] grp_fu_3797_p3;
wire  signed [17:0] tmp3_cast_fu_3113_p1;
(* use_dsp48 = "no" *) wire  signed [17:0] sum_V_0_0_7_fu_3116_p2;
wire  signed [7:0] r_V_12_0_1_4_fu_3149_p0;
wire  signed [7:0] r_V_12_0_1_4_fu_3149_p1;
wire  signed [7:0] r_V_12_0_1_7_fu_3171_p0;
wire  signed [7:0] r_V_12_0_1_7_fu_3171_p1;
wire  signed [7:0] r_V_12_1_1_7_fu_3193_p0;
wire  signed [7:0] r_V_12_1_1_7_fu_3193_p1;
wire  signed [7:0] r_V_12_0_1_2_fu_3213_p0;
wire  signed [7:0] r_V_12_0_1_2_fu_3213_p1;
wire  signed [15:0] grp_fu_3847_p3;
wire  signed [18:0] tmp7_cast_fu_3226_p1;
wire  signed [16:0] grp_fu_3856_p3;
wire  signed [17:0] tmp9_cast_fu_3234_p1;
wire  signed [17:0] tmp10_cast_fu_3240_p1;
wire   [17:0] tmp8_fu_3243_p2;
(* use_dsp48 = "no" *) wire   [18:0] tmp5_fu_3229_p2;
wire  signed [18:0] tmp8_cast_fu_3249_p1;
wire  signed [7:0] r_V_12_1_0_2_fu_3275_p0;
wire  signed [7:0] r_V_12_1_0_2_fu_3275_p1;
wire  signed [7:0] r_V_12_1_0_4_fu_3297_p0;
wire  signed [7:0] r_V_12_1_0_4_fu_3297_p1;
wire  signed [7:0] r_V_12_1_0_6_fu_3319_p0;
wire  signed [7:0] r_V_12_1_0_6_fu_3319_p1;
wire  signed [7:0] r_V_12_1_1_fu_3341_p0;
wire  signed [7:0] r_V_12_1_1_fu_3341_p1;
wire  signed [7:0] r_V_12_1_1_2_fu_3363_p0;
wire  signed [7:0] r_V_12_1_1_2_fu_3363_p1;
wire  signed [7:0] r_V_12_1_1_4_fu_3385_p0;
wire  signed [7:0] r_V_12_1_1_4_fu_3385_p1;
wire  signed [19:0] grp_fu_3921_p3;
wire  signed [19:0] tmp15_cast_fu_3420_p1;
wire  signed [16:0] tmp17_cast_fu_3428_p1;
wire  signed [16:0] tmp18_cast_fu_3431_p1;
wire   [16:0] tmp16_fu_3434_p2;
(* use_dsp48 = "no" *) wire   [19:0] tmp13_fu_3423_p2;
wire  signed [19:0] tmp16_cast_fu_3440_p1;
wire  signed [16:0] tmp21_cast_fu_3450_p1;
wire  signed [16:0] tmp22_cast_fu_3453_p1;
wire   [16:0] tmp20_fu_3456_p2;
wire  signed [17:0] tmp24_cast_fu_3466_p1;
wire  signed [17:0] tmp25_cast_fu_3469_p1;
wire   [17:0] tmp23_fu_3472_p2;
wire  signed [18:0] tmp20_cast_fu_3462_p1;
wire  signed [18:0] tmp23_cast_fu_3478_p1;
wire   [18:0] tmp19_fu_3482_p2;
wire   [19:0] tmp12_fu_3444_p2;
wire  signed [19:0] tmp19_cast_fu_3488_p1;
wire  signed [24:0] lhs_V_fu_3498_p1;
wire  signed [24:0] rhs_V_fu_3501_p1;
wire   [24:0] r_V_fu_3505_p2;
wire   [19:0] p_Val2_5_fu_3519_p0;
wire  signed [24:0] p_Val2_5_fu_3519_p1;
wire  signed [43:0] grp_fu_3930_p3;
wire   [15:0] tmp_131_fu_3538_p4;
wire   [26:0] tmp_133_fu_3558_p1;
wire   [0:0] tmp_130_fu_3531_p3;
wire   [0:0] r_fu_3561_p2;
wire   [0:0] not_s_i_i4_fu_3567_p2;
wire   [0:0] r_i_i4_fu_3573_p2;
wire   [0:0] qbit_fu_3551_p3;
wire   [0:0] qb_assign_5_fu_3579_p2;
wire   [17:0] tmp_26_cast_fu_3585_p1;
wire  signed [17:0] p_Val2_7_cast_fu_3547_p1;
wire   [17:0] p_Val2_21_fu_3589_p2;
wire   [0:0] tmp_134_fu_3595_p3;
wire  signed [17:0] p_a_V_i_fu_3603_p3;
wire  signed [22:0] p_a_V_i_cast1_fu_3611_p1;
wire   [23:0] p_a_V_i_cast_fu_3615_p1;
wire   [23:0] r_V_8_fu_3623_p2;
wire   [7:0] p_Val2_8_fu_3647_p2;
wire   [0:0] newsignbit_fu_3652_p3;
wire   [0:0] p_not_i_i_fu_3660_p2;
wire   [0:0] brmerge_i_i_fu_3665_p2;
wire   [0:0] tmp_31_fu_3671_p2;
wire   [0:0] p_not38_i_i_fu_3688_p2;
wire   [0:0] newsignbit_0_not_i_i_fu_3682_p2;
wire   [0:0] brmerge39_i_i_fu_3693_p2;
wire   [0:0] underflow_fu_3699_p2;
wire   [0:0] overflow_fu_3676_p2;
wire   [0:0] underflow_not_fu_3710_p2;
wire   [0:0] brmerge_i_i_i_fu_3704_p2;
wire   [0:0] brmerge_fu_3716_p2;
wire   [7:0] p_Val2_49_mux_fu_3722_p3;
wire   [7:0] p_Val2_s_fu_3730_p3;
wire   [3:0] j_op_fu_3747_p2;
wire  signed [5:0] tmp_14_fu_3766_p1;
wire   [15:0] grp_fu_3773_p2;
wire   [15:0] grp_fu_3781_p2;
wire   [15:0] grp_fu_3789_p2;
wire   [15:0] grp_fu_3823_p2;
wire   [15:0] grp_fu_3831_p2;
wire   [15:0] grp_fu_3839_p2;
wire   [15:0] grp_fu_3847_p2;
wire   [15:0] grp_fu_3865_p2;
wire   [15:0] grp_fu_3873_p2;
wire   [15:0] grp_fu_3881_p2;
wire   [15:0] grp_fu_3889_p2;
wire   [15:0] grp_fu_3897_p2;
wire   [15:0] grp_fu_3905_p2;
wire   [19:0] grp_fu_3930_p1;
reg   [32:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [32:0] grp_fu_3930_p10;
wire   [43:0] p_Val2_5_fu_3519_p00;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 33'd1;
#0 conv_buff_val_V_1_1_s = 8'd0;
#0 conv_buff_val_V_1_0_s = 8'd0;
#0 conv_buff_val_V_1_2_s = 8'd0;
#0 conv_buff_val_V_1_3_s = 8'd0;
#0 conv_buff_val_V_1_4_s = 8'd0;
#0 conv_buff_val_V_1_5_s = 8'd0;
#0 conv_buff_val_V_1_6_s = 8'd0;
#0 conv_buff_val_V_1_7_s = 8'd0;
#0 conv_buff_val_V_1_8_s = 8'd0;
#0 conv_buff_val_V_1_9_s = 8'd0;
#0 conv_buff_val_V_1_10_10 = 8'd0;
#0 conv_buff_val_V_1_11_10 = 8'd0;
#0 conv_buff_val_V_1_12_8 = 8'd0;
#0 conv_buff_val_V_1_13 = 8'd0;
#0 conv_buff_val_V_1_14 = 8'd0;
#0 conv_buff_val_V_1_15 = 8'd0;
#0 conv_buff_val_V_1_16 = 8'd0;
#0 conv_buff_val_V_1_17 = 8'd0;
#0 conv_buff_val_V_1_18 = 8'd0;
#0 conv_buff_val_V_1_19 = 8'd0;
#0 conv_buff_val_V_1_20 = 8'd0;
#0 conv_buff_val_V_1_21 = 8'd0;
#0 conv_buff_val_V_1_22 = 8'd0;
#0 conv_buff_val_V_1_23 = 8'd0;
#0 conv_buff_val_V_1_24 = 8'd0;
#0 conv_buff_val_V_1_25 = 8'd0;
#0 conv_buff_val_V_1_26 = 8'd0;
#0 conv_buff_val_V_1_27 = 8'd0;
#0 conv_buff_val_V_1_28 = 8'd0;
#0 conv_buff_val_V_1_29 = 8'd0;
#0 conv_buff_val_V_1_30 = 8'd0;
#0 conv_buff_val_V_1_31 = 8'd0;
#0 conv_buff_val_V_1_32 = 8'd0;
#0 conv_buff_val_V_1_33 = 8'd0;
#0 conv_buff_val_V_1_34 = 8'd0;
#0 conv_buff_val_V_1_35 = 8'd0;
#0 conv_buff_val_V_1_36 = 8'd0;
#0 conv_buff_val_V_1_37 = 8'd0;
#0 conv_buff_val_V_1_38 = 8'd0;
#0 conv_buff_val_V_1_39 = 8'd0;
#0 conv_buff_val_V_1_40 = 8'd0;
#0 conv_buff_val_V_1_41 = 8'd0;
#0 conv_buff_val_V_1_42 = 8'd0;
#0 conv_buff_val_V_1_43 = 8'd0;
#0 conv_buff_val_V_1_44 = 8'd0;
#0 conv_buff_val_V_1_45 = 8'd0;
#0 conv_buff_val_V_1_46 = 8'd0;
#0 conv_buff_val_V_1_47 = 8'd0;
#0 conv_buff_val_V_1_48 = 8'd0;
#0 conv_buff_val_V_1_49 = 8'd0;
#0 conv_buff_val_V_1_50 = 8'd0;
#0 conv_buff_val_V_1_51 = 8'd0;
#0 conv_buff_val_V_1_52 = 8'd0;
#0 conv_buff_val_V_1_53 = 8'd0;
#0 conv_buff_val_V_1_54 = 8'd0;
#0 conv_buff_val_V_1_55 = 8'd0;
#0 conv_buff_val_V_1_56 = 8'd0;
#0 conv_buff_val_V_1_57 = 8'd0;
#0 conv_buff_val_V_1_58 = 8'd0;
#0 conv_buff_val_V_1_59 = 8'd0;
#0 conv_buff_val_V_1_60 = 8'd0;
#0 conv_buff_val_V_1_61 = 8'd0;
#0 conv_buff_val_V_1_62 = 8'd0;
#0 conv_buff_val_V_1_63 = 8'd0;
#0 conv_buff_val_V_1_64 = 8'd0;
#0 conv_buff_val_V_1_65 = 8'd0;
#0 conv_buff_val_V_1_66 = 8'd0;
#0 conv_buff_val_V_1_67 = 8'd0;
#0 conv_buff_val_V_1_68 = 8'd0;
#0 conv_buff_val_V_1_69 = 8'd0;
#0 conv_buff_val_V_1_70 = 8'd0;
#0 conv_buff_val_V_1_71 = 8'd0;
#0 conv_buff_val_V_1_72 = 8'd0;
#0 conv_buff_val_V_1_73 = 8'd0;
#0 conv_buff_val_V_1_74 = 8'd0;
#0 conv_buff_val_V_1_75 = 8'd0;
#0 conv_buff_val_V_1_76 = 8'd0;
#0 conv_buff_val_V_1_77 = 8'd0;
#0 conv_buff_val_V_1_78 = 8'd0;
#0 conv_buff_val_V_1_79 = 8'd0;
#0 conv_buff_val_V_1_80 = 8'd0;
#0 conv_buff_val_V_1_81 = 8'd0;
#0 conv_buff_val_V_1_82 = 8'd0;
#0 conv_buff_val_V_1_83 = 8'd0;
#0 conv_buff_val_V_1_84 = 8'd0;
#0 conv_buff_val_V_1_85 = 8'd0;
#0 conv_buff_val_V_1_86 = 8'd0;
#0 conv_buff_val_V_1_87 = 8'd0;
#0 conv_buff_val_V_1_88 = 8'd0;
#0 conv_buff_val_V_1_89 = 8'd0;
#0 conv_buff_val_V_1_90 = 8'd0;
#0 conv_buff_val_V_1_91 = 8'd0;
#0 conv_buff_val_V_1_92 = 8'd0;
#0 conv_buff_val_V_1_93 = 8'd0;
#0 conv_buff_val_V_1_94 = 8'd0;
#0 conv_buff_val_V_1_95 = 8'd0;
#0 conv_buff_val_V_1_96 = 8'd0;
#0 conv_buff_val_V_1_97 = 8'd0;
#0 conv_buff_val_V_1_98 = 8'd0;
#0 conv_buff_val_V_1_99 = 8'd0;
#0 conv_buff_val_V_1_10_9 = 8'd0;
#0 conv_buff_val_V_1_10_8 = 8'd0;
#0 conv_buff_val_V_1_10_7 = 8'd0;
#0 conv_buff_val_V_1_10_6 = 8'd0;
#0 conv_buff_val_V_1_10_5 = 8'd0;
#0 conv_buff_val_V_1_10_4 = 8'd0;
#0 conv_buff_val_V_1_10_3 = 8'd0;
#0 conv_buff_val_V_1_10_2 = 8'd0;
#0 conv_buff_val_V_1_10_1 = 8'd0;
#0 conv_buff_val_V_1_10 = 8'd0;
#0 conv_buff_val_V_1_11_9 = 8'd0;
#0 conv_buff_val_V_1_11_8 = 8'd0;
#0 conv_buff_val_V_1_11_7 = 8'd0;
#0 conv_buff_val_V_1_11_6 = 8'd0;
#0 conv_buff_val_V_1_11_5 = 8'd0;
#0 conv_buff_val_V_1_11_4 = 8'd0;
#0 conv_buff_val_V_1_11_3 = 8'd0;
#0 conv_buff_val_V_1_11_2 = 8'd0;
#0 conv_buff_val_V_1_11_1 = 8'd0;
#0 conv_buff_val_V_1_11 = 8'd0;
#0 conv_buff_val_V_1_12_7 = 8'd0;
#0 conv_buff_val_V_1_12_6 = 8'd0;
#0 conv_buff_val_V_1_12_5 = 8'd0;
#0 conv_buff_val_V_1_12_4 = 8'd0;
#0 conv_buff_val_V_1_12_3 = 8'd0;
#0 conv_buff_val_V_1_12_2 = 8'd0;
#0 conv_buff_val_V_1_12_1 = 8'd0;
#0 conv_buff_val_V_1_12 = 8'd0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

conv_layer2_conv_bVr #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
conv_layer2_weights_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer2_weights_s_address0),
    .ce0(conv_layer2_weights_s_ce0),
    .q0(conv_layer2_weights_s_q0),
    .address1(conv_layer2_weights_s_address1),
    .ce1(conv_layer2_weights_s_ce1),
    .q1(conv_layer2_weights_s_q1),
    .address2(conv_layer2_weights_s_address2),
    .ce2(conv_layer2_weights_s_ce2),
    .q2(conv_layer2_weights_s_q2),
    .address3(conv_layer2_weights_s_address3),
    .ce3(conv_layer2_weights_s_ce3),
    .q3(conv_layer2_weights_s_q3),
    .address4(conv_layer2_weights_s_address4),
    .ce4(conv_layer2_weights_s_ce4),
    .q4(conv_layer2_weights_s_q4),
    .address5(conv_layer2_weights_s_address5),
    .ce5(conv_layer2_weights_s_ce5),
    .q5(conv_layer2_weights_s_q5),
    .address6(conv_layer2_weights_s_address6),
    .ce6(conv_layer2_weights_s_ce6),
    .q6(conv_layer2_weights_s_q6),
    .address7(conv_layer2_weights_s_address7),
    .ce7(conv_layer2_weights_s_ce7),
    .q7(conv_layer2_weights_s_q7),
    .address8(conv_layer2_weights_s_address8),
    .ce8(conv_layer2_weights_s_ce8),
    .q8(conv_layer2_weights_s_q8),
    .address9(conv_layer2_weights_s_address9),
    .ce9(conv_layer2_weights_s_ce9),
    .q9(conv_layer2_weights_s_q9),
    .address10(conv_layer2_weights_s_address10),
    .ce10(conv_layer2_weights_s_ce10),
    .q10(conv_layer2_weights_s_q10),
    .address11(conv_layer2_weights_s_address11),
    .ce11(conv_layer2_weights_s_ce11),
    .q11(conv_layer2_weights_s_q11),
    .address12(conv_layer2_weights_s_address12),
    .ce12(conv_layer2_weights_s_ce12),
    .q12(conv_layer2_weights_s_q12),
    .address13(conv_layer2_weights_s_address13),
    .ce13(conv_layer2_weights_s_ce13),
    .q13(conv_layer2_weights_s_q13),
    .address14(conv_layer2_weights_s_address14),
    .ce14(conv_layer2_weights_s_ce14),
    .q14(conv_layer2_weights_s_q14),
    .address15(conv_layer2_weights_s_address15),
    .ce15(conv_layer2_weights_s_ce15),
    .q15(conv_layer2_weights_s_q15),
    .address16(conv_layer2_weights_s_address16),
    .ce16(conv_layer2_weights_s_ce16),
    .q16(conv_layer2_weights_s_q16),
    .address17(conv_layer2_weights_s_address17),
    .ce17(conv_layer2_weights_s_ce17),
    .q17(conv_layer2_weights_s_q17),
    .address18(conv_layer2_weights_s_address18),
    .ce18(conv_layer2_weights_s_ce18),
    .q18(conv_layer2_weights_s_q18),
    .address19(conv_layer2_weights_s_address19),
    .ce19(conv_layer2_weights_s_ce19),
    .q19(conv_layer2_weights_s_q19),
    .address20(conv_layer2_weights_s_address20),
    .ce20(conv_layer2_weights_s_ce20),
    .q20(conv_layer2_weights_s_q20),
    .address21(conv_layer2_weights_s_address21),
    .ce21(conv_layer2_weights_s_ce21),
    .q21(conv_layer2_weights_s_q21),
    .address22(conv_layer2_weights_s_address22),
    .ce22(conv_layer2_weights_s_ce22),
    .q22(conv_layer2_weights_s_q22),
    .address23(conv_layer2_weights_s_address23),
    .ce23(conv_layer2_weights_s_ce23),
    .q23(conv_layer2_weights_s_q23),
    .address24(conv_layer2_weights_s_address24),
    .ce24(conv_layer2_weights_s_ce24),
    .q24(conv_layer2_weights_s_q24),
    .address25(conv_layer2_weights_s_address25),
    .ce25(conv_layer2_weights_s_ce25),
    .q25(conv_layer2_weights_s_q25),
    .address26(conv_layer2_weights_s_address26),
    .ce26(conv_layer2_weights_s_ce26),
    .q26(conv_layer2_weights_s_q26),
    .address27(conv_layer2_weights_s_address27),
    .ce27(conv_layer2_weights_s_ce27),
    .q27(conv_layer2_weights_s_q27),
    .address28(conv_layer2_weights_s_address28),
    .ce28(conv_layer2_weights_s_ce28),
    .q28(conv_layer2_weights_s_q28),
    .address29(conv_layer2_weights_s_address29),
    .ce29(conv_layer2_weights_s_ce29),
    .q29(conv_layer2_weights_s_q29),
    .address30(conv_layer2_weights_s_address30),
    .ce30(conv_layer2_weights_s_ce30),
    .q30(conv_layer2_weights_s_q30),
    .address31(conv_layer2_weights_s_address31),
    .ce31(conv_layer2_weights_s_ce31),
    .q31(conv_layer2_weights_s_q31)
);

conv_layer2_scalebWr #(
    .DataWidth( 20 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
scale_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(scale_1_V_address0),
    .ce0(scale_1_V_ce0),
    .q0(scale_1_V_q0)
);

conv_layer2_conv_bXr #(
    .DataWidth( 11 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
conv_layer2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer2_bias_V_address0),
    .ce0(conv_layer2_bias_V_ce0),
    .q0(conv_layer2_bias_V_q0)
);

conv_layer2_scalebYs #(
    .DataWidth( 20 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
scale_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(scale_0_V_address0),
    .ce0(scale_0_V_ce0),
    .q0(scale_0_V_q0)
);

conv_layer2_kernebZs #(
    .DataWidth( 24 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
kernel_sum_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernel_sum_V_address0),
    .ce0(kernel_sum_V_ce0),
    .we0(kernel_sum_V_we0),
    .d0(kernel_sum_V_d0),
    .q0(kernel_sum_V_q0)
);

nnet_mul_mul_24s_b0s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 24 ))
nnet_mul_mul_24s_b0s_U19(
    .din0(kernel_sum_V_q0),
    .din1(tmp_14_fu_3766_p1),
    .dout(tmp_14_fu_3766_p2)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U20(
    .din0(conv_layer2_weights_s_q0),
    .din1(conv_buff_val_V_1_0_s),
    .din2(grp_fu_3773_p2),
    .dout(grp_fu_3773_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U21(
    .din0(conv_layer2_weights_s_q2),
    .din1(conv_buff_val_V_1_2_s),
    .din2(grp_fu_3781_p2),
    .dout(grp_fu_3781_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U22(
    .din0(conv_layer2_weights_s_q6),
    .din1(conv_buff_val_V_1_6_s),
    .din2(grp_fu_3789_p2),
    .dout(grp_fu_3789_p3)
);

nnet_mac_muladd_8b2s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
nnet_mac_muladd_8b2s_U23(
    .din0(conv_layer2_weights_39_reg_4169),
    .din1(conv_buff_val_V_1_4_s),
    .din2(sum_V_0_0_3_fu_3086_p2),
    .dout(grp_fu_3797_p3)
);

nnet_mac_muladd_8b3s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
nnet_mac_muladd_8b3s_U24(
    .din0(conv_layer2_weights_40_reg_4174),
    .din1(conv_buff_val_V_1_5_s),
    .din2(tmp4_reg_4179),
    .dout(grp_fu_3806_p3)
);

nnet_mac_muladd_8b4t #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
nnet_mac_muladd_8b4t_U25(
    .din0(conv_layer2_weights_s_q8),
    .din1(conv_buff_val_V_1_8_s),
    .din2(sum_V_0_0_7_fu_3116_p2),
    .dout(grp_fu_3815_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U26(
    .din0(conv_layer2_weights_s_q11),
    .din1(conv_buff_val_V_1_11_10),
    .din2(grp_fu_3823_p2),
    .dout(grp_fu_3823_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U27(
    .din0(conv_layer2_weights_s_q14),
    .din1(conv_buff_val_V_1_14),
    .din2(grp_fu_3831_p2),
    .dout(grp_fu_3831_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U28(
    .din0(conv_layer2_weights_s_q16),
    .din1(conv_buff_val_V_1_12_1),
    .din2(grp_fu_3839_p2),
    .dout(grp_fu_3839_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U29(
    .din0(conv_layer2_weights_44_reg_4254),
    .din1(conv_buff_val_V_1_9_s),
    .din2(grp_fu_3847_p2),
    .dout(grp_fu_3847_p3)
);

nnet_mac_muladd_8b3s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
nnet_mac_muladd_8b3s_U30(
    .din0(conv_layer2_weights_48_reg_4264),
    .din1(conv_buff_val_V_1_13),
    .din2(tmp11_reg_4279),
    .dout(grp_fu_3856_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U31(
    .din0(conv_layer2_weights_s_q19),
    .din1(conv_buff_val_V_1_11_6),
    .din2(grp_fu_3865_p2),
    .dout(grp_fu_3865_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U32(
    .din0(conv_layer2_weights_s_q21),
    .din1(conv_buff_val_V_1_11_4),
    .din2(grp_fu_3873_p2),
    .dout(grp_fu_3873_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U33(
    .din0(conv_layer2_weights_s_q23),
    .din1(conv_buff_val_V_1_11_2),
    .din2(grp_fu_3881_p2),
    .dout(grp_fu_3881_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U34(
    .din0(conv_layer2_weights_s_q25),
    .din1(conv_buff_val_V_1_11),
    .din2(grp_fu_3889_p2),
    .dout(grp_fu_3889_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U35(
    .din0(conv_layer2_weights_s_q27),
    .din1(conv_buff_val_V_1_12_6),
    .din2(grp_fu_3897_p2),
    .dout(grp_fu_3897_p3)
);

nnet_mac_muladd_8b1s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nnet_mac_muladd_8b1s_U36(
    .din0(conv_layer2_weights_s_q29),
    .din1(conv_buff_val_V_1_12_4),
    .din2(grp_fu_3905_p2),
    .dout(grp_fu_3905_p3)
);

nnet_mac_muladd_8b3s #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
nnet_mac_muladd_8b3s_U37(
    .din0(conv_layer2_weights_s_q31),
    .din1(conv_buff_val_V_1_12_2),
    .din2(tmp26_reg_4284),
    .dout(grp_fu_3913_p3)
);

nnet_mac_muladd_8b5t #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 20 ))
nnet_mac_muladd_8b5t_U38(
    .din0(conv_layer2_weights_51_reg_4294),
    .din1(conv_buff_val_V_1_11_7),
    .din2(sum_V_0_1_7_reg_4289),
    .dout(grp_fu_3921_p3)
);

nnet_mac_muladd_1b6t #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 44 ),
    .dout_WIDTH( 44 ))
nnet_mac_muladd_1b6t_U39(
    .din0(f_op_V_4_reg_4364),
    .din1(grp_fu_3930_p1),
    .din2(p_Val2_5_reg_4359),
    .dout(grp_fu_3930_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond_flatten_fu_2498_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond_flatten_fu_2498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state10)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if (((exitcond_flatten_fu_2498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        a_reg_973 <= a_1_reg_3944;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        a_reg_973 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_2408_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        b_reg_984 <= b_1_reg_3962;
    end else if (((exitcond_fu_2350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        b_reg_984 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_2437_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        c_reg_995 <= c_1_reg_3975;
    end else if (((exitcond9_fu_2379_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        c_reg_995 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_2408_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        d_reg_1006 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_reg_1006 <= d_1_reg_3988;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond6_reg_4032 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_reg_1062 <= filter_1_reg_4036;
    end else if (((exitcond_flatten_fu_2498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        filter_reg_1062 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op106_read_state8 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (exitcond7_fu_2474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_1_reg_1039 <= 4'd0;
    end else if ((~((ap_predicate_op4953_read_state33 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state33))) begin
        i_1_reg_1039 <= i_1_mid2_reg_4027;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_2350_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_1017 <= 8'd0;
    end else if ((~((ap_predicate_op106_read_state8 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (exitcond7_fu_2474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i_reg_1017 <= i_9_fu_2480_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op106_read_state8 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (exitcond7_fu_2474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        indvar_flatten_reg_1028 <= 8'd0;
    end else if ((~((ap_predicate_op4953_read_state33 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state33))) begin
        indvar_flatten_reg_1028 <= indvar_flatten_next_reg_4013;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op106_read_state8 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (exitcond7_fu_2474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        j_reg_1050 <= 4'd0;
    end else if ((~((ap_predicate_op4953_read_state33 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state33))) begin
        j_reg_1050 <= j_4_reg_4391;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        a_1_reg_3944 <= a_1_fu_2356_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        b_1_reg_3962 <= b_1_fu_2385_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c_1_reg_3975 <= c_1_fu_2414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_predicate_op4953_read_state33 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (ap_predicate_op4953_read_state33 == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | (~(((ap_predicate_op1068_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0)) | ((ap_predicate_op809_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0))) & (ap_predicate_op1068_read_state18 == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~(((ap_predicate_op1068_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0)) | ((ap_predicate_op809_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0))) & (ap_predicate_op809_read_state18 == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state40)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state38)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state37)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state36)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state35)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state34)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state32)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state30)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state29)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state28)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state25)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state24)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state23)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state22)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state21)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state19)) | (~((ap_predicate_op106_read_state8 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (ap_predicate_op106_read_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        conv_buff_val_V_1_0_s <= conv_buff_val_V_1_1_s;
        conv_buff_val_V_1_10 <= conv_buff_val_V_1_11_9;
        conv_buff_val_V_1_10_1 <= conv_buff_val_V_1_10;
        conv_buff_val_V_1_10_10 <= conv_buff_val_V_1_11_10;
        conv_buff_val_V_1_10_2 <= conv_buff_val_V_1_10_1;
        conv_buff_val_V_1_10_3 <= conv_buff_val_V_1_10_2;
        conv_buff_val_V_1_10_4 <= conv_buff_val_V_1_10_3;
        conv_buff_val_V_1_10_5 <= conv_buff_val_V_1_10_4;
        conv_buff_val_V_1_10_6 <= conv_buff_val_V_1_10_5;
        conv_buff_val_V_1_10_7 <= conv_buff_val_V_1_10_6;
        conv_buff_val_V_1_10_8 <= conv_buff_val_V_1_10_7;
        conv_buff_val_V_1_10_9 <= conv_buff_val_V_1_10_8;
        conv_buff_val_V_1_11 <= conv_buff_val_V_1_12_7;
        conv_buff_val_V_1_11_1 <= conv_buff_val_V_1_11;
        conv_buff_val_V_1_11_10 <= conv_buff_val_V_1_12_8;
        conv_buff_val_V_1_11_2 <= conv_buff_val_V_1_11_1;
        conv_buff_val_V_1_11_3 <= conv_buff_val_V_1_11_2;
        conv_buff_val_V_1_11_4 <= conv_buff_val_V_1_11_3;
        conv_buff_val_V_1_11_5 <= conv_buff_val_V_1_11_4;
        conv_buff_val_V_1_11_6 <= conv_buff_val_V_1_11_5;
        conv_buff_val_V_1_11_7 <= conv_buff_val_V_1_11_6;
        conv_buff_val_V_1_11_8 <= conv_buff_val_V_1_11_7;
        conv_buff_val_V_1_11_9 <= conv_buff_val_V_1_11_8;
        conv_buff_val_V_1_12 <= in_V_V_dout;
        conv_buff_val_V_1_12_1 <= conv_buff_val_V_1_12;
        conv_buff_val_V_1_12_2 <= conv_buff_val_V_1_12_1;
        conv_buff_val_V_1_12_3 <= conv_buff_val_V_1_12_2;
        conv_buff_val_V_1_12_4 <= conv_buff_val_V_1_12_3;
        conv_buff_val_V_1_12_5 <= conv_buff_val_V_1_12_4;
        conv_buff_val_V_1_12_6 <= conv_buff_val_V_1_12_5;
        conv_buff_val_V_1_12_7 <= conv_buff_val_V_1_12_6;
        conv_buff_val_V_1_12_8 <= conv_buff_val_V_1_13;
        conv_buff_val_V_1_13 <= conv_buff_val_V_1_14;
        conv_buff_val_V_1_14 <= conv_buff_val_V_1_15;
        conv_buff_val_V_1_15 <= conv_buff_val_V_1_16;
        conv_buff_val_V_1_16 <= conv_buff_val_V_1_17;
        conv_buff_val_V_1_17 <= conv_buff_val_V_1_18;
        conv_buff_val_V_1_18 <= conv_buff_val_V_1_19;
        conv_buff_val_V_1_19 <= conv_buff_val_V_1_20;
        conv_buff_val_V_1_1_s <= conv_buff_val_V_1_2_s;
        conv_buff_val_V_1_20 <= conv_buff_val_V_1_21;
        conv_buff_val_V_1_21 <= conv_buff_val_V_1_22;
        conv_buff_val_V_1_22 <= conv_buff_val_V_1_23;
        conv_buff_val_V_1_23 <= conv_buff_val_V_1_24;
        conv_buff_val_V_1_24 <= conv_buff_val_V_1_25;
        conv_buff_val_V_1_25 <= conv_buff_val_V_1_26;
        conv_buff_val_V_1_26 <= conv_buff_val_V_1_27;
        conv_buff_val_V_1_27 <= conv_buff_val_V_1_28;
        conv_buff_val_V_1_28 <= conv_buff_val_V_1_29;
        conv_buff_val_V_1_29 <= conv_buff_val_V_1_30;
        conv_buff_val_V_1_2_s <= conv_buff_val_V_1_3_s;
        conv_buff_val_V_1_30 <= conv_buff_val_V_1_31;
        conv_buff_val_V_1_31 <= conv_buff_val_V_1_32;
        conv_buff_val_V_1_32 <= conv_buff_val_V_1_33;
        conv_buff_val_V_1_33 <= conv_buff_val_V_1_34;
        conv_buff_val_V_1_34 <= conv_buff_val_V_1_35;
        conv_buff_val_V_1_35 <= conv_buff_val_V_1_36;
        conv_buff_val_V_1_36 <= conv_buff_val_V_1_37;
        conv_buff_val_V_1_37 <= conv_buff_val_V_1_38;
        conv_buff_val_V_1_38 <= conv_buff_val_V_1_39;
        conv_buff_val_V_1_39 <= conv_buff_val_V_1_40;
        conv_buff_val_V_1_3_s <= conv_buff_val_V_1_4_s;
        conv_buff_val_V_1_40 <= conv_buff_val_V_1_41;
        conv_buff_val_V_1_41 <= conv_buff_val_V_1_42;
        conv_buff_val_V_1_42 <= conv_buff_val_V_1_43;
        conv_buff_val_V_1_43 <= conv_buff_val_V_1_44;
        conv_buff_val_V_1_44 <= conv_buff_val_V_1_45;
        conv_buff_val_V_1_45 <= conv_buff_val_V_1_46;
        conv_buff_val_V_1_46 <= conv_buff_val_V_1_47;
        conv_buff_val_V_1_47 <= conv_buff_val_V_1_48;
        conv_buff_val_V_1_48 <= conv_buff_val_V_1_49;
        conv_buff_val_V_1_49 <= conv_buff_val_V_1_50;
        conv_buff_val_V_1_4_s <= conv_buff_val_V_1_5_s;
        conv_buff_val_V_1_50 <= conv_buff_val_V_1_51;
        conv_buff_val_V_1_51 <= conv_buff_val_V_1_52;
        conv_buff_val_V_1_52 <= conv_buff_val_V_1_53;
        conv_buff_val_V_1_53 <= conv_buff_val_V_1_54;
        conv_buff_val_V_1_54 <= conv_buff_val_V_1_55;
        conv_buff_val_V_1_55 <= conv_buff_val_V_1_56;
        conv_buff_val_V_1_56 <= conv_buff_val_V_1_57;
        conv_buff_val_V_1_57 <= conv_buff_val_V_1_58;
        conv_buff_val_V_1_58 <= conv_buff_val_V_1_59;
        conv_buff_val_V_1_59 <= conv_buff_val_V_1_60;
        conv_buff_val_V_1_5_s <= conv_buff_val_V_1_6_s;
        conv_buff_val_V_1_60 <= conv_buff_val_V_1_61;
        conv_buff_val_V_1_61 <= conv_buff_val_V_1_62;
        conv_buff_val_V_1_62 <= conv_buff_val_V_1_63;
        conv_buff_val_V_1_63 <= conv_buff_val_V_1_64;
        conv_buff_val_V_1_64 <= conv_buff_val_V_1_65;
        conv_buff_val_V_1_65 <= conv_buff_val_V_1_66;
        conv_buff_val_V_1_66 <= conv_buff_val_V_1_67;
        conv_buff_val_V_1_67 <= conv_buff_val_V_1_68;
        conv_buff_val_V_1_68 <= conv_buff_val_V_1_69;
        conv_buff_val_V_1_69 <= conv_buff_val_V_1_70;
        conv_buff_val_V_1_6_s <= conv_buff_val_V_1_7_s;
        conv_buff_val_V_1_70 <= conv_buff_val_V_1_71;
        conv_buff_val_V_1_71 <= conv_buff_val_V_1_72;
        conv_buff_val_V_1_72 <= conv_buff_val_V_1_73;
        conv_buff_val_V_1_73 <= conv_buff_val_V_1_74;
        conv_buff_val_V_1_74 <= conv_buff_val_V_1_75;
        conv_buff_val_V_1_75 <= conv_buff_val_V_1_76;
        conv_buff_val_V_1_76 <= conv_buff_val_V_1_77;
        conv_buff_val_V_1_77 <= conv_buff_val_V_1_78;
        conv_buff_val_V_1_78 <= conv_buff_val_V_1_79;
        conv_buff_val_V_1_79 <= conv_buff_val_V_1_80;
        conv_buff_val_V_1_7_s <= conv_buff_val_V_1_8_s;
        conv_buff_val_V_1_80 <= conv_buff_val_V_1_81;
        conv_buff_val_V_1_81 <= conv_buff_val_V_1_82;
        conv_buff_val_V_1_82 <= conv_buff_val_V_1_83;
        conv_buff_val_V_1_83 <= conv_buff_val_V_1_84;
        conv_buff_val_V_1_84 <= conv_buff_val_V_1_85;
        conv_buff_val_V_1_85 <= conv_buff_val_V_1_86;
        conv_buff_val_V_1_86 <= conv_buff_val_V_1_87;
        conv_buff_val_V_1_87 <= conv_buff_val_V_1_88;
        conv_buff_val_V_1_88 <= conv_buff_val_V_1_89;
        conv_buff_val_V_1_89 <= conv_buff_val_V_1_90;
        conv_buff_val_V_1_8_s <= conv_buff_val_V_1_9_s;
        conv_buff_val_V_1_90 <= conv_buff_val_V_1_91;
        conv_buff_val_V_1_91 <= conv_buff_val_V_1_92;
        conv_buff_val_V_1_92 <= conv_buff_val_V_1_93;
        conv_buff_val_V_1_93 <= conv_buff_val_V_1_94;
        conv_buff_val_V_1_94 <= conv_buff_val_V_1_95;
        conv_buff_val_V_1_95 <= conv_buff_val_V_1_96;
        conv_buff_val_V_1_96 <= conv_buff_val_V_1_97;
        conv_buff_val_V_1_97 <= conv_buff_val_V_1_98;
        conv_buff_val_V_1_98 <= conv_buff_val_V_1_99;
        conv_buff_val_V_1_99 <= conv_buff_val_V_1_10_9;
        conv_buff_val_V_1_9_s <= conv_buff_val_V_1_10_10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond6_reg_4032 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_39_reg_4169 <= conv_layer2_weights_s_q4;
        conv_layer2_weights_40_reg_4174 <= conv_layer2_weights_s_q5;
        sum_V_0_0_1_reg_4159 <= grp_fu_3773_p3;
        tmp1_reg_4164 <= grp_fu_3781_p3;
        tmp4_reg_4179 <= grp_fu_3789_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond6_reg_4032_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_44_reg_4254 <= conv_layer2_weights_s_q9;
        conv_layer2_weights_45_reg_4259 <= conv_layer2_weights_s_q10;
        conv_layer2_weights_48_reg_4264 <= conv_layer2_weights_s_q13;
        tmp11_reg_4279 <= grp_fu_3831_p3;
        tmp26_reg_4284 <= grp_fu_3839_p3;
        tmp6_reg_4269 <= grp_fu_3815_p3;
        tmp9_reg_4274 <= grp_fu_3823_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond6_reg_4032_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        conv_layer2_weights_51_reg_4294 <= conv_layer2_weights_s_q18;
        tmp15_reg_4299 <= grp_fu_3865_p3;
        tmp17_reg_4304 <= grp_fu_3873_p3;
        tmp18_reg_4309 <= grp_fu_3881_p3;
        tmp21_reg_4314 <= grp_fu_3889_p3;
        tmp22_reg_4319 <= grp_fu_3897_p3;
        tmp24_reg_4324 <= grp_fu_3905_p3;
        tmp25_reg_4329 <= grp_fu_3913_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        d_1_reg_3988 <= d_1_fu_2443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_2498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        exitcond1_reg_4018 <= exitcond1_fu_2522_p2;
        i_1_mid2_reg_4027 <= i_1_mid2_fu_2536_p3;
        tmp_19_mid2_reg_4023 <= tmp_19_mid2_fu_2528_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond6_reg_4032 <= exitcond6_fu_2544_p2;
        exitcond6_reg_4032_pp0_iter1_reg <= exitcond6_reg_4032;
        filter_reg_1062_pp0_iter1_reg <= filter_reg_1062;
        tmp_58_reg_4041_pp0_iter1_reg[9 : 5] <= tmp_58_reg_4041[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond6_reg_4032_pp0_iter2_reg <= exitcond6_reg_4032_pp0_iter1_reg;
        exitcond6_reg_4032_pp0_iter3_reg <= exitcond6_reg_4032_pp0_iter2_reg;
        exitcond6_reg_4032_pp0_iter4_reg <= exitcond6_reg_4032_pp0_iter3_reg;
        exitcond6_reg_4032_pp0_iter5_reg <= exitcond6_reg_4032_pp0_iter4_reg;
        exitcond6_reg_4032_pp0_iter6_reg <= exitcond6_reg_4032_pp0_iter5_reg;
        filter_reg_1062_pp0_iter2_reg <= filter_reg_1062_pp0_iter1_reg;
        filter_reg_1062_pp0_iter3_reg <= filter_reg_1062_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond6_reg_4032_pp0_iter4_reg == 1'd0))) begin
        f_op_V_4_reg_4364 <= conv_layer2_bias_V_q0;
        p_Val2_5_reg_4359 <= p_Val2_5_fu_3519_p2;
        scale_0_V_load_reg_4369 <= scale_0_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_1_reg_4036 <= filter_1_fu_2550_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten_next_reg_4013 <= indvar_flatten_next_fu_2504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond6_reg_4032_pp0_iter5_reg == 1'd0))) begin
        isneg_reg_4379 <= r_V_8_fu_3623_p2[32'd23];
        tmp_135_reg_4374 <= tmp_135_fu_3619_p1;
        tmp_30_reg_4385 <= {{r_V_8_fu_3623_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op1068_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0)) | ((ap_predicate_op809_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state18))) begin
        j_4_reg_4391 <= j_4_fu_3753_p3;
        tmp_24_reg_4396 <= tmp_24_fu_3760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_2350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_sum_V_addr_reg_3954 <= tmp_s_fu_2362_p1;
        tmp_57_cast_reg_3949[5 : 1] <= tmp_57_cast_fu_2375_p1[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond6_reg_4032_pp0_iter2_reg == 1'd0))) begin
        sum_V_0_1_7_reg_4289 <= sum_V_0_1_7_fu_3253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond6_reg_4032_pp0_iter3_reg == 1'd0))) begin
        sum_V_1_1_7_reg_4334 <= sum_V_1_1_7_fu_3492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_2379_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_129_reg_3967[7 : 1] <= tmp_129_fu_2400_p3[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond6_fu_2544_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_58_reg_4041[9 : 5] <= tmp_58_fu_2556_p3[9 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_2408_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_63_cast_reg_3980[10 : 3] <= tmp_63_cast_fu_2429_p3[10 : 3];
    end
end

always @ (*) begin
    if ((exitcond6_fu_2544_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_fu_2498_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond6_reg_4032 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_filter_phi_fu_1066_p4 = filter_1_reg_4036;
    end else begin
        ap_phi_mux_filter_phi_fu_1066_p4 = filter_reg_1062;
    end
end

always @ (*) begin
    if (((exitcond_flatten_fu_2498_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        conv_layer2_bias_V_ce0 = 1'b1;
    end else begin
        conv_layer2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_address0 = tmp_59_fu_2564_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_layer2_weights_s_address0 = tmp_128_cast_fu_2458_p1;
    end else begin
        conv_layer2_weights_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv_layer2_weights_s_ce0 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce1 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce10 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce11 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce12 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce13 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce14 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce15 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce16 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce16 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce17 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce17 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce18 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce18 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce19 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce19 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce2 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce20 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce20 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce21 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce21 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce22 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce22 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce23 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce23 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce24 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce24 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce25 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce25 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce26 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce26 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce27 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce27 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce28 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce28 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce29 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce29 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce3 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce30 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce30 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer2_weights_s_ce31 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce31 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce4 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce5 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce6 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce7 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce8 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer2_weights_s_ce9 = 1'b1;
    end else begin
        conv_layer2_weights_s_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state40)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state38)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state37)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state36)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state35)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state34)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state32)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state30)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state29)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state28)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state25)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state24)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state23)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state22)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state21)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state19)) | ((tmp_19_mid2_reg_4023 == 1'd1) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (tmp_24_reg_4396 == 1'd0) & (1'b1 == ap_CS_fsm_state33)) | ((tmp_24_fu_3760_p2 == 1'd1) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((tmp_19_mid2_reg_4023 == 1'd1) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (tmp_24_fu_3760_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((grp_nbreadreq_fu_500_p3 == 1'd1) & (exitcond7_fu_2474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op4953_read_state33 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (ap_predicate_op4953_read_state33 == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | (~(((ap_predicate_op1068_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0)) | ((ap_predicate_op809_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0))) & (ap_predicate_op1068_read_state18 == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~(((ap_predicate_op1068_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0)) | ((ap_predicate_op809_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0))) & (ap_predicate_op809_read_state18 == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state40)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state38)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state37)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state36)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state35)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state34)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state32)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state30)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state29)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state28)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state25)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state24)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state23)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state22)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state21)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | (~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state19)) | (~((ap_predicate_op106_read_state8 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (ap_predicate_op106_read_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        kernel_sum_V_address0 = tmp_25_fu_3402_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        kernel_sum_V_address0 = kernel_sum_V_addr_reg_3954;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_sum_V_address0 = tmp_s_fu_2362_p1;
    end else begin
        kernel_sum_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        kernel_sum_V_ce0 = 1'b1;
    end else begin
        kernel_sum_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        kernel_sum_V_d0 = tmp_14_fu_3766_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        kernel_sum_V_d0 = tmp_23_fu_2467_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_sum_V_d0 = 24'd0;
    end else begin
        kernel_sum_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | ((exitcond_fu_2350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        kernel_sum_V_we0 = 1'b1;
    end else begin
        kernel_sum_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond6_reg_4032_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond6_reg_4032_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        scale_0_V_ce0 = 1'b1;
    end else begin
        scale_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        scale_1_V_ce0 = 1'b1;
    end else begin
        scale_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_fu_2350_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond9_fu_2379_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond3_fu_2408_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond5_fu_2437_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state8 : begin
            if ((~((ap_predicate_op106_read_state8 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (exitcond7_fu_2474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if ((~((ap_predicate_op106_read_state8 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (exitcond7_fu_2474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((exitcond_flatten_fu_2498_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond6_fu_2544_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond6_fu_2544_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            if ((~(((ap_predicate_op1068_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0)) | ((ap_predicate_op809_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0))) & (tmp_24_fu_3760_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else if ((~(((ap_predicate_op1068_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0)) | ((ap_predicate_op809_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0))) & (tmp_19_mid2_reg_4023 == 1'd1) & (tmp_24_fu_3760_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if ((~(((ap_predicate_op1068_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0)) | ((ap_predicate_op809_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0))) & (tmp_19_mid2_reg_4023 == 1'd0) & (tmp_24_fu_3760_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if ((~((ap_predicate_op4953_read_state33 == 1'b1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if ((~((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_1_fu_2356_p2 = (a_reg_973 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((exitcond6_reg_4032_pp0_iter6_reg == 1'd0) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exitcond6_reg_4032_pp0_iter6_reg == 1'd0) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exitcond6_reg_4032_pp0_iter6_reg == 1'd0) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp0_stage0_iter7 = ((exitcond6_reg_4032_pp0_iter6_reg == 1'd0) & (out_V_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state18 = (((ap_predicate_op1068_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0)) | ((ap_predicate_op809_read_state18 == 1'b1) & (in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state19 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state20 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state21 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state22 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state23 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state24 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state25 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state26 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state27 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state28 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state29 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state30 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state31 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state32 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state33 = ((ap_predicate_op4953_read_state33 == 1'b1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state34 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state35 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state36 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state37 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state38 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state39 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state40 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((ap_predicate_op106_read_state8 == 1'b1) & (in_V_V_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op1068_read_state18 = ((tmp_24_fu_3760_p2 == 1'd1) & (grp_nbreadreq_fu_500_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op106_read_state8 = ((grp_nbreadreq_fu_500_p3 == 1'd1) & (exitcond7_fu_2474_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op4953_read_state33 = ((tmp_19_mid2_reg_4023 == 1'd1) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (tmp_24_reg_4396 == 1'd0));
end

always @ (*) begin
    ap_predicate_op809_read_state18 = ((tmp_19_mid2_reg_4023 == 1'd1) & (grp_nbreadreq_fu_500_p3 == 1'd1) & (tmp_24_fu_3760_p2 == 1'd0));
end

assign b_1_fu_2385_p2 = (b_reg_984 + 2'd1);

assign brmerge39_i_i_fu_3693_p2 = (p_not38_i_i_fu_3688_p2 | newsignbit_0_not_i_i_fu_3682_p2);

assign brmerge_fu_3716_p2 = (underflow_not_fu_3710_p2 | overflow_fu_3676_p2);

assign brmerge_i_i_fu_3665_p2 = (p_not_i_i_fu_3660_p2 | newsignbit_fu_3652_p3);

assign brmerge_i_i_i_fu_3704_p2 = (underflow_fu_3699_p2 | overflow_fu_3676_p2);

assign c_1_fu_2414_p2 = (c_reg_995 + 2'd1);

assign conv_layer2_bias_V_address0 = tmp_25_fu_3402_p1;

assign conv_layer2_weights_s_address1 = tmp_61_fu_2575_p3;

assign conv_layer2_weights_s_address10 = tmp_79_fu_2707_p3;

assign conv_layer2_weights_s_address11 = tmp_81_fu_2721_p3;

assign conv_layer2_weights_s_address12 = tmp_83_fu_2735_p3;

assign conv_layer2_weights_s_address13 = tmp_85_fu_2749_p3;

assign conv_layer2_weights_s_address14 = tmp_87_fu_2763_p3;

assign conv_layer2_weights_s_address15 = tmp_89_fu_2777_p3;

assign conv_layer2_weights_s_address16 = tmp_119_fu_2791_p3;

assign conv_layer2_weights_s_address17 = tmp_121_fu_2805_p3;

assign conv_layer2_weights_s_address18 = tmp_91_fu_2889_p3;

assign conv_layer2_weights_s_address19 = tmp_93_fu_2903_p3;

assign conv_layer2_weights_s_address2 = tmp_63_fu_2590_p3;

assign conv_layer2_weights_s_address20 = tmp_95_fu_2917_p3;

assign conv_layer2_weights_s_address21 = tmp_97_fu_2931_p3;

assign conv_layer2_weights_s_address22 = tmp_99_fu_2945_p3;

assign conv_layer2_weights_s_address23 = tmp_101_fu_2959_p3;

assign conv_layer2_weights_s_address24 = tmp_103_fu_2973_p3;

assign conv_layer2_weights_s_address25 = tmp_105_fu_2987_p3;

assign conv_layer2_weights_s_address26 = tmp_107_fu_3001_p3;

assign conv_layer2_weights_s_address27 = tmp_109_fu_3015_p3;

assign conv_layer2_weights_s_address28 = tmp_111_fu_3029_p3;

assign conv_layer2_weights_s_address29 = tmp_113_fu_3043_p3;

assign conv_layer2_weights_s_address3 = tmp_65_fu_2605_p3;

assign conv_layer2_weights_s_address30 = tmp_115_fu_3057_p3;

assign conv_layer2_weights_s_address31 = tmp_117_fu_3071_p3;

assign conv_layer2_weights_s_address4 = tmp_67_fu_2620_p3;

assign conv_layer2_weights_s_address5 = tmp_69_fu_2635_p3;

assign conv_layer2_weights_s_address6 = tmp_71_fu_2650_p3;

assign conv_layer2_weights_s_address7 = tmp_73_fu_2665_p3;

assign conv_layer2_weights_s_address8 = tmp_75_fu_2679_p3;

assign conv_layer2_weights_s_address9 = tmp_77_fu_2693_p3;

assign d_1_fu_2443_p2 = (d_reg_1006 + 4'd1);

assign exitcond1_fu_2522_p2 = ((j_reg_1050 == 4'd13) ? 1'b1 : 1'b0);

assign exitcond3_fu_2408_p2 = ((c_reg_995 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond5_fu_2437_p2 = ((d_reg_1006 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond6_fu_2544_p2 = ((ap_phi_mux_filter_phi_fu_1066_p4 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond7_fu_2474_p2 = ((i_reg_1017 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond9_fu_2379_p2 = ((b_reg_984 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_2498_p2 = ((indvar_flatten_reg_1028 == 8'd169) ? 1'b1 : 1'b0);

assign exitcond_fu_2350_p2 = ((a_reg_973 == 5'd16) ? 1'b1 : 1'b0);

assign filter_1_fu_2550_p2 = (ap_phi_mux_filter_phi_fu_1066_p4 + 5'd1);

assign grp_fu_3773_p2 = ($signed(r_V_12_0_0_1_fu_2834_p0) * $signed(r_V_12_0_0_1_fu_2834_p1));

assign grp_fu_3781_p2 = ($signed(r_V_12_0_0_3_fu_2856_p0) * $signed(r_V_12_0_0_3_fu_2856_p1));

assign grp_fu_3789_p2 = ($signed(r_V_12_0_0_7_fu_2878_p0) * $signed(r_V_12_0_0_7_fu_2878_p1));

assign grp_fu_3823_p2 = ($signed(r_V_12_0_1_4_fu_3149_p0) * $signed(r_V_12_0_1_4_fu_3149_p1));

assign grp_fu_3831_p2 = ($signed(r_V_12_0_1_7_fu_3171_p0) * $signed(r_V_12_0_1_7_fu_3171_p1));

assign grp_fu_3839_p2 = ($signed(r_V_12_1_1_7_fu_3193_p0) * $signed(r_V_12_1_1_7_fu_3193_p1));

assign grp_fu_3847_p2 = ($signed(r_V_12_0_1_2_fu_3213_p0) * $signed(r_V_12_0_1_2_fu_3213_p1));

assign grp_fu_3865_p2 = ($signed(r_V_12_1_0_2_fu_3275_p0) * $signed(r_V_12_1_0_2_fu_3275_p1));

assign grp_fu_3873_p2 = ($signed(r_V_12_1_0_4_fu_3297_p0) * $signed(r_V_12_1_0_4_fu_3297_p1));

assign grp_fu_3881_p2 = ($signed(r_V_12_1_0_6_fu_3319_p0) * $signed(r_V_12_1_0_6_fu_3319_p1));

assign grp_fu_3889_p2 = ($signed(r_V_12_1_1_fu_3341_p0) * $signed(r_V_12_1_1_fu_3341_p1));

assign grp_fu_3897_p2 = ($signed(r_V_12_1_1_2_fu_3363_p0) * $signed(r_V_12_1_1_2_fu_3363_p1));

assign grp_fu_3905_p2 = ($signed(r_V_12_1_1_4_fu_3385_p0) * $signed(r_V_12_1_1_4_fu_3385_p1));

assign grp_fu_3930_p1 = grp_fu_3930_p10;

assign grp_fu_3930_p10 = scale_0_V_load_reg_4369;

assign grp_nbreadreq_fu_500_p3 = in_V_V_empty_n;

assign i_1_mid2_fu_2536_p3 = ((exitcond1_fu_2522_p2[0:0] === 1'b1) ? i_8_fu_2486_p2 : i_1_reg_1039);

assign i_8_fu_2486_p2 = (i_1_reg_1039 + 4'd1);

assign i_9_fu_2480_p2 = (i_reg_1017 + 8'd1);

assign i_9_mid1_fu_2510_p2 = (i_1_reg_1039 + 4'd2);

assign indvar_flatten_next_fu_2504_p2 = (indvar_flatten_reg_1028 + 8'd1);

assign j_4_fu_3753_p3 = ((exitcond1_reg_4018[0:0] === 1'b1) ? 4'd1 : j_op_fu_3747_p2);

assign j_op_fu_3747_p2 = (j_reg_1050 + 4'd1);

assign lhs_V_fu_3498_p1 = $signed(sum_V_1_1_7_reg_4334);

assign newsignbit_0_not_i_i_fu_3682_p2 = (newsignbit_fu_3652_p3 ^ 1'd1);

assign newsignbit_fu_3652_p3 = p_Val2_8_fu_3647_p2[32'd7];

assign not_s_i_i4_fu_3567_p2 = (tmp_130_fu_3531_p3 ^ 1'd1);

assign out_V_V_din = ((brmerge_fu_3716_p2[0:0] === 1'b1) ? p_Val2_49_mux_fu_3722_p3 : p_Val2_s_fu_3730_p3);

assign overflow_fu_3676_p2 = (tmp_31_fu_3671_p2 & brmerge_i_i_fu_3665_p2);

assign p_Val2_21_fu_3589_p2 = ($signed(tmp_26_cast_fu_3585_p1) + $signed(p_Val2_7_cast_fu_3547_p1));

assign p_Val2_49_mux_fu_3722_p3 = ((brmerge_i_i_i_fu_3704_p2[0:0] === 1'b1) ? 8'd127 : p_Val2_8_fu_3647_p2);

assign p_Val2_5_fu_3519_p0 = p_Val2_5_fu_3519_p00;

assign p_Val2_5_fu_3519_p00 = scale_1_V_q0;

assign p_Val2_5_fu_3519_p1 = r_V_fu_3505_p2;

assign p_Val2_5_fu_3519_p2 = ($signed({{1'b0}, {p_Val2_5_fu_3519_p0}}) * $signed(p_Val2_5_fu_3519_p1));

assign p_Val2_7_cast_fu_3547_p1 = $signed(tmp_131_fu_3538_p4);

assign p_Val2_8_fu_3647_p2 = ($signed(8'd254) + $signed(tmp_135_reg_4374));

assign p_Val2_s_fu_3730_p3 = ((underflow_fu_3699_p2[0:0] === 1'b1) ? 8'd128 : p_Val2_8_fu_3647_p2);

assign p_a_V_i_cast1_fu_3611_p1 = p_a_V_i_fu_3603_p3;

assign p_a_V_i_cast_fu_3615_p1 = $unsigned(p_a_V_i_cast1_fu_3611_p1);

assign p_a_V_i_fu_3603_p3 = ((tmp_134_fu_3595_p3[0:0] === 1'b1) ? 18'd0 : p_Val2_21_fu_3589_p2);

assign p_not38_i_i_fu_3688_p2 = ((tmp_30_reg_4385 != 16'd65535) ? 1'b1 : 1'b0);

assign p_not_i_i_fu_3660_p2 = ((tmp_30_reg_4385 != 16'd0) ? 1'b1 : 1'b0);

assign qb_assign_5_fu_3579_p2 = (r_i_i4_fu_3573_p2 & qbit_fu_3551_p3);

assign qbit_fu_3551_p3 = grp_fu_3930_p3[32'd27];

assign r_V_12_0_0_1_fu_2834_p0 = conv_layer2_weights_s_q1;

assign r_V_12_0_0_1_fu_2834_p1 = conv_buff_val_V_1_1_s;

assign r_V_12_0_0_3_fu_2856_p0 = conv_layer2_weights_s_q3;

assign r_V_12_0_0_3_fu_2856_p1 = conv_buff_val_V_1_3_s;

assign r_V_12_0_0_7_fu_2878_p0 = conv_layer2_weights_s_q7;

assign r_V_12_0_0_7_fu_2878_p1 = conv_buff_val_V_1_7_s;

assign r_V_12_0_1_2_fu_3213_p0 = conv_layer2_weights_45_reg_4259;

assign r_V_12_0_1_2_fu_3213_p1 = conv_buff_val_V_1_10_10;

assign r_V_12_0_1_4_fu_3149_p0 = conv_layer2_weights_s_q12;

assign r_V_12_0_1_4_fu_3149_p1 = conv_buff_val_V_1_12_8;

assign r_V_12_0_1_7_fu_3171_p0 = conv_layer2_weights_s_q15;

assign r_V_12_0_1_7_fu_3171_p1 = conv_buff_val_V_1_15;

assign r_V_12_1_0_2_fu_3275_p0 = conv_layer2_weights_s_q20;

assign r_V_12_1_0_2_fu_3275_p1 = conv_buff_val_V_1_11_5;

assign r_V_12_1_0_4_fu_3297_p0 = conv_layer2_weights_s_q22;

assign r_V_12_1_0_4_fu_3297_p1 = conv_buff_val_V_1_11_3;

assign r_V_12_1_0_6_fu_3319_p0 = conv_layer2_weights_s_q24;

assign r_V_12_1_0_6_fu_3319_p1 = conv_buff_val_V_1_11_1;

assign r_V_12_1_1_2_fu_3363_p0 = conv_layer2_weights_s_q28;

assign r_V_12_1_1_2_fu_3363_p1 = conv_buff_val_V_1_12_5;

assign r_V_12_1_1_4_fu_3385_p0 = conv_layer2_weights_s_q30;

assign r_V_12_1_1_4_fu_3385_p1 = conv_buff_val_V_1_12_3;

assign r_V_12_1_1_7_fu_3193_p0 = conv_layer2_weights_s_q17;

assign r_V_12_1_1_7_fu_3193_p1 = conv_buff_val_V_1_12;

assign r_V_12_1_1_fu_3341_p0 = conv_layer2_weights_s_q26;

assign r_V_12_1_1_fu_3341_p1 = conv_buff_val_V_1_12_7;

assign r_V_8_fu_3623_p2 = ($signed(24'd16777214) + $signed(p_a_V_i_cast_fu_3615_p1));

assign r_V_fu_3505_p2 = ($signed(lhs_V_fu_3498_p1) - $signed(rhs_V_fu_3501_p1));

assign r_fu_3561_p2 = ((tmp_133_fu_3558_p1 != 27'd0) ? 1'b1 : 1'b0);

assign r_i_i4_fu_3573_p2 = (r_fu_3561_p2 | not_s_i_i4_fu_3567_p2);

assign rhs_V_fu_3501_p1 = kernel_sum_V_q0;

assign scale_0_V_address0 = tmp_25_fu_3402_p1;

assign scale_1_V_address0 = tmp_25_fu_3402_p1;

assign sum_V_0_0_1_cast_fu_3080_p1 = sum_V_0_0_1_reg_4159;

assign sum_V_0_0_3_fu_3086_p2 = ($signed(sum_V_0_0_1_cast_fu_3080_p1) + $signed(tmp1_cast_fu_3083_p1));

assign sum_V_0_0_7_fu_3116_p2 = ($signed(grp_fu_3797_p3) + $signed(tmp3_cast_fu_3113_p1));

assign sum_V_0_1_7_fu_3253_p2 = ($signed(tmp5_fu_3229_p2) + $signed(tmp8_cast_fu_3249_p1));

assign sum_V_1_1_7_fu_3492_p2 = ($signed(tmp12_fu_3444_p2) + $signed(tmp19_cast_fu_3488_p1));

assign tmp10_cast_fu_3240_p1 = grp_fu_3856_p3;

assign tmp12_fu_3444_p2 = ($signed(tmp13_fu_3423_p2) + $signed(tmp16_cast_fu_3440_p1));

assign tmp13_fu_3423_p2 = ($signed(grp_fu_3921_p3) + $signed(tmp15_cast_fu_3420_p1));

assign tmp15_cast_fu_3420_p1 = tmp15_reg_4299;

assign tmp16_cast_fu_3440_p1 = $signed(tmp16_fu_3434_p2);

assign tmp16_fu_3434_p2 = ($signed(tmp17_cast_fu_3428_p1) + $signed(tmp18_cast_fu_3431_p1));

assign tmp17_cast_fu_3428_p1 = tmp17_reg_4304;

assign tmp18_cast_fu_3431_p1 = tmp18_reg_4309;

assign tmp19_cast_fu_3488_p1 = $signed(tmp19_fu_3482_p2);

assign tmp19_fu_3482_p2 = ($signed(tmp20_cast_fu_3462_p1) + $signed(tmp23_cast_fu_3478_p1));

assign tmp1_cast_fu_3083_p1 = tmp1_reg_4164;

assign tmp20_cast_fu_3462_p1 = $signed(tmp20_fu_3456_p2);

assign tmp20_fu_3456_p2 = ($signed(tmp21_cast_fu_3450_p1) + $signed(tmp22_cast_fu_3453_p1));

assign tmp21_cast_fu_3450_p1 = tmp21_reg_4314;

assign tmp22_cast_fu_3453_p1 = tmp22_reg_4319;

assign tmp23_cast_fu_3478_p1 = $signed(tmp23_fu_3472_p2);

assign tmp23_fu_3472_p2 = ($signed(tmp24_cast_fu_3466_p1) + $signed(tmp25_cast_fu_3469_p1));

assign tmp24_cast_fu_3466_p1 = tmp24_reg_4324;

assign tmp25_cast_fu_3469_p1 = tmp25_reg_4329;

assign tmp3_cast_fu_3113_p1 = grp_fu_3806_p3;

assign tmp5_fu_3229_p2 = ($signed(tmp6_reg_4269) + $signed(tmp7_cast_fu_3226_p1));

assign tmp7_cast_fu_3226_p1 = grp_fu_3847_p3;

assign tmp8_cast_fu_3249_p1 = $signed(tmp8_fu_3243_p2);

assign tmp8_fu_3243_p2 = ($signed(tmp9_cast_fu_3234_p1) + $signed(tmp10_cast_fu_3240_p1));

assign tmp9_cast_fu_3234_p1 = tmp9_reg_4274;

assign tmp_100_fu_2954_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd21);

assign tmp_101_fu_2959_p3 = {{54'd0}, {tmp_100_fu_2954_p2}};

assign tmp_102_fu_2968_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd22);

assign tmp_103_fu_2973_p3 = {{54'd0}, {tmp_102_fu_2968_p2}};

assign tmp_104_fu_2982_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd23);

assign tmp_105_fu_2987_p3 = {{54'd0}, {tmp_104_fu_2982_p2}};

assign tmp_106_fu_2996_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd24);

assign tmp_107_fu_3001_p3 = {{54'd0}, {tmp_106_fu_2996_p2}};

assign tmp_108_fu_3010_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd25);

assign tmp_109_fu_3015_p3 = {{54'd0}, {tmp_108_fu_3010_p2}};

assign tmp_110_fu_3024_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd26);

assign tmp_111_fu_3029_p3 = {{54'd0}, {tmp_110_fu_3024_p2}};

assign tmp_112_fu_3038_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd27);

assign tmp_113_fu_3043_p3 = {{54'd0}, {tmp_112_fu_3038_p2}};

assign tmp_114_fu_3052_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd28);

assign tmp_115_fu_3057_p3 = {{54'd0}, {tmp_114_fu_3052_p2}};

assign tmp_116_fu_3066_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd29);

assign tmp_117_fu_3071_p3 = {{54'd0}, {tmp_116_fu_3066_p2}};

assign tmp_118_fu_2786_p2 = (tmp_58_reg_4041 | 10'd30);

assign tmp_119_fu_2791_p3 = {{54'd0}, {tmp_118_fu_2786_p2}};

assign tmp_120_fu_2800_p2 = (tmp_58_reg_4041 | 10'd31);

assign tmp_121_fu_2805_p3 = {{54'd0}, {tmp_120_fu_2800_p2}};

assign tmp_122_fu_2453_p2 = (tmp_63_cast_reg_3980 + tmp_21_cast_fu_2449_p1);

assign tmp_128_cast_fu_2458_p1 = tmp_122_fu_2453_p2;

assign tmp_129_fu_2400_p3 = {{tmp_56_fu_2395_p2}, {1'd0}};

assign tmp_130_fu_3531_p3 = grp_fu_3930_p3[32'd43];

assign tmp_131_fu_3538_p4 = {{grp_fu_3930_p3[43:28]}};

assign tmp_133_fu_3558_p1 = grp_fu_3930_p3[26:0];

assign tmp_134_fu_3595_p3 = p_Val2_21_fu_3589_p2[32'd17];

assign tmp_135_fu_3619_p1 = p_a_V_i_fu_3603_p3[7:0];

assign tmp_14_fu_3766_p1 = 24'd16777195;

assign tmp_15_cast_fu_2391_p1 = b_reg_984;

assign tmp_19_fu_2492_p2 = ((i_8_fu_2486_p2 < 4'd13) ? 1'b1 : 1'b0);

assign tmp_19_mid1_fu_2516_p2 = ((i_9_mid1_fu_2510_p2 < 4'd13) ? 1'b1 : 1'b0);

assign tmp_19_mid2_fu_2528_p3 = ((exitcond1_fu_2522_p2[0:0] === 1'b1) ? tmp_19_mid1_fu_2516_p2 : tmp_19_fu_2492_p2);

assign tmp_20_fu_2420_p1 = c_reg_995;

assign tmp_21_cast_fu_2449_p1 = d_reg_1006;

assign tmp_22_fu_2463_p1 = conv_layer2_weights_s_q0;

assign tmp_23_fu_2467_p2 = ($signed(tmp_22_fu_2463_p1) + $signed(kernel_sum_V_q0));

assign tmp_24_fu_3760_p2 = ((j_4_fu_3753_p3 < 4'd13) ? 1'b1 : 1'b0);

assign tmp_25_fu_3402_p1 = filter_reg_1062_pp0_iter3_reg;

assign tmp_26_cast_fu_3585_p1 = qb_assign_5_fu_3579_p2;

assign tmp_31_fu_3671_p2 = (isneg_reg_4379 ^ 1'd1);

assign tmp_56_fu_2395_p2 = (tmp_15_cast_fu_2391_p1 + tmp_57_cast_reg_3949);

assign tmp_57_cast_fu_2375_p1 = tmp_fu_2367_p3;

assign tmp_57_fu_2424_p2 = (tmp_129_reg_3967 + tmp_20_fu_2420_p1);

assign tmp_58_fu_2556_p3 = {{ap_phi_mux_filter_phi_fu_1066_p4}, {5'd0}};

assign tmp_59_fu_2564_p1 = tmp_58_fu_2556_p3;

assign tmp_60_fu_2569_p2 = (tmp_58_fu_2556_p3 | 10'd1);

assign tmp_61_fu_2575_p3 = {{54'd0}, {tmp_60_fu_2569_p2}};

assign tmp_62_fu_2584_p2 = (tmp_58_fu_2556_p3 | 10'd2);

assign tmp_63_cast_fu_2429_p3 = {{tmp_57_fu_2424_p2}, {3'd0}};

assign tmp_63_fu_2590_p3 = {{54'd0}, {tmp_62_fu_2584_p2}};

assign tmp_64_fu_2599_p2 = (tmp_58_fu_2556_p3 | 10'd3);

assign tmp_65_fu_2605_p3 = {{54'd0}, {tmp_64_fu_2599_p2}};

assign tmp_66_fu_2614_p2 = (tmp_58_fu_2556_p3 | 10'd4);

assign tmp_67_fu_2620_p3 = {{54'd0}, {tmp_66_fu_2614_p2}};

assign tmp_68_fu_2629_p2 = (tmp_58_fu_2556_p3 | 10'd5);

assign tmp_69_fu_2635_p3 = {{54'd0}, {tmp_68_fu_2629_p2}};

assign tmp_70_fu_2644_p2 = (tmp_58_fu_2556_p3 | 10'd6);

assign tmp_71_fu_2650_p3 = {{54'd0}, {tmp_70_fu_2644_p2}};

assign tmp_72_fu_2659_p2 = (tmp_58_fu_2556_p3 | 10'd7);

assign tmp_73_fu_2665_p3 = {{54'd0}, {tmp_72_fu_2659_p2}};

assign tmp_74_fu_2674_p2 = (tmp_58_reg_4041 | 10'd8);

assign tmp_75_fu_2679_p3 = {{54'd0}, {tmp_74_fu_2674_p2}};

assign tmp_76_fu_2688_p2 = (tmp_58_reg_4041 | 10'd9);

assign tmp_77_fu_2693_p3 = {{54'd0}, {tmp_76_fu_2688_p2}};

assign tmp_78_fu_2702_p2 = (tmp_58_reg_4041 | 10'd10);

assign tmp_79_fu_2707_p3 = {{54'd0}, {tmp_78_fu_2702_p2}};

assign tmp_80_fu_2716_p2 = (tmp_58_reg_4041 | 10'd11);

assign tmp_81_fu_2721_p3 = {{54'd0}, {tmp_80_fu_2716_p2}};

assign tmp_82_fu_2730_p2 = (tmp_58_reg_4041 | 10'd12);

assign tmp_83_fu_2735_p3 = {{54'd0}, {tmp_82_fu_2730_p2}};

assign tmp_84_fu_2744_p2 = (tmp_58_reg_4041 | 10'd13);

assign tmp_85_fu_2749_p3 = {{54'd0}, {tmp_84_fu_2744_p2}};

assign tmp_86_fu_2758_p2 = (tmp_58_reg_4041 | 10'd14);

assign tmp_87_fu_2763_p3 = {{54'd0}, {tmp_86_fu_2758_p2}};

assign tmp_88_fu_2772_p2 = (tmp_58_reg_4041 | 10'd15);

assign tmp_89_fu_2777_p3 = {{54'd0}, {tmp_88_fu_2772_p2}};

assign tmp_90_fu_2884_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd16);

assign tmp_91_fu_2889_p3 = {{54'd0}, {tmp_90_fu_2884_p2}};

assign tmp_92_fu_2898_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd17);

assign tmp_93_fu_2903_p3 = {{54'd0}, {tmp_92_fu_2898_p2}};

assign tmp_94_fu_2912_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd18);

assign tmp_95_fu_2917_p3 = {{54'd0}, {tmp_94_fu_2912_p2}};

assign tmp_96_fu_2926_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd19);

assign tmp_97_fu_2931_p3 = {{54'd0}, {tmp_96_fu_2926_p2}};

assign tmp_98_fu_2940_p2 = (tmp_58_reg_4041_pp0_iter1_reg | 10'd20);

assign tmp_99_fu_2945_p3 = {{54'd0}, {tmp_98_fu_2940_p2}};

assign tmp_fu_2367_p3 = {{a_reg_973}, {1'd0}};

assign tmp_s_fu_2362_p1 = a_reg_973;

assign underflow_fu_3699_p2 = (isneg_reg_4379 & brmerge39_i_i_fu_3693_p2);

assign underflow_not_fu_3710_p2 = (underflow_fu_3699_p2 ^ 1'd1);

always @ (posedge ap_clk) begin
    tmp_57_cast_reg_3949[0] <= 1'b0;
    tmp_57_cast_reg_3949[6] <= 1'b0;
    tmp_129_reg_3967[0] <= 1'b0;
    tmp_63_cast_reg_3980[2:0] <= 3'b000;
    tmp_58_reg_4041[4:0] <= 5'b00000;
    tmp_58_reg_4041_pp0_iter1_reg[4:0] <= 5'b00000;
end

endmodule //conv_layer2

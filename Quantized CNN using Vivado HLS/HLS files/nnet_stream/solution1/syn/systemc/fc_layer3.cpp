// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fc_layer3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fc_layer3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fc_layer3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> fc_layer3::ap_ST_fsm_state1 = "1";
const sc_lv<14> fc_layer3::ap_ST_fsm_state2 = "10";
const sc_lv<14> fc_layer3::ap_ST_fsm_state3 = "100";
const sc_lv<14> fc_layer3::ap_ST_fsm_state4 = "1000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state5 = "10000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state6 = "100000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> fc_layer3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fc_layer3::ap_const_lv32_D = "1101";
const sc_lv<32> fc_layer3::ap_const_lv32_3 = "11";
const sc_lv<1> fc_layer3::ap_const_lv1_0 = "0";
const sc_lv<32> fc_layer3::ap_const_lv32_5 = "101";
const sc_lv<32> fc_layer3::ap_const_lv32_7 = "111";
const sc_lv<32> fc_layer3::ap_const_lv32_1 = "1";
const sc_lv<32> fc_layer3::ap_const_lv32_4 = "100";
const sc_lv<32> fc_layer3::ap_const_lv32_6 = "110";
const sc_lv<1> fc_layer3::ap_const_lv1_1 = "1";
const sc_lv<32> fc_layer3::ap_const_lv32_9 = "1001";
const sc_lv<32> fc_layer3::ap_const_lv32_A = "1010";
const sc_lv<32> fc_layer3::ap_const_lv32_B = "1011";
const sc_lv<32> fc_layer3::ap_const_lv32_C = "1100";
const sc_lv<4> fc_layer3::ap_const_lv4_0 = "0000";
const sc_lv<32> fc_layer3::ap_const_lv32_2 = "10";
const sc_lv<10> fc_layer3::ap_const_lv10_0 = "0000000000";
const sc_lv<7> fc_layer3::ap_const_lv7_1 = "1";
const sc_lv<32> fc_layer3::ap_const_lv32_8 = "1000";
const sc_lv<64> fc_layer3::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<24> fc_layer3::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<9> fc_layer3::ap_const_lv9_2 = "10";
const sc_lv<4> fc_layer3::ap_const_lv4_A = "1010";
const sc_lv<4> fc_layer3::ap_const_lv4_1 = "1";
const sc_lv<10> fc_layer3::ap_const_lv10_54 = "1010100";
const sc_lv<7> fc_layer3::ap_const_lv7_54 = "1010100";
const sc_lv<4> fc_layer3::ap_const_lv4_2 = "10";
const sc_lv<3> fc_layer3::ap_const_lv3_3 = "11";
const sc_lv<4> fc_layer3::ap_const_lv4_4 = "100";
const sc_lv<44> fc_layer3::ap_const_lv44_9E204 = "10011110001000000100";
const sc_lv<32> fc_layer3::ap_const_lv32_2B = "101011";
const sc_lv<32> fc_layer3::ap_const_lv32_1C = "11100";
const sc_lv<32> fc_layer3::ap_const_lv32_1B = "11011";
const sc_lv<27> fc_layer3::ap_const_lv27_0 = "000000000000000000000000000";
const sc_lv<32> fc_layer3::ap_const_lv32_23 = "100011";
const sc_lv<32> fc_layer3::ap_const_lv32_10 = "10000";
const sc_lv<9> fc_layer3::ap_const_lv9_0 = "000000000";
const sc_lv<9> fc_layer3::ap_const_lv9_1FF = "111111111";
const sc_lv<8> fc_layer3::ap_const_lv8_7F = "1111111";
const sc_lv<8> fc_layer3::ap_const_lv8_80 = "10000000";
const sc_lv<11> fc_layer3::ap_const_lv11_54 = "1010100";
const sc_lv<31> fc_layer3::ap_const_lv31_9E1F9 = "10011110000111111001";
const sc_lv<32> fc_layer3::ap_const_lv32_C0461C = "110000000100011000011100";
const bool fc_layer3::ap_const_boolean_1 = true;

fc_layer3::fc_layer3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    fc_layer3_weights_V_U = new fc_layer3_fc_layeceu("fc_layer3_weights_V_U");
    fc_layer3_weights_V_U->clk(ap_clk);
    fc_layer3_weights_V_U->reset(ap_rst);
    fc_layer3_weights_V_U->address0(fc_layer3_weights_V_address0);
    fc_layer3_weights_V_U->ce0(fc_layer3_weights_V_ce0);
    fc_layer3_weights_V_U->q0(fc_layer3_weights_V_q0);
    fc_layer3_weights_V_U->address1(fc_layer3_weights_V_address1);
    fc_layer3_weights_V_U->ce1(fc_layer3_weights_V_ce1);
    fc_layer3_weights_V_U->q1(fc_layer3_weights_V_q1);
    fc_layer3_bias_V_U = new fc_layer3_fc_layecfu("fc_layer3_bias_V_U");
    fc_layer3_bias_V_U->clk(ap_clk);
    fc_layer3_bias_V_U->reset(ap_rst);
    fc_layer3_bias_V_U->address0(fc_layer3_bias_V_address0);
    fc_layer3_bias_V_U->ce0(fc_layer3_bias_V_ce0);
    fc_layer3_bias_V_U->q0(fc_layer3_bias_V_q0);
    output_V_U = new fc_layer1_output_V("output_V_U");
    output_V_U->clk(ap_clk);
    output_V_U->reset(ap_rst);
    output_V_U->address0(output_V_address0);
    output_V_U->ce0(output_V_ce0);
    output_V_U->we0(output_V_we0);
    output_V_U->d0(output_V_d0);
    output_V_U->q0(output_V_q0);
    output_V_U->address1(output_V_address1);
    output_V_U->ce1(output_V_ce1);
    output_V_U->we1(output_V_we1);
    output_V_U->d1(output_V_d1);
    output_V_U->q1(output_V_q1);
    nnet_mac_muladd_4cgu_U79 = new nnet_mac_muladd_4cgu<1,1,4,8,7,10>("nnet_mac_muladd_4cgu_U79");
    nnet_mac_muladd_4cgu_U79->din0(grp_fu_760_p0);
    nnet_mac_muladd_4cgu_U79->din1(grp_fu_760_p1);
    nnet_mac_muladd_4cgu_U79->din2(grp_fu_760_p2);
    nnet_mac_muladd_4cgu_U79->dout(grp_fu_760_p3);
    nnet_mac_muladd_4chv_U80 = new nnet_mac_muladd_4chv<1,1,4,8,7,11>("nnet_mac_muladd_4chv_U80");
    nnet_mac_muladd_4chv_U80->din0(grp_fu_768_p0);
    nnet_mac_muladd_4chv_U80->din1(grp_fu_768_p1);
    nnet_mac_muladd_4chv_U80->din2(grp_fu_768_p2);
    nnet_mac_muladd_4chv_U80->dout(grp_fu_768_p3);
    nnet_mac_muladd_9civ_U81 = new nnet_mac_muladd_9civ<1,1,9,8,24,24>("nnet_mac_muladd_9civ_U81");
    nnet_mac_muladd_9civ_U81->din0(grp_fu_776_p0);
    nnet_mac_muladd_9civ_U81->din1(reg_336);
    nnet_mac_muladd_9civ_U81->din2(output_V_q0);
    nnet_mac_muladd_9civ_U81->dout(grp_fu_776_p3);
    nnet_mac_muladd_9civ_U82 = new nnet_mac_muladd_9civ<1,1,9,8,24,24>("nnet_mac_muladd_9civ_U82");
    nnet_mac_muladd_9civ_U82->din0(grp_fu_784_p0);
    nnet_mac_muladd_9civ_U82->din1(reg_340);
    nnet_mac_muladd_9civ_U82->din2(output_V_q1);
    nnet_mac_muladd_9civ_U82->dout(grp_fu_784_p3);
    nnet_mac_muladd_8cjv_U83 = new nnet_mac_muladd_8cjv<1,1,8,4,7,11>("nnet_mac_muladd_8cjv_U83");
    nnet_mac_muladd_8cjv_U83->din0(grp_fu_792_p0);
    nnet_mac_muladd_8cjv_U83->din1(grp_fu_792_p1);
    nnet_mac_muladd_8cjv_U83->din2(grp_fu_792_p2);
    nnet_mac_muladd_8cjv_U83->dout(grp_fu_792_p3);
    nnet_mac_muladd_8ckv_U84 = new nnet_mac_muladd_8ckv<1,1,8,3,7,10>("nnet_mac_muladd_8ckv_U84");
    nnet_mac_muladd_8ckv_U84->din0(grp_fu_800_p0);
    nnet_mac_muladd_8ckv_U84->din1(grp_fu_800_p1);
    nnet_mac_muladd_8ckv_U84->din2(grp_fu_800_p2);
    nnet_mac_muladd_8ckv_U84->dout(grp_fu_800_p3);
    nnet_mac_muladd_9civ_U85 = new nnet_mac_muladd_9civ<1,1,9,8,24,24>("nnet_mac_muladd_9civ_U85");
    nnet_mac_muladd_9civ_U85->din0(grp_fu_808_p0);
    nnet_mac_muladd_9civ_U85->din1(reg_336);
    nnet_mac_muladd_9civ_U85->din2(output_V_q1);
    nnet_mac_muladd_9civ_U85->dout(grp_fu_808_p3);
    nnet_mac_muladd_9civ_U86 = new nnet_mac_muladd_9civ<1,1,9,8,24,24>("nnet_mac_muladd_9civ_U86");
    nnet_mac_muladd_9civ_U86->din0(grp_fu_816_p0);
    nnet_mac_muladd_9civ_U86->din1(reg_340);
    nnet_mac_muladd_9civ_U86->din2(output_V_q0);
    nnet_mac_muladd_9civ_U86->dout(grp_fu_816_p3);
    nnet_mac_muladd_3clv_U87 = new nnet_mac_muladd_3clv<1,1,31,10,44,44>("nnet_mac_muladd_3clv_U87");
    nnet_mac_muladd_3clv_U87->din0(ap_var_for_const0);
    nnet_mac_muladd_3clv_U87->din1(f_op_V_1_reg_982);
    nnet_mac_muladd_3clv_U87->din2(p_Val2_s_reg_977);
    nnet_mac_muladd_3clv_U87->dout(grp_fu_824_p3);
    nnet_mul_mul_25nscmv_U88 = new nnet_mul_mul_25nscmv<1,1,25,8,32>("nnet_mul_mul_25nscmv_U88");
    nnet_mul_mul_25nscmv_U88->din0(tmp_V_fu_836_p0);
    nnet_mul_mul_25nscmv_U88->din1(this_assign_1_reg_1013);
    nnet_mul_mul_25nscmv_U88->dout(tmp_V_fu_836_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in_V_V_empty_n );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( exitcond2_fu_400_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_533_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_533_p2 );

    SC_METHOD(thread_brmerge39_i_fu_705_p2);
    sensitive << ( p_not38_i_reg_1008 );
    sensitive << ( newsignbit_0_not_i_fu_699_p2 );

    SC_METHOD(thread_brmerge_fu_727_p2);
    sensitive << ( overflow_fu_693_p2 );
    sensitive << ( underflow_not_fu_721_p2 );

    SC_METHOD(thread_brmerge_i_fu_683_p2);
    sensitive << ( p_not_i_reg_1003 );
    sensitive << ( newsignbit_fu_675_p3 );

    SC_METHOD(thread_brmerge_i_i_fu_715_p2);
    sensitive << ( underflow_fu_710_p2 );
    sensitive << ( overflow_fu_693_p2 );

    SC_METHOD(thread_exitcond17_2_fu_473_p2);
    sensitive << ( i_4_1_fu_467_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_exitcond1_fu_363_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_278 );

    SC_METHOD(thread_exitcond2_fu_400_p2);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_400_p2 );
    sensitive << ( j_reg_301 );

    SC_METHOD(thread_exitcond_fu_533_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i2_reg_325 );

    SC_METHOD(thread_fc_layer3_bias_V_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_2_fu_545_p1 );

    SC_METHOD(thread_fc_layer3_bias_V_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_fc_layer3_weights_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( phi_mul_cast_fu_358_p1 );
    sensitive << ( tmp_12_cast_fu_432_p1 );
    sensitive << ( tmp_16_cast_fu_483_p1 );

    SC_METHOD(thread_fc_layer3_weights_V_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_14_cast_fu_446_p1 );
    sensitive << ( tmp_18_cast_fu_501_p1 );

    SC_METHOD(thread_fc_layer3_weights_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_fc_layer3_weights_V_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_760_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_fu_760_p00 );

    SC_METHOD(thread_grp_fu_760_p00);
    sensitive << ( i1_reg_313 );

    SC_METHOD(thread_grp_fu_760_p1);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_760_p2);
    sensitive << ( tmp_1_cast_reg_875 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_768_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_fu_768_p00 );

    SC_METHOD(thread_grp_fu_768_p00);
    sensitive << ( i_4_s_fu_436_p2 );

    SC_METHOD(thread_grp_fu_768_p1);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_768_p2);
    sensitive << ( tmp_1_cast1_reg_869 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_776_p0);
    sensitive << ( p_2_cast_reg_881 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_784_p0);
    sensitive << ( p_2_cast_reg_881 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_792_p0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond17_2_fu_473_p2 );

    SC_METHOD(thread_grp_fu_792_p1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond17_2_fu_473_p2 );
    sensitive << ( grp_fu_792_p10 );

    SC_METHOD(thread_grp_fu_792_p10);
    sensitive << ( i_4_1_fu_467_p2 );

    SC_METHOD(thread_grp_fu_792_p2);
    sensitive << ( tmp_1_cast1_reg_869 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond17_2_fu_473_p2 );

    SC_METHOD(thread_grp_fu_800_p0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond17_2_fu_473_p2 );

    SC_METHOD(thread_grp_fu_800_p1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond17_2_fu_473_p2 );
    sensitive << ( grp_fu_800_p10 );

    SC_METHOD(thread_grp_fu_800_p10);
    sensitive << ( i_4_2_fu_491_p2 );

    SC_METHOD(thread_grp_fu_800_p2);
    sensitive << ( tmp_1_cast_reg_875 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond17_2_fu_473_p2 );

    SC_METHOD(thread_grp_fu_808_p0);
    sensitive << ( p_2_cast_reg_881 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_816_p0);
    sensitive << ( p_2_cast_reg_881 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_i_2_fu_369_p2);
    sensitive << ( i_reg_278 );

    SC_METHOD(thread_i_3_fu_539_p2);
    sensitive << ( i2_reg_325 );

    SC_METHOD(thread_i_4_1_fu_467_p2);
    sensitive << ( i1_reg_313 );

    SC_METHOD(thread_i_4_2_fu_491_p2);
    sensitive << ( tmp_22_fu_487_p1 );

    SC_METHOD(thread_i_4_3_fu_505_p2);
    sensitive << ( i1_reg_313 );

    SC_METHOD(thread_i_4_s_fu_436_p2);
    sensitive << ( i1_reg_313 );

    SC_METHOD(thread_in_V_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_400_p2 );

    SC_METHOD(thread_in_V_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_400_p2 );

    SC_METHOD(thread_j_1_fu_511_p2);
    sensitive << ( j_reg_301 );

    SC_METHOD(thread_lhs_V_1_fu_406_p1);
    sensitive << ( in_V_V_dout );

    SC_METHOD(thread_lhs_V_fu_344_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_dout );

    SC_METHOD(thread_lhs_V_fu_344_p1);
    sensitive << ( lhs_V_fu_344_p0 );

    SC_METHOD(thread_newsignbit_0_not_i_fu_699_p2);
    sensitive << ( newsignbit_fu_675_p3 );

    SC_METHOD(thread_newsignbit_fu_675_p3);
    sensitive << ( p_Val2_4_fu_670_p2 );

    SC_METHOD(thread_next_mul_fu_375_p2);
    sensitive << ( phi_mul_reg_290 );

    SC_METHOD(thread_not_s_i_i1_fu_600_p2);
    sensitive << ( tmp_13_fu_564_p3 );

    SC_METHOD(thread_out_V_V_blk_n);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_V_V_din);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_V_fu_836_p2 );

    SC_METHOD(thread_out_V_V_write);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_output_V_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( output_V_addr_4_reg_910 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( output_V_addr_6_reg_954 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_s_fu_381_p1 );
    sensitive << ( tmp_3_fu_450_p1 );
    sensitive << ( tmp_48_3_fu_521_p1 );

    SC_METHOD(thread_output_V_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( output_V_addr_3_reg_904 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( output_V_addr_5_reg_949 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_48_1_fu_455_p1 );
    sensitive << ( tmp_48_2_fu_517_p1 );
    sensitive << ( tmp_2_fu_545_p1 );

    SC_METHOD(thread_output_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_V_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_V_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( p_1_cast_fu_395_p1 );
    sensitive << ( grp_fu_784_p3 );
    sensitive << ( grp_fu_816_p3 );

    SC_METHOD(thread_output_V_d1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_fu_776_p3 );
    sensitive << ( grp_fu_808_p3 );

    SC_METHOD(thread_output_V_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_V_we1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_overflow_fu_693_p2);
    sensitive << ( brmerge_i_fu_683_p2 );
    sensitive << ( tmp_9_fu_688_p2 );

    SC_METHOD(thread_p_1_cast_fu_395_p1);
    sensitive << ( p_1_fu_390_p2 );

    SC_METHOD(thread_p_1_fu_390_p0);
    sensitive << ( read_temp_V_cast_reg_843 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_p_1_fu_390_p1);
    sensitive << ( fc_layer3_weights_V_q0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_p_1_fu_390_p2);
    sensitive << ( p_1_fu_390_p0 );
    sensitive << ( p_1_fu_390_p1 );

    SC_METHOD(thread_p_2_cast_fu_424_p1);
    sensitive << ( r_V_1_fu_410_p2 );

    SC_METHOD(thread_p_Val2_11_mux_fu_733_p3);
    sensitive << ( p_Val2_4_fu_670_p2 );
    sensitive << ( brmerge_i_i_fu_715_p2 );

    SC_METHOD(thread_p_Val2_3_cast_fu_580_p1);
    sensitive << ( tmp_6_fu_571_p4 );

    SC_METHOD(thread_p_Val2_3_fu_631_p2);
    sensitive << ( p_Val2_3_cast_fu_580_p1 );
    sensitive << ( tmp_6_cast_fu_618_p1 );

    SC_METHOD(thread_p_Val2_4_fu_670_p2);
    sensitive << ( tmp_7_reg_992 );
    sensitive << ( tmp_8_fu_667_p1 );

    SC_METHOD(thread_p_Val2_s_511_fu_741_p3);
    sensitive << ( p_Val2_4_fu_670_p2 );
    sensitive << ( underflow_fu_710_p2 );

    SC_METHOD(thread_p_Val2_s_fu_555_p1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_p_Val2_s_fu_555_p2);
    sensitive << ( p_Val2_s_fu_555_p1 );

    SC_METHOD(thread_p_not38_i_fu_661_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_10_fu_645_p4 );

    SC_METHOD(thread_p_not_i_fu_655_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_10_fu_645_p4 );

    SC_METHOD(thread_phi_mul_cast_fu_358_p1);
    sensitive << ( phi_mul_reg_290 );

    SC_METHOD(thread_qb_assign_1_fu_612_p2);
    sensitive << ( r_i_i1_fu_606_p2 );
    sensitive << ( qbit_fu_584_p3 );

    SC_METHOD(thread_qbit_fu_584_p3);
    sensitive << ( grp_fu_824_p3 );

    SC_METHOD(thread_r_V_1_fu_410_p2);
    sensitive << ( lhs_V_1_fu_406_p1 );

    SC_METHOD(thread_r_V_fu_348_p2);
    sensitive << ( lhs_V_fu_344_p1 );

    SC_METHOD(thread_r_fu_594_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_19_fu_591_p1 );

    SC_METHOD(thread_r_i_i1_fu_606_p2);
    sensitive << ( r_fu_594_p2 );
    sensitive << ( not_s_i_i1_fu_600_p2 );

    SC_METHOD(thread_read_temp_V_cast_fu_354_p1);
    sensitive << ( r_V_fu_348_p2 );

    SC_METHOD(thread_this_assign_1_fu_749_p3);
    sensitive << ( brmerge_fu_727_p2 );
    sensitive << ( p_Val2_11_mux_fu_733_p3 );
    sensitive << ( p_Val2_s_511_fu_741_p3 );

    SC_METHOD(thread_tmp_10_fu_645_p4);
    sensitive << ( p_Val2_3_fu_631_p2 );

    SC_METHOD(thread_tmp_12_cast_fu_432_p1);
    sensitive << ( grp_fu_760_p3 );

    SC_METHOD(thread_tmp_13_fu_564_p3);
    sensitive << ( grp_fu_824_p3 );

    SC_METHOD(thread_tmp_14_cast_fu_446_p1);
    sensitive << ( grp_fu_768_p3 );

    SC_METHOD(thread_tmp_16_cast_fu_483_p1);
    sensitive << ( grp_fu_792_p3 );

    SC_METHOD(thread_tmp_18_cast_fu_501_p1);
    sensitive << ( grp_fu_800_p3 );

    SC_METHOD(thread_tmp_19_fu_591_p1);
    sensitive << ( grp_fu_824_p3 );

    SC_METHOD(thread_tmp_1_cast1_fu_416_p1);
    sensitive << ( j_reg_301 );

    SC_METHOD(thread_tmp_1_cast_fu_420_p1);
    sensitive << ( j_reg_301 );

    SC_METHOD(thread_tmp_22_fu_487_p1);
    sensitive << ( i1_reg_313 );

    SC_METHOD(thread_tmp_2_fu_545_p1);
    sensitive << ( i2_reg_325 );

    SC_METHOD(thread_tmp_3_fu_450_p1);
    sensitive << ( i1_reg_313 );

    SC_METHOD(thread_tmp_48_1_fu_455_p1);
    sensitive << ( i_4_s_reg_894 );

    SC_METHOD(thread_tmp_48_2_fu_517_p1);
    sensitive << ( i_4_1_reg_916 );

    SC_METHOD(thread_tmp_48_3_fu_521_p1);
    sensitive << ( i_4_2_reg_929 );

    SC_METHOD(thread_tmp_6_cast_fu_618_p1);
    sensitive << ( qb_assign_1_fu_612_p2 );

    SC_METHOD(thread_tmp_6_fu_571_p4);
    sensitive << ( grp_fu_824_p3 );

    SC_METHOD(thread_tmp_8_fu_667_p1);
    sensitive << ( qb_assign_1_reg_987 );

    SC_METHOD(thread_tmp_9_fu_688_p2);
    sensitive << ( isneg_reg_997 );

    SC_METHOD(thread_tmp_V_fu_836_p0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_tmp_s_fu_381_p1);
    sensitive << ( i_reg_278 );

    SC_METHOD(thread_underflow_fu_710_p2);
    sensitive << ( isneg_reg_997 );
    sensitive << ( brmerge39_i_fu_705_p2 );

    SC_METHOD(thread_underflow_not_fu_721_p2);
    sensitive << ( underflow_fu_710_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_V_V_full_n );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_400_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_363_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond17_2_fu_473_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_533_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fc_layer3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_V_V_din, "(port)out_V_V_din");
    sc_trace(mVcdFile, out_V_V_full_n, "(port)out_V_V_full_n");
    sc_trace(mVcdFile, out_V_V_write, "(port)out_V_V_write");
    sc_trace(mVcdFile, in_V_V_dout, "(port)in_V_V_dout");
    sc_trace(mVcdFile, in_V_V_empty_n, "(port)in_V_V_empty_n");
    sc_trace(mVcdFile, in_V_V_read, "(port)in_V_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, fc_layer3_weights_V_address0, "fc_layer3_weights_V_address0");
    sc_trace(mVcdFile, fc_layer3_weights_V_ce0, "fc_layer3_weights_V_ce0");
    sc_trace(mVcdFile, fc_layer3_weights_V_q0, "fc_layer3_weights_V_q0");
    sc_trace(mVcdFile, fc_layer3_weights_V_address1, "fc_layer3_weights_V_address1");
    sc_trace(mVcdFile, fc_layer3_weights_V_ce1, "fc_layer3_weights_V_ce1");
    sc_trace(mVcdFile, fc_layer3_weights_V_q1, "fc_layer3_weights_V_q1");
    sc_trace(mVcdFile, fc_layer3_bias_V_address0, "fc_layer3_bias_V_address0");
    sc_trace(mVcdFile, fc_layer3_bias_V_ce0, "fc_layer3_bias_V_ce0");
    sc_trace(mVcdFile, fc_layer3_bias_V_q0, "fc_layer3_bias_V_q0");
    sc_trace(mVcdFile, out_V_V_blk_n, "out_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, in_V_V_blk_n, "in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond2_fu_400_p2, "exitcond2_fu_400_p2");
    sc_trace(mVcdFile, reg_336, "reg_336");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, reg_340, "reg_340");
    sc_trace(mVcdFile, read_temp_V_cast_fu_354_p1, "read_temp_V_cast_fu_354_p1");
    sc_trace(mVcdFile, read_temp_V_cast_reg_843, "read_temp_V_cast_reg_843");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i_2_fu_369_p2, "i_2_fu_369_p2");
    sc_trace(mVcdFile, i_2_reg_851, "i_2_reg_851");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul_fu_375_p2, "next_mul_fu_375_p2");
    sc_trace(mVcdFile, next_mul_reg_856, "next_mul_reg_856");
    sc_trace(mVcdFile, exitcond1_fu_363_p2, "exitcond1_fu_363_p2");
    sc_trace(mVcdFile, tmp_1_cast1_fu_416_p1, "tmp_1_cast1_fu_416_p1");
    sc_trace(mVcdFile, tmp_1_cast1_reg_869, "tmp_1_cast1_reg_869");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, tmp_1_cast_fu_420_p1, "tmp_1_cast_fu_420_p1");
    sc_trace(mVcdFile, tmp_1_cast_reg_875, "tmp_1_cast_reg_875");
    sc_trace(mVcdFile, p_2_cast_fu_424_p1, "p_2_cast_fu_424_p1");
    sc_trace(mVcdFile, p_2_cast_reg_881, "p_2_cast_reg_881");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_4_s_fu_436_p2, "i_4_s_fu_436_p2");
    sc_trace(mVcdFile, i_4_s_reg_894, "i_4_s_reg_894");
    sc_trace(mVcdFile, output_V_addr_3_reg_904, "output_V_addr_3_reg_904");
    sc_trace(mVcdFile, output_V_addr_4_reg_910, "output_V_addr_4_reg_910");
    sc_trace(mVcdFile, i_4_1_fu_467_p2, "i_4_1_fu_467_p2");
    sc_trace(mVcdFile, i_4_1_reg_916, "i_4_1_reg_916");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond17_2_fu_473_p2, "exitcond17_2_fu_473_p2");
    sc_trace(mVcdFile, i_4_2_fu_491_p2, "i_4_2_fu_491_p2");
    sc_trace(mVcdFile, i_4_2_reg_929, "i_4_2_reg_929");
    sc_trace(mVcdFile, i_4_3_fu_505_p2, "i_4_3_fu_505_p2");
    sc_trace(mVcdFile, i_4_3_reg_939, "i_4_3_reg_939");
    sc_trace(mVcdFile, j_1_fu_511_p2, "j_1_fu_511_p2");
    sc_trace(mVcdFile, output_V_addr_5_reg_949, "output_V_addr_5_reg_949");
    sc_trace(mVcdFile, output_V_addr_6_reg_954, "output_V_addr_6_reg_954");
    sc_trace(mVcdFile, i_3_fu_539_p2, "i_3_fu_539_p2");
    sc_trace(mVcdFile, i_3_reg_962, "i_3_reg_962");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, exitcond_fu_533_p2, "exitcond_fu_533_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_555_p2, "p_Val2_s_fu_555_p2");
    sc_trace(mVcdFile, p_Val2_s_reg_977, "p_Val2_s_reg_977");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, f_op_V_1_reg_982, "f_op_V_1_reg_982");
    sc_trace(mVcdFile, qb_assign_1_fu_612_p2, "qb_assign_1_fu_612_p2");
    sc_trace(mVcdFile, qb_assign_1_reg_987, "qb_assign_1_reg_987");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_7_reg_992, "tmp_7_reg_992");
    sc_trace(mVcdFile, isneg_reg_997, "isneg_reg_997");
    sc_trace(mVcdFile, p_not_i_fu_655_p2, "p_not_i_fu_655_p2");
    sc_trace(mVcdFile, p_not_i_reg_1003, "p_not_i_reg_1003");
    sc_trace(mVcdFile, p_not38_i_fu_661_p2, "p_not38_i_fu_661_p2");
    sc_trace(mVcdFile, p_not38_i_reg_1008, "p_not38_i_reg_1008");
    sc_trace(mVcdFile, this_assign_1_fu_749_p3, "this_assign_1_fu_749_p3");
    sc_trace(mVcdFile, this_assign_1_reg_1013, "this_assign_1_reg_1013");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, output_V_address0, "output_V_address0");
    sc_trace(mVcdFile, output_V_ce0, "output_V_ce0");
    sc_trace(mVcdFile, output_V_we0, "output_V_we0");
    sc_trace(mVcdFile, output_V_d0, "output_V_d0");
    sc_trace(mVcdFile, output_V_q0, "output_V_q0");
    sc_trace(mVcdFile, output_V_address1, "output_V_address1");
    sc_trace(mVcdFile, output_V_ce1, "output_V_ce1");
    sc_trace(mVcdFile, output_V_we1, "output_V_we1");
    sc_trace(mVcdFile, output_V_d1, "output_V_d1");
    sc_trace(mVcdFile, output_V_q1, "output_V_q1");
    sc_trace(mVcdFile, i_reg_278, "i_reg_278");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, phi_mul_reg_290, "phi_mul_reg_290");
    sc_trace(mVcdFile, j_reg_301, "j_reg_301");
    sc_trace(mVcdFile, i1_reg_313, "i1_reg_313");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i2_reg_325, "i2_reg_325");
    sc_trace(mVcdFile, phi_mul_cast_fu_358_p1, "phi_mul_cast_fu_358_p1");
    sc_trace(mVcdFile, tmp_s_fu_381_p1, "tmp_s_fu_381_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_432_p1, "tmp_12_cast_fu_432_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_446_p1, "tmp_14_cast_fu_446_p1");
    sc_trace(mVcdFile, tmp_3_fu_450_p1, "tmp_3_fu_450_p1");
    sc_trace(mVcdFile, tmp_48_1_fu_455_p1, "tmp_48_1_fu_455_p1");
    sc_trace(mVcdFile, tmp_16_cast_fu_483_p1, "tmp_16_cast_fu_483_p1");
    sc_trace(mVcdFile, tmp_18_cast_fu_501_p1, "tmp_18_cast_fu_501_p1");
    sc_trace(mVcdFile, tmp_48_2_fu_517_p1, "tmp_48_2_fu_517_p1");
    sc_trace(mVcdFile, tmp_48_3_fu_521_p1, "tmp_48_3_fu_521_p1");
    sc_trace(mVcdFile, tmp_2_fu_545_p1, "tmp_2_fu_545_p1");
    sc_trace(mVcdFile, tmp_V_fu_836_p2, "tmp_V_fu_836_p2");
    sc_trace(mVcdFile, p_1_cast_fu_395_p1, "p_1_cast_fu_395_p1");
    sc_trace(mVcdFile, grp_fu_776_p3, "grp_fu_776_p3");
    sc_trace(mVcdFile, grp_fu_784_p3, "grp_fu_784_p3");
    sc_trace(mVcdFile, grp_fu_808_p3, "grp_fu_808_p3");
    sc_trace(mVcdFile, grp_fu_816_p3, "grp_fu_816_p3");
    sc_trace(mVcdFile, lhs_V_fu_344_p0, "lhs_V_fu_344_p0");
    sc_trace(mVcdFile, lhs_V_fu_344_p1, "lhs_V_fu_344_p1");
    sc_trace(mVcdFile, r_V_fu_348_p2, "r_V_fu_348_p2");
    sc_trace(mVcdFile, p_1_fu_390_p0, "p_1_fu_390_p0");
    sc_trace(mVcdFile, p_1_fu_390_p1, "p_1_fu_390_p1");
    sc_trace(mVcdFile, p_1_fu_390_p2, "p_1_fu_390_p2");
    sc_trace(mVcdFile, lhs_V_1_fu_406_p1, "lhs_V_1_fu_406_p1");
    sc_trace(mVcdFile, r_V_1_fu_410_p2, "r_V_1_fu_410_p2");
    sc_trace(mVcdFile, grp_fu_760_p3, "grp_fu_760_p3");
    sc_trace(mVcdFile, grp_fu_768_p3, "grp_fu_768_p3");
    sc_trace(mVcdFile, grp_fu_792_p3, "grp_fu_792_p3");
    sc_trace(mVcdFile, tmp_22_fu_487_p1, "tmp_22_fu_487_p1");
    sc_trace(mVcdFile, grp_fu_800_p3, "grp_fu_800_p3");
    sc_trace(mVcdFile, p_Val2_s_fu_555_p1, "p_Val2_s_fu_555_p1");
    sc_trace(mVcdFile, grp_fu_824_p3, "grp_fu_824_p3");
    sc_trace(mVcdFile, tmp_6_fu_571_p4, "tmp_6_fu_571_p4");
    sc_trace(mVcdFile, tmp_19_fu_591_p1, "tmp_19_fu_591_p1");
    sc_trace(mVcdFile, tmp_13_fu_564_p3, "tmp_13_fu_564_p3");
    sc_trace(mVcdFile, r_fu_594_p2, "r_fu_594_p2");
    sc_trace(mVcdFile, not_s_i_i1_fu_600_p2, "not_s_i_i1_fu_600_p2");
    sc_trace(mVcdFile, r_i_i1_fu_606_p2, "r_i_i1_fu_606_p2");
    sc_trace(mVcdFile, qbit_fu_584_p3, "qbit_fu_584_p3");
    sc_trace(mVcdFile, p_Val2_3_cast_fu_580_p1, "p_Val2_3_cast_fu_580_p1");
    sc_trace(mVcdFile, tmp_6_cast_fu_618_p1, "tmp_6_cast_fu_618_p1");
    sc_trace(mVcdFile, p_Val2_3_fu_631_p2, "p_Val2_3_fu_631_p2");
    sc_trace(mVcdFile, tmp_10_fu_645_p4, "tmp_10_fu_645_p4");
    sc_trace(mVcdFile, tmp_8_fu_667_p1, "tmp_8_fu_667_p1");
    sc_trace(mVcdFile, p_Val2_4_fu_670_p2, "p_Val2_4_fu_670_p2");
    sc_trace(mVcdFile, newsignbit_fu_675_p3, "newsignbit_fu_675_p3");
    sc_trace(mVcdFile, brmerge_i_fu_683_p2, "brmerge_i_fu_683_p2");
    sc_trace(mVcdFile, tmp_9_fu_688_p2, "tmp_9_fu_688_p2");
    sc_trace(mVcdFile, newsignbit_0_not_i_fu_699_p2, "newsignbit_0_not_i_fu_699_p2");
    sc_trace(mVcdFile, brmerge39_i_fu_705_p2, "brmerge39_i_fu_705_p2");
    sc_trace(mVcdFile, underflow_fu_710_p2, "underflow_fu_710_p2");
    sc_trace(mVcdFile, overflow_fu_693_p2, "overflow_fu_693_p2");
    sc_trace(mVcdFile, underflow_not_fu_721_p2, "underflow_not_fu_721_p2");
    sc_trace(mVcdFile, brmerge_i_i_fu_715_p2, "brmerge_i_i_fu_715_p2");
    sc_trace(mVcdFile, brmerge_fu_727_p2, "brmerge_fu_727_p2");
    sc_trace(mVcdFile, p_Val2_11_mux_fu_733_p3, "p_Val2_11_mux_fu_733_p3");
    sc_trace(mVcdFile, p_Val2_s_511_fu_741_p3, "p_Val2_s_511_fu_741_p3");
    sc_trace(mVcdFile, grp_fu_760_p0, "grp_fu_760_p0");
    sc_trace(mVcdFile, grp_fu_760_p1, "grp_fu_760_p1");
    sc_trace(mVcdFile, grp_fu_760_p2, "grp_fu_760_p2");
    sc_trace(mVcdFile, grp_fu_768_p0, "grp_fu_768_p0");
    sc_trace(mVcdFile, grp_fu_768_p1, "grp_fu_768_p1");
    sc_trace(mVcdFile, grp_fu_768_p2, "grp_fu_768_p2");
    sc_trace(mVcdFile, grp_fu_776_p0, "grp_fu_776_p0");
    sc_trace(mVcdFile, grp_fu_784_p0, "grp_fu_784_p0");
    sc_trace(mVcdFile, grp_fu_792_p0, "grp_fu_792_p0");
    sc_trace(mVcdFile, grp_fu_792_p1, "grp_fu_792_p1");
    sc_trace(mVcdFile, grp_fu_792_p2, "grp_fu_792_p2");
    sc_trace(mVcdFile, grp_fu_800_p0, "grp_fu_800_p0");
    sc_trace(mVcdFile, grp_fu_800_p1, "grp_fu_800_p1");
    sc_trace(mVcdFile, grp_fu_800_p2, "grp_fu_800_p2");
    sc_trace(mVcdFile, grp_fu_808_p0, "grp_fu_808_p0");
    sc_trace(mVcdFile, grp_fu_816_p0, "grp_fu_816_p0");
    sc_trace(mVcdFile, tmp_V_fu_836_p0, "tmp_V_fu_836_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_760_p00, "grp_fu_760_p00");
    sc_trace(mVcdFile, grp_fu_768_p00, "grp_fu_768_p00");
    sc_trace(mVcdFile, grp_fu_792_p10, "grp_fu_792_p10");
    sc_trace(mVcdFile, grp_fu_800_p10, "grp_fu_800_p10");
#endif

    }
}

fc_layer3::~fc_layer3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete fc_layer3_weights_V_U;
    delete fc_layer3_bias_V_U;
    delete output_V_U;
    delete nnet_mac_muladd_4cgu_U79;
    delete nnet_mac_muladd_4chv_U80;
    delete nnet_mac_muladd_9civ_U81;
    delete nnet_mac_muladd_9civ_U82;
    delete nnet_mac_muladd_8cjv_U83;
    delete nnet_mac_muladd_8ckv_U84;
    delete nnet_mac_muladd_9civ_U85;
    delete nnet_mac_muladd_9civ_U86;
    delete nnet_mac_muladd_3clv_U87;
    delete nnet_mul_mul_25nscmv_U88;
}

void fc_layer3::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv31_9E1F9;
}

void fc_layer3::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                    esl_seteq<1,1,1>(exitcond_fu_533_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i1_reg_313 = i_4_3_reg_939.read();
    } else if ((!(esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0)) && 
                esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        i1_reg_313 = ap_const_lv4_0;
    }
    if ((!(esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        i2_reg_325 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(out_V_V_full_n.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        i2_reg_325 = i_3_reg_962.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_278 = i_2_reg_851.read();
    } else if ((!(esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_278 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_363_p2.read(), ap_const_lv1_1))) {
        j_reg_301 = ap_const_lv7_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(exitcond17_2_fu_473_p2.read(), ap_const_lv1_1))) {
        j_reg_301 = j_1_fu_511_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        phi_mul_reg_290 = next_mul_reg_856.read();
    } else if ((!(esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        phi_mul_reg_290 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        f_op_V_1_reg_982 = fc_layer3_bias_V_q0.read();
        p_Val2_s_reg_977 = p_Val2_s_fu_555_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_2_reg_851 = i_2_fu_369_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_3_reg_962 = i_3_fu_539_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_4_1_reg_916 = i_4_1_fu_467_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond17_2_fu_473_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        i_4_2_reg_929 = i_4_2_fu_491_p2.read();
        i_4_3_reg_939 = i_4_3_fu_505_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_4_s_reg_894 = i_4_s_fu_436_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        isneg_reg_997 = p_Val2_3_fu_631_p2.read().range(16, 16);
        p_not38_i_reg_1008 = p_not38_i_fu_661_p2.read();
        p_not_i_reg_1003 = p_not_i_fu_655_p2.read();
        qb_assign_1_reg_987 = qb_assign_1_fu_612_p2.read();
        tmp_7_reg_992 = grp_fu_824_p3.read().range(35, 28);
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        next_mul_reg_856 = next_mul_fu_375_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_V_addr_3_reg_904 =  (sc_lv<7>) (tmp_3_fu_450_p1.read());
        output_V_addr_4_reg_910 =  (sc_lv<7>) (tmp_48_1_fu_455_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_V_addr_5_reg_949 =  (sc_lv<7>) (tmp_48_2_fu_517_p1.read());
        output_V_addr_6_reg_954 =  (sc_lv<7>) (tmp_48_3_fu_521_p1.read());
    }
    if ((!(esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        p_2_cast_reg_881 = p_2_cast_fu_424_p1.read();
        tmp_1_cast1_reg_869 = tmp_1_cast1_fu_416_p1.read();
        tmp_1_cast_reg_875 = tmp_1_cast_fu_420_p1.read();
    }
    if ((!(esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        read_temp_V_cast_reg_843 = read_temp_V_cast_fu_354_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        reg_336 = fc_layer3_weights_V_q0.read();
        reg_340 = fc_layer3_weights_V_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        this_assign_1_reg_1013 = this_assign_1_fu_749_p3.read();
    }
}

void fc_layer3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fc_layer3::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void fc_layer3::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void fc_layer3::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void fc_layer3::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void fc_layer3::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void fc_layer3::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fc_layer3::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fc_layer3::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void fc_layer3::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void fc_layer3::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void fc_layer3::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void fc_layer3::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void fc_layer3::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void fc_layer3::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void fc_layer3::thread_ap_block_state4() {
    ap_block_state4 = (esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0));
}

void fc_layer3::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_533_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void fc_layer3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fc_layer3::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_533_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fc_layer3::thread_brmerge39_i_fu_705_p2() {
    brmerge39_i_fu_705_p2 = (p_not38_i_reg_1008.read() | newsignbit_0_not_i_fu_699_p2.read());
}

void fc_layer3::thread_brmerge_fu_727_p2() {
    brmerge_fu_727_p2 = (overflow_fu_693_p2.read() | underflow_not_fu_721_p2.read());
}

void fc_layer3::thread_brmerge_i_fu_683_p2() {
    brmerge_i_fu_683_p2 = (newsignbit_fu_675_p3.read() | p_not_i_reg_1003.read());
}

void fc_layer3::thread_brmerge_i_i_fu_715_p2() {
    brmerge_i_i_fu_715_p2 = (underflow_fu_710_p2.read() | overflow_fu_693_p2.read());
}

void fc_layer3::thread_exitcond17_2_fu_473_p2() {
    exitcond17_2_fu_473_p2 = (!i_4_1_fu_467_p2.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_4_1_fu_467_p2.read() == ap_const_lv4_A);
}

void fc_layer3::thread_exitcond1_fu_363_p2() {
    exitcond1_fu_363_p2 = (!i_reg_278.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_278.read() == ap_const_lv4_A);
}

void fc_layer3::thread_exitcond2_fu_400_p2() {
    exitcond2_fu_400_p2 = (!j_reg_301.read().is_01() || !ap_const_lv7_54.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_301.read() == ap_const_lv7_54);
}

void fc_layer3::thread_exitcond_fu_533_p2() {
    exitcond_fu_533_p2 = (!i2_reg_325.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i2_reg_325.read() == ap_const_lv4_A);
}

void fc_layer3::thread_fc_layer3_bias_V_address0() {
    fc_layer3_bias_V_address0 =  (sc_lv<4>) (tmp_2_fu_545_p1.read());
}

void fc_layer3::thread_fc_layer3_bias_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        fc_layer3_bias_V_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_bias_V_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_fc_layer3_weights_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        fc_layer3_weights_V_address0 =  (sc_lv<10>) (tmp_16_cast_fu_483_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        fc_layer3_weights_V_address0 =  (sc_lv<10>) (tmp_12_cast_fu_432_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        fc_layer3_weights_V_address0 =  (sc_lv<10>) (phi_mul_cast_fu_358_p1.read());
    } else {
        fc_layer3_weights_V_address0 = "XXXXXXXXXX";
    }
}

void fc_layer3::thread_fc_layer3_weights_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        fc_layer3_weights_V_address1 =  (sc_lv<10>) (tmp_18_cast_fu_501_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        fc_layer3_weights_V_address1 =  (sc_lv<10>) (tmp_14_cast_fu_446_p1.read());
    } else {
        fc_layer3_weights_V_address1 = "XXXXXXXXXX";
    }
}

void fc_layer3::thread_fc_layer3_weights_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        fc_layer3_weights_V_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_fc_layer3_weights_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        fc_layer3_weights_V_ce1 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_ce1 = ap_const_logic_0;
    }
}

void fc_layer3::thread_grp_fu_760_p0() {
    grp_fu_760_p0 =  (sc_lv<4>) (grp_fu_760_p00.read());
}

void fc_layer3::thread_grp_fu_760_p00() {
    grp_fu_760_p00 = esl_zext<10,4>(i1_reg_313.read());
}

void fc_layer3::thread_grp_fu_760_p1() {
    grp_fu_760_p1 =  (sc_lv<8>) (ap_const_lv10_54);
}

void fc_layer3::thread_grp_fu_760_p2() {
    grp_fu_760_p2 =  (sc_lv<7>) (tmp_1_cast_reg_875.read());
}

void fc_layer3::thread_grp_fu_768_p0() {
    grp_fu_768_p0 =  (sc_lv<4>) (grp_fu_768_p00.read());
}

void fc_layer3::thread_grp_fu_768_p00() {
    grp_fu_768_p00 = esl_zext<11,4>(i_4_s_fu_436_p2.read());
}

void fc_layer3::thread_grp_fu_768_p1() {
    grp_fu_768_p1 =  (sc_lv<8>) (ap_const_lv11_54);
}

void fc_layer3::thread_grp_fu_768_p2() {
    grp_fu_768_p2 =  (sc_lv<7>) (tmp_1_cast1_reg_869.read());
}

void fc_layer3::thread_grp_fu_776_p0() {
    grp_fu_776_p0 =  (sc_lv<9>) (p_2_cast_reg_881.read());
}

void fc_layer3::thread_grp_fu_784_p0() {
    grp_fu_784_p0 =  (sc_lv<9>) (p_2_cast_reg_881.read());
}

void fc_layer3::thread_grp_fu_792_p0() {
    grp_fu_792_p0 =  (sc_lv<8>) (ap_const_lv11_54);
}

void fc_layer3::thread_grp_fu_792_p1() {
    grp_fu_792_p1 =  (sc_lv<4>) (grp_fu_792_p10.read());
}

void fc_layer3::thread_grp_fu_792_p10() {
    grp_fu_792_p10 = esl_zext<11,4>(i_4_1_fu_467_p2.read());
}

void fc_layer3::thread_grp_fu_792_p2() {
    grp_fu_792_p2 =  (sc_lv<7>) (tmp_1_cast1_reg_869.read());
}

void fc_layer3::thread_grp_fu_800_p0() {
    grp_fu_800_p0 =  (sc_lv<8>) (ap_const_lv10_54);
}

void fc_layer3::thread_grp_fu_800_p1() {
    grp_fu_800_p1 =  (sc_lv<3>) (grp_fu_800_p10.read());
}

void fc_layer3::thread_grp_fu_800_p10() {
    grp_fu_800_p10 = esl_zext<10,3>(i_4_2_fu_491_p2.read());
}

void fc_layer3::thread_grp_fu_800_p2() {
    grp_fu_800_p2 =  (sc_lv<7>) (tmp_1_cast_reg_875.read());
}

void fc_layer3::thread_grp_fu_808_p0() {
    grp_fu_808_p0 =  (sc_lv<9>) (p_2_cast_reg_881.read());
}

void fc_layer3::thread_grp_fu_816_p0() {
    grp_fu_816_p0 =  (sc_lv<9>) (p_2_cast_reg_881.read());
}

void fc_layer3::thread_i_2_fu_369_p2() {
    i_2_fu_369_p2 = (!i_reg_278.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_278.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void fc_layer3::thread_i_3_fu_539_p2() {
    i_3_fu_539_p2 = (!i2_reg_325.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i2_reg_325.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void fc_layer3::thread_i_4_1_fu_467_p2() {
    i_4_1_fu_467_p2 = (i1_reg_313.read() | ap_const_lv4_2);
}

void fc_layer3::thread_i_4_2_fu_491_p2() {
    i_4_2_fu_491_p2 = (tmp_22_fu_487_p1.read() | ap_const_lv3_3);
}

void fc_layer3::thread_i_4_3_fu_505_p2() {
    i_4_3_fu_505_p2 = (!ap_const_lv4_4.is_01() || !i1_reg_313.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_4) + sc_biguint<4>(i1_reg_313.read()));
}

void fc_layer3::thread_i_4_s_fu_436_p2() {
    i_4_s_fu_436_p2 = (i1_reg_313.read() | ap_const_lv4_1);
}

void fc_layer3::thread_in_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0)))) {
        in_V_V_blk_n = in_V_V_empty_n.read();
    } else {
        in_V_V_blk_n = ap_const_logic_1;
    }
}

void fc_layer3::thread_in_V_V_read() {
    if (((!(esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (!(esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())))) {
        in_V_V_read = ap_const_logic_1;
    } else {
        in_V_V_read = ap_const_logic_0;
    }
}

void fc_layer3::thread_j_1_fu_511_p2() {
    j_1_fu_511_p2 = (!j_reg_301.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_reg_301.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void fc_layer3::thread_lhs_V_1_fu_406_p1() {
    lhs_V_1_fu_406_p1 = esl_sext<9,8>(in_V_V_dout.read());
}

void fc_layer3::thread_lhs_V_fu_344_p0() {
    lhs_V_fu_344_p0 = in_V_V_dout.read();
}

void fc_layer3::thread_lhs_V_fu_344_p1() {
    lhs_V_fu_344_p1 = esl_sext<9,8>(lhs_V_fu_344_p0.read());
}

void fc_layer3::thread_newsignbit_0_not_i_fu_699_p2() {
    newsignbit_0_not_i_fu_699_p2 = (newsignbit_fu_675_p3.read() ^ ap_const_lv1_1);
}

void fc_layer3::thread_newsignbit_fu_675_p3() {
    newsignbit_fu_675_p3 = p_Val2_4_fu_670_p2.read().range(7, 7);
}

void fc_layer3::thread_next_mul_fu_375_p2() {
    next_mul_fu_375_p2 = (!phi_mul_reg_290.read().is_01() || !ap_const_lv10_54.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul_reg_290.read()) + sc_biguint<10>(ap_const_lv10_54));
}

void fc_layer3::thread_not_s_i_i1_fu_600_p2() {
    not_s_i_i1_fu_600_p2 = (tmp_13_fu_564_p3.read() ^ ap_const_lv1_1);
}

void fc_layer3::thread_out_V_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_V_V_blk_n = out_V_V_full_n.read();
    } else {
        out_V_V_blk_n = ap_const_logic_1;
    }
}

void fc_layer3::thread_out_V_V_din() {
    out_V_V_din = tmp_V_fu_836_p2.read();
}

void fc_layer3::thread_out_V_V_write() {
    if ((esl_seteq<1,1,1>(out_V_V_full_n.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        out_V_V_write = ap_const_logic_1;
    } else {
        out_V_V_write = ap_const_logic_0;
    }
}

void fc_layer3::thread_output_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_V_address0 = output_V_addr_6_reg_954.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_V_address0 =  (sc_lv<7>) (tmp_48_3_fu_521_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_V_address0 = output_V_addr_4_reg_910.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_V_address0 =  (sc_lv<7>) (tmp_3_fu_450_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_address0 =  (sc_lv<7>) (tmp_s_fu_381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        output_V_address0 =  (sc_lv<7>) (ap_const_lv64_0);
    } else {
        output_V_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void fc_layer3::thread_output_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_V_address1 =  (sc_lv<7>) (tmp_2_fu_545_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_V_address1 = output_V_addr_5_reg_949.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_V_address1 =  (sc_lv<7>) (tmp_48_2_fu_517_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_V_address1 = output_V_addr_3_reg_904.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_V_address1 =  (sc_lv<7>) (tmp_48_1_fu_455_p1.read());
    } else {
        output_V_address1 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void fc_layer3::thread_output_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (!(esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_V_ce0 = ap_const_logic_1;
    } else {
        output_V_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_output_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_V_ce1 = ap_const_logic_1;
    } else {
        output_V_ce1 = ap_const_logic_0;
    }
}

void fc_layer3::thread_output_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_V_d0 = grp_fu_816_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_V_d0 = grp_fu_784_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_d0 = p_1_cast_fu_395_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        output_V_d0 = ap_const_lv24_0;
    } else {
        output_V_d0 =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fc_layer3::thread_output_V_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_V_d1 = grp_fu_808_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_V_d1 = grp_fu_776_p3.read();
    } else {
        output_V_d1 =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fc_layer3::thread_output_V_we0() {
    if (((!(esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_V_we0 = ap_const_logic_1;
    } else {
        output_V_we0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_output_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_V_we1 = ap_const_logic_1;
    } else {
        output_V_we1 = ap_const_logic_0;
    }
}

void fc_layer3::thread_overflow_fu_693_p2() {
    overflow_fu_693_p2 = (brmerge_i_fu_683_p2.read() & tmp_9_fu_688_p2.read());
}

void fc_layer3::thread_p_1_cast_fu_395_p1() {
    p_1_cast_fu_395_p1 = esl_sext<24,17>(p_1_fu_390_p2.read());
}

void fc_layer3::thread_p_1_fu_390_p0() {
    p_1_fu_390_p0 =  (sc_lv<9>) (read_temp_V_cast_reg_843.read());
}

void fc_layer3::thread_p_1_fu_390_p1() {
    p_1_fu_390_p1 = fc_layer3_weights_V_q0.read();
}

void fc_layer3::thread_p_1_fu_390_p2() {
    p_1_fu_390_p2 = (!p_1_fu_390_p0.read().is_01() || !p_1_fu_390_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(p_1_fu_390_p0.read()) * sc_bigint<8>(p_1_fu_390_p1.read());
}

void fc_layer3::thread_p_2_cast_fu_424_p1() {
    p_2_cast_fu_424_p1 = esl_sext<17,9>(r_V_1_fu_410_p2.read());
}

void fc_layer3::thread_p_Val2_11_mux_fu_733_p3() {
    p_Val2_11_mux_fu_733_p3 = (!brmerge_i_i_fu_715_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_i_fu_715_p2.read()[0].to_bool())? ap_const_lv8_7F: p_Val2_4_fu_670_p2.read());
}

void fc_layer3::thread_p_Val2_3_cast_fu_580_p1() {
    p_Val2_3_cast_fu_580_p1 = esl_sext<17,16>(tmp_6_fu_571_p4.read());
}

void fc_layer3::thread_p_Val2_3_fu_631_p2() {
    p_Val2_3_fu_631_p2 = (!p_Val2_3_cast_fu_580_p1.read().is_01() || !tmp_6_cast_fu_618_p1.read().is_01())? sc_lv<17>(): (sc_bigint<17>(p_Val2_3_cast_fu_580_p1.read()) + sc_biguint<17>(tmp_6_cast_fu_618_p1.read()));
}

void fc_layer3::thread_p_Val2_4_fu_670_p2() {
    p_Val2_4_fu_670_p2 = (!tmp_7_reg_992.read().is_01() || !tmp_8_fu_667_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_7_reg_992.read()) + sc_biguint<8>(tmp_8_fu_667_p1.read()));
}

void fc_layer3::thread_p_Val2_s_511_fu_741_p3() {
    p_Val2_s_511_fu_741_p3 = (!underflow_fu_710_p2.read()[0].is_01())? sc_lv<8>(): ((underflow_fu_710_p2.read()[0].to_bool())? ap_const_lv8_80: p_Val2_4_fu_670_p2.read());
}

void fc_layer3::thread_p_Val2_s_fu_555_p1() {
    p_Val2_s_fu_555_p1 = output_V_q1.read();
}

void fc_layer3::thread_p_Val2_s_fu_555_p2() {
    p_Val2_s_fu_555_p2 = (!ap_const_lv44_9E204.is_01() || !p_Val2_s_fu_555_p1.read().is_01())? sc_lv<44>(): sc_biguint<44>(ap_const_lv44_9E204) * sc_bigint<24>(p_Val2_s_fu_555_p1.read());
}

void fc_layer3::thread_p_not38_i_fu_661_p2() {
    p_not38_i_fu_661_p2 = (!tmp_10_fu_645_p4.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_10_fu_645_p4.read() != ap_const_lv9_1FF);
}

void fc_layer3::thread_p_not_i_fu_655_p2() {
    p_not_i_fu_655_p2 = (!tmp_10_fu_645_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_10_fu_645_p4.read() != ap_const_lv9_0);
}

void fc_layer3::thread_phi_mul_cast_fu_358_p1() {
    phi_mul_cast_fu_358_p1 = esl_zext<64,10>(phi_mul_reg_290.read());
}

void fc_layer3::thread_qb_assign_1_fu_612_p2() {
    qb_assign_1_fu_612_p2 = (r_i_i1_fu_606_p2.read() & qbit_fu_584_p3.read());
}

void fc_layer3::thread_qbit_fu_584_p3() {
    qbit_fu_584_p3 = grp_fu_824_p3.read().range(27, 27);
}

void fc_layer3::thread_r_V_1_fu_410_p2() {
    r_V_1_fu_410_p2 = (!lhs_V_1_fu_406_p1.read().is_01() || !ap_const_lv9_2.is_01())? sc_lv<9>(): (sc_bigint<9>(lhs_V_1_fu_406_p1.read()) + sc_biguint<9>(ap_const_lv9_2));
}

void fc_layer3::thread_r_V_fu_348_p2() {
    r_V_fu_348_p2 = (!lhs_V_fu_344_p1.read().is_01() || !ap_const_lv9_2.is_01())? sc_lv<9>(): (sc_bigint<9>(lhs_V_fu_344_p1.read()) + sc_biguint<9>(ap_const_lv9_2));
}

void fc_layer3::thread_r_fu_594_p2() {
    r_fu_594_p2 = (!tmp_19_fu_591_p1.read().is_01() || !ap_const_lv27_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_19_fu_591_p1.read() != ap_const_lv27_0);
}

void fc_layer3::thread_r_i_i1_fu_606_p2() {
    r_i_i1_fu_606_p2 = (r_fu_594_p2.read() | not_s_i_i1_fu_600_p2.read());
}

void fc_layer3::thread_read_temp_V_cast_fu_354_p1() {
    read_temp_V_cast_fu_354_p1 = esl_sext<17,9>(r_V_fu_348_p2.read());
}

void fc_layer3::thread_this_assign_1_fu_749_p3() {
    this_assign_1_fu_749_p3 = (!brmerge_fu_727_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_fu_727_p2.read()[0].to_bool())? p_Val2_11_mux_fu_733_p3.read(): p_Val2_s_511_fu_741_p3.read());
}

void fc_layer3::thread_tmp_10_fu_645_p4() {
    tmp_10_fu_645_p4 = p_Val2_3_fu_631_p2.read().range(16, 8);
}

void fc_layer3::thread_tmp_12_cast_fu_432_p1() {
    tmp_12_cast_fu_432_p1 = esl_zext<64,10>(grp_fu_760_p3.read());
}

void fc_layer3::thread_tmp_13_fu_564_p3() {
    tmp_13_fu_564_p3 = grp_fu_824_p3.read().range(43, 43);
}

void fc_layer3::thread_tmp_14_cast_fu_446_p1() {
    tmp_14_cast_fu_446_p1 = esl_sext<64,11>(grp_fu_768_p3.read());
}

void fc_layer3::thread_tmp_16_cast_fu_483_p1() {
    tmp_16_cast_fu_483_p1 = esl_sext<64,11>(grp_fu_792_p3.read());
}

void fc_layer3::thread_tmp_18_cast_fu_501_p1() {
    tmp_18_cast_fu_501_p1 = esl_zext<64,10>(grp_fu_800_p3.read());
}

void fc_layer3::thread_tmp_19_fu_591_p1() {
    tmp_19_fu_591_p1 = grp_fu_824_p3.read().range(27-1, 0);
}

void fc_layer3::thread_tmp_1_cast1_fu_416_p1() {
    tmp_1_cast1_fu_416_p1 = esl_zext<11,7>(j_reg_301.read());
}

void fc_layer3::thread_tmp_1_cast_fu_420_p1() {
    tmp_1_cast_fu_420_p1 = esl_zext<10,7>(j_reg_301.read());
}

void fc_layer3::thread_tmp_22_fu_487_p1() {
    tmp_22_fu_487_p1 = i1_reg_313.read().range(3-1, 0);
}

void fc_layer3::thread_tmp_2_fu_545_p1() {
    tmp_2_fu_545_p1 = esl_zext<64,4>(i2_reg_325.read());
}

void fc_layer3::thread_tmp_3_fu_450_p1() {
    tmp_3_fu_450_p1 = esl_zext<64,4>(i1_reg_313.read());
}

void fc_layer3::thread_tmp_48_1_fu_455_p1() {
    tmp_48_1_fu_455_p1 = esl_zext<64,4>(i_4_s_reg_894.read());
}

void fc_layer3::thread_tmp_48_2_fu_517_p1() {
    tmp_48_2_fu_517_p1 = esl_zext<64,4>(i_4_1_reg_916.read());
}

void fc_layer3::thread_tmp_48_3_fu_521_p1() {
    tmp_48_3_fu_521_p1 = esl_zext<64,3>(i_4_2_reg_929.read());
}

void fc_layer3::thread_tmp_6_cast_fu_618_p1() {
    tmp_6_cast_fu_618_p1 = esl_zext<17,1>(qb_assign_1_fu_612_p2.read());
}

void fc_layer3::thread_tmp_6_fu_571_p4() {
    tmp_6_fu_571_p4 = grp_fu_824_p3.read().range(43, 28);
}

void fc_layer3::thread_tmp_8_fu_667_p1() {
    tmp_8_fu_667_p1 = esl_zext<8,1>(qb_assign_1_reg_987.read());
}

void fc_layer3::thread_tmp_9_fu_688_p2() {
    tmp_9_fu_688_p2 = (isneg_reg_997.read() ^ ap_const_lv1_1);
}

void fc_layer3::thread_tmp_V_fu_836_p0() {
    tmp_V_fu_836_p0 =  (sc_lv<25>) (ap_const_lv32_C0461C);
}

void fc_layer3::thread_tmp_s_fu_381_p1() {
    tmp_s_fu_381_p1 = esl_zext<64,4>(i_reg_278.read());
}

void fc_layer3::thread_underflow_fu_710_p2() {
    underflow_fu_710_p2 = (brmerge39_i_fu_705_p2.read() & isneg_reg_997.read());
}

void fc_layer3::thread_underflow_not_fu_721_p2() {
    underflow_not_fu_721_p2 = (underflow_fu_710_p2.read() ^ ap_const_lv1_1);
}

void fc_layer3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_363_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else if ((!(esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond2_fu_400_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond17_2_fu_473_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(exitcond_fu_533_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(out_V_V_full_n.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}


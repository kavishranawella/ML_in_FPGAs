-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_layer2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC;
    in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_V_empty_n : IN STD_LOGIC;
    in_V_V_read : OUT STD_LOGIC );
end;


architecture behav of conv_layer2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000001000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000010000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000100000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000001000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000010000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000100000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000001000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000010000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000100000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000001000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000010000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000100000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (32 downto 0) := "000000000001000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (32 downto 0) := "000000000010000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (32 downto 0) := "000000000100000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (32 downto 0) := "000000001000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (32 downto 0) := "000000010000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (32 downto 0) := "000000100000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (32 downto 0) := "000001000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (32 downto 0) := "000010000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (32 downto 0) := "000100000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (32 downto 0) := "001000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (32 downto 0) := "010000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (32 downto 0) := "100000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv8_A9 : STD_LOGIC_VECTOR (7 downto 0) := "10101001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv10_6 : STD_LOGIC_VECTOR (9 downto 0) := "0000000110";
    constant ap_const_lv10_7 : STD_LOGIC_VECTOR (9 downto 0) := "0000000111";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv10_9 : STD_LOGIC_VECTOR (9 downto 0) := "0000001001";
    constant ap_const_lv10_A : STD_LOGIC_VECTOR (9 downto 0) := "0000001010";
    constant ap_const_lv10_B : STD_LOGIC_VECTOR (9 downto 0) := "0000001011";
    constant ap_const_lv10_C : STD_LOGIC_VECTOR (9 downto 0) := "0000001100";
    constant ap_const_lv10_D : STD_LOGIC_VECTOR (9 downto 0) := "0000001101";
    constant ap_const_lv10_E : STD_LOGIC_VECTOR (9 downto 0) := "0000001110";
    constant ap_const_lv10_F : STD_LOGIC_VECTOR (9 downto 0) := "0000001111";
    constant ap_const_lv10_1E : STD_LOGIC_VECTOR (9 downto 0) := "0000011110";
    constant ap_const_lv10_1F : STD_LOGIC_VECTOR (9 downto 0) := "0000011111";
    constant ap_const_lv10_10 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_const_lv10_11 : STD_LOGIC_VECTOR (9 downto 0) := "0000010001";
    constant ap_const_lv10_12 : STD_LOGIC_VECTOR (9 downto 0) := "0000010010";
    constant ap_const_lv10_13 : STD_LOGIC_VECTOR (9 downto 0) := "0000010011";
    constant ap_const_lv10_14 : STD_LOGIC_VECTOR (9 downto 0) := "0000010100";
    constant ap_const_lv10_15 : STD_LOGIC_VECTOR (9 downto 0) := "0000010101";
    constant ap_const_lv10_16 : STD_LOGIC_VECTOR (9 downto 0) := "0000010110";
    constant ap_const_lv10_17 : STD_LOGIC_VECTOR (9 downto 0) := "0000010111";
    constant ap_const_lv10_18 : STD_LOGIC_VECTOR (9 downto 0) := "0000011000";
    constant ap_const_lv10_19 : STD_LOGIC_VECTOR (9 downto 0) := "0000011001";
    constant ap_const_lv10_1A : STD_LOGIC_VECTOR (9 downto 0) := "0000011010";
    constant ap_const_lv10_1B : STD_LOGIC_VECTOR (9 downto 0) := "0000011011";
    constant ap_const_lv10_1C : STD_LOGIC_VECTOR (9 downto 0) := "0000011100";
    constant ap_const_lv10_1D : STD_LOGIC_VECTOR (9 downto 0) := "0000011101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv24_FFFFFE : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111110";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv24_FFFFEB : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111101011";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv_layer2_weights_s_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce0 : STD_LOGIC;
    signal conv_layer2_weights_s_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce1 : STD_LOGIC;
    signal conv_layer2_weights_s_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address2 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce2 : STD_LOGIC;
    signal conv_layer2_weights_s_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address3 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce3 : STD_LOGIC;
    signal conv_layer2_weights_s_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address4 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce4 : STD_LOGIC;
    signal conv_layer2_weights_s_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address5 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce5 : STD_LOGIC;
    signal conv_layer2_weights_s_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address6 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce6 : STD_LOGIC;
    signal conv_layer2_weights_s_q6 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address7 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce7 : STD_LOGIC;
    signal conv_layer2_weights_s_q7 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address8 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce8 : STD_LOGIC;
    signal conv_layer2_weights_s_q8 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address9 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce9 : STD_LOGIC;
    signal conv_layer2_weights_s_q9 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address10 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce10 : STD_LOGIC;
    signal conv_layer2_weights_s_q10 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address11 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce11 : STD_LOGIC;
    signal conv_layer2_weights_s_q11 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address12 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce12 : STD_LOGIC;
    signal conv_layer2_weights_s_q12 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address13 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce13 : STD_LOGIC;
    signal conv_layer2_weights_s_q13 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address14 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce14 : STD_LOGIC;
    signal conv_layer2_weights_s_q14 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address15 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce15 : STD_LOGIC;
    signal conv_layer2_weights_s_q15 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address16 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce16 : STD_LOGIC;
    signal conv_layer2_weights_s_q16 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address17 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce17 : STD_LOGIC;
    signal conv_layer2_weights_s_q17 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address18 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce18 : STD_LOGIC;
    signal conv_layer2_weights_s_q18 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address19 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce19 : STD_LOGIC;
    signal conv_layer2_weights_s_q19 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address20 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce20 : STD_LOGIC;
    signal conv_layer2_weights_s_q20 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address21 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce21 : STD_LOGIC;
    signal conv_layer2_weights_s_q21 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address22 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce22 : STD_LOGIC;
    signal conv_layer2_weights_s_q22 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address23 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce23 : STD_LOGIC;
    signal conv_layer2_weights_s_q23 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address24 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce24 : STD_LOGIC;
    signal conv_layer2_weights_s_q24 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address25 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce25 : STD_LOGIC;
    signal conv_layer2_weights_s_q25 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address26 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce26 : STD_LOGIC;
    signal conv_layer2_weights_s_q26 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address27 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce27 : STD_LOGIC;
    signal conv_layer2_weights_s_q27 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address28 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce28 : STD_LOGIC;
    signal conv_layer2_weights_s_q28 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address29 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce29 : STD_LOGIC;
    signal conv_layer2_weights_s_q29 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address30 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce30 : STD_LOGIC;
    signal conv_layer2_weights_s_q30 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_s_address31 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_layer2_weights_s_ce31 : STD_LOGIC;
    signal conv_layer2_weights_s_q31 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_buff_val_V_1_1_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_0_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_2_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_3_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_4_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_5_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_6_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_7_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_8_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_9_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_10_10 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_11_10 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_12_8 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_13 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_14 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_15 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_16 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_17 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_18 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_19 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_20 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_21 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_22 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_23 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_24 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_25 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_26 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_27 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_28 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_29 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_30 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_31 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_32 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_33 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_34 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_35 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_36 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_37 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_38 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_39 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_40 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_41 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_42 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_43 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_44 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_45 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_46 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_47 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_48 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_49 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_50 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_51 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_52 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_53 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_54 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_55 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_56 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_57 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_58 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_59 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_60 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_61 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_62 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_63 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_64 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_65 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_66 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_67 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_68 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_69 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_70 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_71 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_72 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_73 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_74 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_75 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_76 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_77 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_78 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_79 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_80 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_81 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_82 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_83 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_84 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_85 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_86 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_87 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_88 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_89 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_90 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_91 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_92 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_93 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_94 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_95 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_96 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_97 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_98 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_99 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_10_9 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_10_8 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_10_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_10_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_10_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_10_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_10_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_10_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_10_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_10 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_11_9 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_11_8 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_11_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_11_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_11_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_11_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_11_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_11_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_11_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_11 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_12_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_12_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_12_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_12_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_12_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_12_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_12_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal conv_buff_val_V_1_12 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal scale_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal scale_1_V_ce0 : STD_LOGIC;
    signal scale_1_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal conv_layer2_bias_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_layer2_bias_V_ce0 : STD_LOGIC;
    signal conv_layer2_bias_V_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal scale_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal scale_0_V_ce0 : STD_LOGIC;
    signal scale_0_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond6_reg_4032 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_reg_4032_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal exitcond7_fu_2474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nbreadreq_fu_500_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_24_fu_3760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_mid2_reg_4023 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal tmp_24_reg_4396 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal filter_reg_1062 : STD_LOGIC_VECTOR (4 downto 0);
    signal filter_reg_1062_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state10_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal filter_reg_1062_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal filter_reg_1062_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal a_1_fu_2356_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_1_reg_3944 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_57_cast_fu_2375_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_57_cast_reg_3949 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_fu_2350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_sum_V_addr_reg_3954 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_1_fu_2385_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal b_1_reg_3962 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_129_fu_2400_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_129_reg_3967 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond9_fu_2379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_1_fu_2414_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal c_1_reg_3975 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_63_cast_fu_2429_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_63_cast_reg_3980 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond3_fu_2408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_1_fu_2443_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal d_1_reg_3988 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal exitcond5_fu_2437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_9_fu_2480_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_predicate_op106_read_state8 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal exitcond_flatten_fu_2498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal indvar_flatten_next_fu_2504_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_next_reg_4013 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond1_fu_2522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_reg_4018 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_mid2_fu_2528_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_mid2_fu_2536_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_mid2_reg_4027 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond6_fu_2544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_reg_4032_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_reg_4032_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_reg_4032_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_reg_4032_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_reg_4032_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal filter_1_fu_2550_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal filter_1_reg_4036 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_58_fu_2556_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_58_reg_4041 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_58_reg_4041_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3773_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum_V_0_0_1_reg_4159 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal grp_fu_3781_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_reg_4164 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_layer2_weights_39_reg_4169 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_40_reg_4174 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3789_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_reg_4179 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_layer2_weights_44_reg_4254 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal conv_layer2_weights_45_reg_4259 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_layer2_weights_48_reg_4264 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3815_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp6_reg_4269 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_3823_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp9_reg_4274 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3831_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_reg_4279 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3839_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp26_reg_4284 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum_V_0_1_7_fu_3253_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sum_V_0_1_7_reg_4289 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer2_weights_51_reg_4294 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal grp_fu_3865_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp15_reg_4299 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3873_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp17_reg_4304 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3881_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp18_reg_4309 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3889_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp21_reg_4314 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3897_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp22_reg_4319 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3905_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp24_reg_4324 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3913_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp25_reg_4329 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_V_1_1_7_fu_3492_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sum_V_1_1_7_reg_4334 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_5_fu_3519_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_5_reg_4359 : STD_LOGIC_VECTOR (43 downto 0);
    signal f_op_V_4_reg_4364 : STD_LOGIC_VECTOR (10 downto 0);
    signal scale_0_V_load_reg_4369 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_135_fu_3619_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_135_reg_4374 : STD_LOGIC_VECTOR (7 downto 0);
    signal isneg_reg_4379 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_4385 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_4_fu_3753_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_4_reg_4391 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_predicate_op809_read_state18 : BOOLEAN;
    signal ap_predicate_op1068_read_state18 : BOOLEAN;
    signal ap_block_state18 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal kernel_sum_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_sum_V_ce0 : STD_LOGIC;
    signal kernel_sum_V_we0 : STD_LOGIC;
    signal kernel_sum_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal kernel_sum_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal a_reg_973 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal b_reg_984 : STD_LOGIC_VECTOR (1 downto 0);
    signal c_reg_995 : STD_LOGIC_VECTOR (1 downto 0);
    signal d_reg_1006 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal i_reg_1017 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_reg_1028 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_predicate_op4953_read_state33 : BOOLEAN;
    signal ap_block_state33 : BOOLEAN;
    signal i_1_reg_1039 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_reg_1050 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_filter_phi_fu_1066_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_2362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_128_cast_fu_2458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_fu_2564_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_fu_2575_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_fu_2590_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_fu_2605_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_67_fu_2620_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_69_fu_2635_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_fu_2650_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_73_fu_2665_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_75_fu_2679_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_77_fu_2693_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_79_fu_2707_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_81_fu_2721_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_83_fu_2735_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_fu_2749_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_87_fu_2763_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_89_fu_2777_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_119_fu_2791_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_fu_2805_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_91_fu_2889_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_fu_2903_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_95_fu_2917_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_97_fu_2931_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_99_fu_2945_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_101_fu_2959_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_103_fu_2973_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_105_fu_2987_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_107_fu_3001_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_fu_3015_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_111_fu_3029_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_113_fu_3043_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_115_fu_3057_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_117_fu_3071_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_3402_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state19 : BOOLEAN;
    signal ap_block_state20 : BOOLEAN;
    signal ap_block_state21 : BOOLEAN;
    signal ap_block_state22 : BOOLEAN;
    signal ap_block_state23 : BOOLEAN;
    signal ap_block_state24 : BOOLEAN;
    signal ap_block_state25 : BOOLEAN;
    signal ap_block_state26 : BOOLEAN;
    signal ap_block_state27 : BOOLEAN;
    signal ap_block_state28 : BOOLEAN;
    signal ap_block_state29 : BOOLEAN;
    signal ap_block_state30 : BOOLEAN;
    signal ap_block_state31 : BOOLEAN;
    signal ap_block_state32 : BOOLEAN;
    signal ap_block_state34 : BOOLEAN;
    signal ap_block_state35 : BOOLEAN;
    signal ap_block_state36 : BOOLEAN;
    signal ap_block_state37 : BOOLEAN;
    signal ap_block_state38 : BOOLEAN;
    signal ap_block_state39 : BOOLEAN;
    signal ap_block_state40 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_23_fu_2467_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_14_fu_3766_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_fu_2367_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_15_cast_fu_2391_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_56_fu_2395_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_20_fu_2420_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_2424_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_cast_fu_2449_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_122_fu_2453_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_fu_2463_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal i_8_fu_2486_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_9_mid1_fu_2510_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_19_mid1_fu_2516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_2492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_2569_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_62_fu_2584_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_64_fu_2599_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_66_fu_2614_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_68_fu_2629_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_70_fu_2644_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_72_fu_2659_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_74_fu_2674_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_76_fu_2688_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_78_fu_2702_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_80_fu_2716_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_82_fu_2730_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_84_fu_2744_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_86_fu_2758_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_88_fu_2772_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_118_fu_2786_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_120_fu_2800_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_12_0_0_1_fu_2834_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_0_1_fu_2834_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_0_3_fu_2856_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_0_3_fu_2856_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_0_7_fu_2878_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_0_7_fu_2878_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_90_fu_2884_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_92_fu_2898_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_94_fu_2912_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_96_fu_2926_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_98_fu_2940_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_100_fu_2954_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_102_fu_2968_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_104_fu_2982_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_106_fu_2996_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_108_fu_3010_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_110_fu_3024_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_112_fu_3038_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_114_fu_3052_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_116_fu_3066_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sum_V_0_0_1_cast_fu_3080_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp1_cast_fu_3083_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_V_0_0_3_fu_3086_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3806_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3797_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp3_cast_fu_3113_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sum_V_0_0_7_fu_3116_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of sum_V_0_0_7_fu_3116_p2 : signal is "no";
    signal r_V_12_0_1_4_fu_3149_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_1_4_fu_3149_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_1_7_fu_3171_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_1_7_fu_3171_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_1_7_fu_3193_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_1_7_fu_3193_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_1_2_fu_3213_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_0_1_2_fu_3213_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3847_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_cast_fu_3226_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_3856_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp9_cast_fu_3234_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp10_cast_fu_3240_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp8_fu_3243_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp5_fu_3229_p2 : STD_LOGIC_VECTOR (18 downto 0);
    attribute use_dsp48 of tmp5_fu_3229_p2 : signal is "no";
    signal tmp8_cast_fu_3249_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_12_1_0_2_fu_3275_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_0_2_fu_3275_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_0_4_fu_3297_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_0_4_fu_3297_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_0_6_fu_3319_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_0_6_fu_3319_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_1_fu_3341_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_1_fu_3341_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_1_2_fu_3363_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_1_2_fu_3363_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_1_4_fu_3385_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_1_1_4_fu_3385_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3921_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp15_cast_fu_3420_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp17_cast_fu_3428_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp18_cast_fu_3431_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp16_fu_3434_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp13_fu_3423_p2 : STD_LOGIC_VECTOR (19 downto 0);
    attribute use_dsp48 of tmp13_fu_3423_p2 : signal is "no";
    signal tmp16_cast_fu_3440_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp21_cast_fu_3450_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp22_cast_fu_3453_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp20_fu_3456_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp24_cast_fu_3466_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp25_cast_fu_3469_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp23_fu_3472_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp20_cast_fu_3462_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp23_cast_fu_3478_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp19_fu_3482_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp12_fu_3444_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp19_cast_fu_3488_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal lhs_V_fu_3498_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal rhs_V_fu_3501_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_fu_3505_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_5_fu_3519_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_5_fu_3519_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_3930_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_131_fu_3538_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_133_fu_3558_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_130_fu_3531_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_3561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_s_i_i4_fu_3567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i4_fu_3573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qbit_fu_3551_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_5_fu_3579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_cast_fu_3585_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_7_cast_fu_3547_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_21_fu_3589_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_134_fu_3595_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_a_V_i_fu_3603_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_a_V_i_cast1_fu_3611_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_a_V_i_cast_fu_3615_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_8_fu_3623_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_8_fu_3647_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newsignbit_fu_3652_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_fu_3660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_3665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_3671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not38_i_i_fu_3688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_0_not_i_i_fu_3682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_i_i_fu_3693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_3699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_3676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_fu_3710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_fu_3704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_3716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_49_mux_fu_3722_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_3730_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_op_fu_3747_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_3766_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_3773_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3781_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3789_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3823_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3831_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3839_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3847_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3865_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3873_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3881_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3889_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3897_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3905_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3930_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_3930_p10 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_5_fu_3519_p00 : STD_LOGIC_VECTOR (43 downto 0);

    component nnet_mul_mul_24s_b0s IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component nnet_mac_muladd_8b1s IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component nnet_mac_muladd_8b2s IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component nnet_mac_muladd_8b3s IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component nnet_mac_muladd_8b4t IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component nnet_mac_muladd_8b5t IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component nnet_mac_muladd_1b6t IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (43 downto 0);
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component conv_layer2_conv_bVr IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address6 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address7 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address8 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address9 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address10 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce10 : IN STD_LOGIC;
        q10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address11 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce11 : IN STD_LOGIC;
        q11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address12 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce12 : IN STD_LOGIC;
        q12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address13 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce13 : IN STD_LOGIC;
        q13 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address14 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce14 : IN STD_LOGIC;
        q14 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address15 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce15 : IN STD_LOGIC;
        q15 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address16 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce16 : IN STD_LOGIC;
        q16 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address17 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce17 : IN STD_LOGIC;
        q17 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address18 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce18 : IN STD_LOGIC;
        q18 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address19 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce19 : IN STD_LOGIC;
        q19 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address20 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce20 : IN STD_LOGIC;
        q20 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address21 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce21 : IN STD_LOGIC;
        q21 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address22 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce22 : IN STD_LOGIC;
        q22 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address23 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce23 : IN STD_LOGIC;
        q23 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address24 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce24 : IN STD_LOGIC;
        q24 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address25 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce25 : IN STD_LOGIC;
        q25 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address26 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce26 : IN STD_LOGIC;
        q26 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address27 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce27 : IN STD_LOGIC;
        q27 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address28 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce28 : IN STD_LOGIC;
        q28 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address29 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce29 : IN STD_LOGIC;
        q29 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address30 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce30 : IN STD_LOGIC;
        q30 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address31 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce31 : IN STD_LOGIC;
        q31 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component conv_layer2_scalebWr IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component conv_layer2_conv_bXr IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component conv_layer2_scalebYs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component conv_layer2_kernebZs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    conv_layer2_weights_s_U : component conv_layer2_conv_bVr
    generic map (
        DataWidth => 8,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer2_weights_s_address0,
        ce0 => conv_layer2_weights_s_ce0,
        q0 => conv_layer2_weights_s_q0,
        address1 => conv_layer2_weights_s_address1,
        ce1 => conv_layer2_weights_s_ce1,
        q1 => conv_layer2_weights_s_q1,
        address2 => conv_layer2_weights_s_address2,
        ce2 => conv_layer2_weights_s_ce2,
        q2 => conv_layer2_weights_s_q2,
        address3 => conv_layer2_weights_s_address3,
        ce3 => conv_layer2_weights_s_ce3,
        q3 => conv_layer2_weights_s_q3,
        address4 => conv_layer2_weights_s_address4,
        ce4 => conv_layer2_weights_s_ce4,
        q4 => conv_layer2_weights_s_q4,
        address5 => conv_layer2_weights_s_address5,
        ce5 => conv_layer2_weights_s_ce5,
        q5 => conv_layer2_weights_s_q5,
        address6 => conv_layer2_weights_s_address6,
        ce6 => conv_layer2_weights_s_ce6,
        q6 => conv_layer2_weights_s_q6,
        address7 => conv_layer2_weights_s_address7,
        ce7 => conv_layer2_weights_s_ce7,
        q7 => conv_layer2_weights_s_q7,
        address8 => conv_layer2_weights_s_address8,
        ce8 => conv_layer2_weights_s_ce8,
        q8 => conv_layer2_weights_s_q8,
        address9 => conv_layer2_weights_s_address9,
        ce9 => conv_layer2_weights_s_ce9,
        q9 => conv_layer2_weights_s_q9,
        address10 => conv_layer2_weights_s_address10,
        ce10 => conv_layer2_weights_s_ce10,
        q10 => conv_layer2_weights_s_q10,
        address11 => conv_layer2_weights_s_address11,
        ce11 => conv_layer2_weights_s_ce11,
        q11 => conv_layer2_weights_s_q11,
        address12 => conv_layer2_weights_s_address12,
        ce12 => conv_layer2_weights_s_ce12,
        q12 => conv_layer2_weights_s_q12,
        address13 => conv_layer2_weights_s_address13,
        ce13 => conv_layer2_weights_s_ce13,
        q13 => conv_layer2_weights_s_q13,
        address14 => conv_layer2_weights_s_address14,
        ce14 => conv_layer2_weights_s_ce14,
        q14 => conv_layer2_weights_s_q14,
        address15 => conv_layer2_weights_s_address15,
        ce15 => conv_layer2_weights_s_ce15,
        q15 => conv_layer2_weights_s_q15,
        address16 => conv_layer2_weights_s_address16,
        ce16 => conv_layer2_weights_s_ce16,
        q16 => conv_layer2_weights_s_q16,
        address17 => conv_layer2_weights_s_address17,
        ce17 => conv_layer2_weights_s_ce17,
        q17 => conv_layer2_weights_s_q17,
        address18 => conv_layer2_weights_s_address18,
        ce18 => conv_layer2_weights_s_ce18,
        q18 => conv_layer2_weights_s_q18,
        address19 => conv_layer2_weights_s_address19,
        ce19 => conv_layer2_weights_s_ce19,
        q19 => conv_layer2_weights_s_q19,
        address20 => conv_layer2_weights_s_address20,
        ce20 => conv_layer2_weights_s_ce20,
        q20 => conv_layer2_weights_s_q20,
        address21 => conv_layer2_weights_s_address21,
        ce21 => conv_layer2_weights_s_ce21,
        q21 => conv_layer2_weights_s_q21,
        address22 => conv_layer2_weights_s_address22,
        ce22 => conv_layer2_weights_s_ce22,
        q22 => conv_layer2_weights_s_q22,
        address23 => conv_layer2_weights_s_address23,
        ce23 => conv_layer2_weights_s_ce23,
        q23 => conv_layer2_weights_s_q23,
        address24 => conv_layer2_weights_s_address24,
        ce24 => conv_layer2_weights_s_ce24,
        q24 => conv_layer2_weights_s_q24,
        address25 => conv_layer2_weights_s_address25,
        ce25 => conv_layer2_weights_s_ce25,
        q25 => conv_layer2_weights_s_q25,
        address26 => conv_layer2_weights_s_address26,
        ce26 => conv_layer2_weights_s_ce26,
        q26 => conv_layer2_weights_s_q26,
        address27 => conv_layer2_weights_s_address27,
        ce27 => conv_layer2_weights_s_ce27,
        q27 => conv_layer2_weights_s_q27,
        address28 => conv_layer2_weights_s_address28,
        ce28 => conv_layer2_weights_s_ce28,
        q28 => conv_layer2_weights_s_q28,
        address29 => conv_layer2_weights_s_address29,
        ce29 => conv_layer2_weights_s_ce29,
        q29 => conv_layer2_weights_s_q29,
        address30 => conv_layer2_weights_s_address30,
        ce30 => conv_layer2_weights_s_ce30,
        q30 => conv_layer2_weights_s_q30,
        address31 => conv_layer2_weights_s_address31,
        ce31 => conv_layer2_weights_s_ce31,
        q31 => conv_layer2_weights_s_q31);

    scale_1_V_U : component conv_layer2_scalebWr
    generic map (
        DataWidth => 20,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => scale_1_V_address0,
        ce0 => scale_1_V_ce0,
        q0 => scale_1_V_q0);

    conv_layer2_bias_V_U : component conv_layer2_conv_bXr
    generic map (
        DataWidth => 11,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer2_bias_V_address0,
        ce0 => conv_layer2_bias_V_ce0,
        q0 => conv_layer2_bias_V_q0);

    scale_0_V_U : component conv_layer2_scalebYs
    generic map (
        DataWidth => 20,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => scale_0_V_address0,
        ce0 => scale_0_V_ce0,
        q0 => scale_0_V_q0);

    kernel_sum_V_U : component conv_layer2_kernebZs
    generic map (
        DataWidth => 24,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernel_sum_V_address0,
        ce0 => kernel_sum_V_ce0,
        we0 => kernel_sum_V_we0,
        d0 => kernel_sum_V_d0,
        q0 => kernel_sum_V_q0);

    nnet_mul_mul_24s_b0s_U19 : component nnet_mul_mul_24s_b0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 6,
        dout_WIDTH => 24)
    port map (
        din0 => kernel_sum_V_q0,
        din1 => tmp_14_fu_3766_p1,
        dout => tmp_14_fu_3766_p2);

    nnet_mac_muladd_8b1s_U20 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q0,
        din1 => conv_buff_val_V_1_0_s,
        din2 => grp_fu_3773_p2,
        dout => grp_fu_3773_p3);

    nnet_mac_muladd_8b1s_U21 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q2,
        din1 => conv_buff_val_V_1_2_s,
        din2 => grp_fu_3781_p2,
        dout => grp_fu_3781_p3);

    nnet_mac_muladd_8b1s_U22 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q6,
        din1 => conv_buff_val_V_1_6_s,
        din2 => grp_fu_3789_p2,
        dout => grp_fu_3789_p3);

    nnet_mac_muladd_8b2s_U23 : component nnet_mac_muladd_8b2s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => conv_layer2_weights_39_reg_4169,
        din1 => conv_buff_val_V_1_4_s,
        din2 => sum_V_0_0_3_fu_3086_p2,
        dout => grp_fu_3797_p3);

    nnet_mac_muladd_8b3s_U24 : component nnet_mac_muladd_8b3s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => conv_layer2_weights_40_reg_4174,
        din1 => conv_buff_val_V_1_5_s,
        din2 => tmp4_reg_4179,
        dout => grp_fu_3806_p3);

    nnet_mac_muladd_8b4t_U25 : component nnet_mac_muladd_8b4t
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => conv_layer2_weights_s_q8,
        din1 => conv_buff_val_V_1_8_s,
        din2 => sum_V_0_0_7_fu_3116_p2,
        dout => grp_fu_3815_p3);

    nnet_mac_muladd_8b1s_U26 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q11,
        din1 => conv_buff_val_V_1_11_10,
        din2 => grp_fu_3823_p2,
        dout => grp_fu_3823_p3);

    nnet_mac_muladd_8b1s_U27 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q14,
        din1 => conv_buff_val_V_1_14,
        din2 => grp_fu_3831_p2,
        dout => grp_fu_3831_p3);

    nnet_mac_muladd_8b1s_U28 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q16,
        din1 => conv_buff_val_V_1_12_1,
        din2 => grp_fu_3839_p2,
        dout => grp_fu_3839_p3);

    nnet_mac_muladd_8b1s_U29 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_44_reg_4254,
        din1 => conv_buff_val_V_1_9_s,
        din2 => grp_fu_3847_p2,
        dout => grp_fu_3847_p3);

    nnet_mac_muladd_8b3s_U30 : component nnet_mac_muladd_8b3s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => conv_layer2_weights_48_reg_4264,
        din1 => conv_buff_val_V_1_13,
        din2 => tmp11_reg_4279,
        dout => grp_fu_3856_p3);

    nnet_mac_muladd_8b1s_U31 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q19,
        din1 => conv_buff_val_V_1_11_6,
        din2 => grp_fu_3865_p2,
        dout => grp_fu_3865_p3);

    nnet_mac_muladd_8b1s_U32 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q21,
        din1 => conv_buff_val_V_1_11_4,
        din2 => grp_fu_3873_p2,
        dout => grp_fu_3873_p3);

    nnet_mac_muladd_8b1s_U33 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q23,
        din1 => conv_buff_val_V_1_11_2,
        din2 => grp_fu_3881_p2,
        dout => grp_fu_3881_p3);

    nnet_mac_muladd_8b1s_U34 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q25,
        din1 => conv_buff_val_V_1_11,
        din2 => grp_fu_3889_p2,
        dout => grp_fu_3889_p3);

    nnet_mac_muladd_8b1s_U35 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q27,
        din1 => conv_buff_val_V_1_12_6,
        din2 => grp_fu_3897_p2,
        dout => grp_fu_3897_p3);

    nnet_mac_muladd_8b1s_U36 : component nnet_mac_muladd_8b1s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => conv_layer2_weights_s_q29,
        din1 => conv_buff_val_V_1_12_4,
        din2 => grp_fu_3905_p2,
        dout => grp_fu_3905_p3);

    nnet_mac_muladd_8b3s_U37 : component nnet_mac_muladd_8b3s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => conv_layer2_weights_s_q31,
        din1 => conv_buff_val_V_1_12_2,
        din2 => tmp26_reg_4284,
        dout => grp_fu_3913_p3);

    nnet_mac_muladd_8b5t_U38 : component nnet_mac_muladd_8b5t
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 19,
        dout_WIDTH => 20)
    port map (
        din0 => conv_layer2_weights_51_reg_4294,
        din1 => conv_buff_val_V_1_11_7,
        din2 => sum_V_0_1_7_reg_4289,
        dout => grp_fu_3921_p3);

    nnet_mac_muladd_1b6t_U39 : component nnet_mac_muladd_1b6t
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 20,
        din2_WIDTH => 44,
        dout_WIDTH => 44)
    port map (
        din0 => f_op_V_4_reg_4364,
        din1 => grp_fu_3930_p1,
        din2 => p_Val2_5_reg_4359,
        dout => grp_fu_3930_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond_flatten_fu_2498_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond_flatten_fu_2498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state10)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state10);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((exitcond_flatten_fu_2498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a_reg_973_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                a_reg_973 <= a_1_reg_3944;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                a_reg_973 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    b_reg_984_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_2408_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                b_reg_984 <= b_1_reg_3962;
            elsif (((exitcond_fu_2350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                b_reg_984 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    c_reg_995_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond5_fu_2437_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                c_reg_995 <= c_1_reg_3975;
            elsif (((exitcond9_fu_2379_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c_reg_995 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    d_reg_1006_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_2408_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                d_reg_1006 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_reg_1006 <= d_1_reg_3988;
            end if; 
        end if;
    end process;

    filter_reg_1062_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6_reg_4032 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                filter_reg_1062 <= filter_1_reg_4036;
            elsif (((exitcond_flatten_fu_2498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                filter_reg_1062 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_1_reg_1039_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op106_read_state8 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (exitcond7_fu_2474_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_1_reg_1039 <= ap_const_lv4_0;
            elsif ((not(((ap_predicate_op4953_read_state33 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                i_1_reg_1039 <= i_1_mid2_reg_4027;
            end if; 
        end if;
    end process;

    i_reg_1017_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_2350_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_reg_1017 <= ap_const_lv8_0;
            elsif ((not(((ap_predicate_op106_read_state8 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (exitcond7_fu_2474_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_reg_1017 <= i_9_fu_2480_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_1028_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op106_read_state8 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (exitcond7_fu_2474_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvar_flatten_reg_1028 <= ap_const_lv8_0;
            elsif ((not(((ap_predicate_op4953_read_state33 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                indvar_flatten_reg_1028 <= indvar_flatten_next_reg_4013;
            end if; 
        end if;
    end process;

    j_reg_1050_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op106_read_state8 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (exitcond7_fu_2474_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                j_reg_1050 <= ap_const_lv4_0;
            elsif ((not(((ap_predicate_op4953_read_state33 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                j_reg_1050 <= j_4_reg_4391;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                a_1_reg_3944 <= a_1_fu_2356_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                b_1_reg_3962 <= b_1_fu_2385_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                c_1_reg_3975 <= c_1_fu_2414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_predicate_op4953_read_state33 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_predicate_op4953_read_state33 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state33)) or (not((((ap_predicate_op1068_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op809_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op1068_read_state18 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or (not((((ap_predicate_op1068_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op809_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op809_read_state18 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state40)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state39)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or (not(((ap_predicate_op106_read_state8 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_predicate_op106_read_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then
                conv_buff_val_V_1_0_s <= conv_buff_val_V_1_1_s;
                conv_buff_val_V_1_10 <= conv_buff_val_V_1_11_9;
                conv_buff_val_V_1_10_1 <= conv_buff_val_V_1_10;
                conv_buff_val_V_1_10_10 <= conv_buff_val_V_1_11_10;
                conv_buff_val_V_1_10_2 <= conv_buff_val_V_1_10_1;
                conv_buff_val_V_1_10_3 <= conv_buff_val_V_1_10_2;
                conv_buff_val_V_1_10_4 <= conv_buff_val_V_1_10_3;
                conv_buff_val_V_1_10_5 <= conv_buff_val_V_1_10_4;
                conv_buff_val_V_1_10_6 <= conv_buff_val_V_1_10_5;
                conv_buff_val_V_1_10_7 <= conv_buff_val_V_1_10_6;
                conv_buff_val_V_1_10_8 <= conv_buff_val_V_1_10_7;
                conv_buff_val_V_1_10_9 <= conv_buff_val_V_1_10_8;
                conv_buff_val_V_1_11 <= conv_buff_val_V_1_12_7;
                conv_buff_val_V_1_11_1 <= conv_buff_val_V_1_11;
                conv_buff_val_V_1_11_10 <= conv_buff_val_V_1_12_8;
                conv_buff_val_V_1_11_2 <= conv_buff_val_V_1_11_1;
                conv_buff_val_V_1_11_3 <= conv_buff_val_V_1_11_2;
                conv_buff_val_V_1_11_4 <= conv_buff_val_V_1_11_3;
                conv_buff_val_V_1_11_5 <= conv_buff_val_V_1_11_4;
                conv_buff_val_V_1_11_6 <= conv_buff_val_V_1_11_5;
                conv_buff_val_V_1_11_7 <= conv_buff_val_V_1_11_6;
                conv_buff_val_V_1_11_8 <= conv_buff_val_V_1_11_7;
                conv_buff_val_V_1_11_9 <= conv_buff_val_V_1_11_8;
                conv_buff_val_V_1_12 <= in_V_V_dout;
                conv_buff_val_V_1_12_1 <= conv_buff_val_V_1_12;
                conv_buff_val_V_1_12_2 <= conv_buff_val_V_1_12_1;
                conv_buff_val_V_1_12_3 <= conv_buff_val_V_1_12_2;
                conv_buff_val_V_1_12_4 <= conv_buff_val_V_1_12_3;
                conv_buff_val_V_1_12_5 <= conv_buff_val_V_1_12_4;
                conv_buff_val_V_1_12_6 <= conv_buff_val_V_1_12_5;
                conv_buff_val_V_1_12_7 <= conv_buff_val_V_1_12_6;
                conv_buff_val_V_1_12_8 <= conv_buff_val_V_1_13;
                conv_buff_val_V_1_13 <= conv_buff_val_V_1_14;
                conv_buff_val_V_1_14 <= conv_buff_val_V_1_15;
                conv_buff_val_V_1_15 <= conv_buff_val_V_1_16;
                conv_buff_val_V_1_16 <= conv_buff_val_V_1_17;
                conv_buff_val_V_1_17 <= conv_buff_val_V_1_18;
                conv_buff_val_V_1_18 <= conv_buff_val_V_1_19;
                conv_buff_val_V_1_19 <= conv_buff_val_V_1_20;
                conv_buff_val_V_1_1_s <= conv_buff_val_V_1_2_s;
                conv_buff_val_V_1_20 <= conv_buff_val_V_1_21;
                conv_buff_val_V_1_21 <= conv_buff_val_V_1_22;
                conv_buff_val_V_1_22 <= conv_buff_val_V_1_23;
                conv_buff_val_V_1_23 <= conv_buff_val_V_1_24;
                conv_buff_val_V_1_24 <= conv_buff_val_V_1_25;
                conv_buff_val_V_1_25 <= conv_buff_val_V_1_26;
                conv_buff_val_V_1_26 <= conv_buff_val_V_1_27;
                conv_buff_val_V_1_27 <= conv_buff_val_V_1_28;
                conv_buff_val_V_1_28 <= conv_buff_val_V_1_29;
                conv_buff_val_V_1_29 <= conv_buff_val_V_1_30;
                conv_buff_val_V_1_2_s <= conv_buff_val_V_1_3_s;
                conv_buff_val_V_1_30 <= conv_buff_val_V_1_31;
                conv_buff_val_V_1_31 <= conv_buff_val_V_1_32;
                conv_buff_val_V_1_32 <= conv_buff_val_V_1_33;
                conv_buff_val_V_1_33 <= conv_buff_val_V_1_34;
                conv_buff_val_V_1_34 <= conv_buff_val_V_1_35;
                conv_buff_val_V_1_35 <= conv_buff_val_V_1_36;
                conv_buff_val_V_1_36 <= conv_buff_val_V_1_37;
                conv_buff_val_V_1_37 <= conv_buff_val_V_1_38;
                conv_buff_val_V_1_38 <= conv_buff_val_V_1_39;
                conv_buff_val_V_1_39 <= conv_buff_val_V_1_40;
                conv_buff_val_V_1_3_s <= conv_buff_val_V_1_4_s;
                conv_buff_val_V_1_40 <= conv_buff_val_V_1_41;
                conv_buff_val_V_1_41 <= conv_buff_val_V_1_42;
                conv_buff_val_V_1_42 <= conv_buff_val_V_1_43;
                conv_buff_val_V_1_43 <= conv_buff_val_V_1_44;
                conv_buff_val_V_1_44 <= conv_buff_val_V_1_45;
                conv_buff_val_V_1_45 <= conv_buff_val_V_1_46;
                conv_buff_val_V_1_46 <= conv_buff_val_V_1_47;
                conv_buff_val_V_1_47 <= conv_buff_val_V_1_48;
                conv_buff_val_V_1_48 <= conv_buff_val_V_1_49;
                conv_buff_val_V_1_49 <= conv_buff_val_V_1_50;
                conv_buff_val_V_1_4_s <= conv_buff_val_V_1_5_s;
                conv_buff_val_V_1_50 <= conv_buff_val_V_1_51;
                conv_buff_val_V_1_51 <= conv_buff_val_V_1_52;
                conv_buff_val_V_1_52 <= conv_buff_val_V_1_53;
                conv_buff_val_V_1_53 <= conv_buff_val_V_1_54;
                conv_buff_val_V_1_54 <= conv_buff_val_V_1_55;
                conv_buff_val_V_1_55 <= conv_buff_val_V_1_56;
                conv_buff_val_V_1_56 <= conv_buff_val_V_1_57;
                conv_buff_val_V_1_57 <= conv_buff_val_V_1_58;
                conv_buff_val_V_1_58 <= conv_buff_val_V_1_59;
                conv_buff_val_V_1_59 <= conv_buff_val_V_1_60;
                conv_buff_val_V_1_5_s <= conv_buff_val_V_1_6_s;
                conv_buff_val_V_1_60 <= conv_buff_val_V_1_61;
                conv_buff_val_V_1_61 <= conv_buff_val_V_1_62;
                conv_buff_val_V_1_62 <= conv_buff_val_V_1_63;
                conv_buff_val_V_1_63 <= conv_buff_val_V_1_64;
                conv_buff_val_V_1_64 <= conv_buff_val_V_1_65;
                conv_buff_val_V_1_65 <= conv_buff_val_V_1_66;
                conv_buff_val_V_1_66 <= conv_buff_val_V_1_67;
                conv_buff_val_V_1_67 <= conv_buff_val_V_1_68;
                conv_buff_val_V_1_68 <= conv_buff_val_V_1_69;
                conv_buff_val_V_1_69 <= conv_buff_val_V_1_70;
                conv_buff_val_V_1_6_s <= conv_buff_val_V_1_7_s;
                conv_buff_val_V_1_70 <= conv_buff_val_V_1_71;
                conv_buff_val_V_1_71 <= conv_buff_val_V_1_72;
                conv_buff_val_V_1_72 <= conv_buff_val_V_1_73;
                conv_buff_val_V_1_73 <= conv_buff_val_V_1_74;
                conv_buff_val_V_1_74 <= conv_buff_val_V_1_75;
                conv_buff_val_V_1_75 <= conv_buff_val_V_1_76;
                conv_buff_val_V_1_76 <= conv_buff_val_V_1_77;
                conv_buff_val_V_1_77 <= conv_buff_val_V_1_78;
                conv_buff_val_V_1_78 <= conv_buff_val_V_1_79;
                conv_buff_val_V_1_79 <= conv_buff_val_V_1_80;
                conv_buff_val_V_1_7_s <= conv_buff_val_V_1_8_s;
                conv_buff_val_V_1_80 <= conv_buff_val_V_1_81;
                conv_buff_val_V_1_81 <= conv_buff_val_V_1_82;
                conv_buff_val_V_1_82 <= conv_buff_val_V_1_83;
                conv_buff_val_V_1_83 <= conv_buff_val_V_1_84;
                conv_buff_val_V_1_84 <= conv_buff_val_V_1_85;
                conv_buff_val_V_1_85 <= conv_buff_val_V_1_86;
                conv_buff_val_V_1_86 <= conv_buff_val_V_1_87;
                conv_buff_val_V_1_87 <= conv_buff_val_V_1_88;
                conv_buff_val_V_1_88 <= conv_buff_val_V_1_89;
                conv_buff_val_V_1_89 <= conv_buff_val_V_1_90;
                conv_buff_val_V_1_8_s <= conv_buff_val_V_1_9_s;
                conv_buff_val_V_1_90 <= conv_buff_val_V_1_91;
                conv_buff_val_V_1_91 <= conv_buff_val_V_1_92;
                conv_buff_val_V_1_92 <= conv_buff_val_V_1_93;
                conv_buff_val_V_1_93 <= conv_buff_val_V_1_94;
                conv_buff_val_V_1_94 <= conv_buff_val_V_1_95;
                conv_buff_val_V_1_95 <= conv_buff_val_V_1_96;
                conv_buff_val_V_1_96 <= conv_buff_val_V_1_97;
                conv_buff_val_V_1_97 <= conv_buff_val_V_1_98;
                conv_buff_val_V_1_98 <= conv_buff_val_V_1_99;
                conv_buff_val_V_1_99 <= conv_buff_val_V_1_10_9;
                conv_buff_val_V_1_9_s <= conv_buff_val_V_1_10_10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6_reg_4032 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                conv_layer2_weights_39_reg_4169 <= conv_layer2_weights_s_q4;
                conv_layer2_weights_40_reg_4174 <= conv_layer2_weights_s_q5;
                sum_V_0_0_1_reg_4159 <= grp_fu_3773_p3;
                tmp1_reg_4164 <= grp_fu_3781_p3;
                tmp4_reg_4179 <= grp_fu_3789_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6_reg_4032_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                conv_layer2_weights_44_reg_4254 <= conv_layer2_weights_s_q9;
                conv_layer2_weights_45_reg_4259 <= conv_layer2_weights_s_q10;
                conv_layer2_weights_48_reg_4264 <= conv_layer2_weights_s_q13;
                tmp11_reg_4279 <= grp_fu_3831_p3;
                tmp26_reg_4284 <= grp_fu_3839_p3;
                tmp6_reg_4269 <= grp_fu_3815_p3;
                tmp9_reg_4274 <= grp_fu_3823_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6_reg_4032_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                conv_layer2_weights_51_reg_4294 <= conv_layer2_weights_s_q18;
                tmp15_reg_4299 <= grp_fu_3865_p3;
                tmp17_reg_4304 <= grp_fu_3873_p3;
                tmp18_reg_4309 <= grp_fu_3881_p3;
                tmp21_reg_4314 <= grp_fu_3889_p3;
                tmp22_reg_4319 <= grp_fu_3897_p3;
                tmp24_reg_4324 <= grp_fu_3905_p3;
                tmp25_reg_4329 <= grp_fu_3913_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                d_1_reg_3988 <= d_1_fu_2443_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_2498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                exitcond1_reg_4018 <= exitcond1_fu_2522_p2;
                i_1_mid2_reg_4027 <= i_1_mid2_fu_2536_p3;
                tmp_19_mid2_reg_4023 <= tmp_19_mid2_fu_2528_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond6_reg_4032 <= exitcond6_fu_2544_p2;
                exitcond6_reg_4032_pp0_iter1_reg <= exitcond6_reg_4032;
                filter_reg_1062_pp0_iter1_reg <= filter_reg_1062;
                    tmp_58_reg_4041_pp0_iter1_reg(9 downto 5) <= tmp_58_reg_4041(9 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond6_reg_4032_pp0_iter2_reg <= exitcond6_reg_4032_pp0_iter1_reg;
                exitcond6_reg_4032_pp0_iter3_reg <= exitcond6_reg_4032_pp0_iter2_reg;
                exitcond6_reg_4032_pp0_iter4_reg <= exitcond6_reg_4032_pp0_iter3_reg;
                exitcond6_reg_4032_pp0_iter5_reg <= exitcond6_reg_4032_pp0_iter4_reg;
                exitcond6_reg_4032_pp0_iter6_reg <= exitcond6_reg_4032_pp0_iter5_reg;
                filter_reg_1062_pp0_iter2_reg <= filter_reg_1062_pp0_iter1_reg;
                filter_reg_1062_pp0_iter3_reg <= filter_reg_1062_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6_reg_4032_pp0_iter4_reg = ap_const_lv1_0))) then
                f_op_V_4_reg_4364 <= conv_layer2_bias_V_q0;
                p_Val2_5_reg_4359 <= p_Val2_5_fu_3519_p2;
                scale_0_V_load_reg_4369 <= scale_0_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                filter_1_reg_4036 <= filter_1_fu_2550_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                indvar_flatten_next_reg_4013 <= indvar_flatten_next_fu_2504_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6_reg_4032_pp0_iter5_reg = ap_const_lv1_0))) then
                isneg_reg_4379 <= r_V_8_fu_3623_p2(23 downto 23);
                tmp_135_reg_4374 <= tmp_135_fu_3619_p1;
                tmp_30_reg_4385 <= r_V_8_fu_3623_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op1068_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op809_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                j_4_reg_4391 <= j_4_fu_3753_p3;
                tmp_24_reg_4396 <= tmp_24_fu_3760_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_2350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                kernel_sum_V_addr_reg_3954 <= tmp_s_fu_2362_p1(4 - 1 downto 0);
                    tmp_57_cast_reg_3949(5 downto 1) <= tmp_57_cast_fu_2375_p1(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6_reg_4032_pp0_iter2_reg = ap_const_lv1_0))) then
                sum_V_0_1_7_reg_4289 <= sum_V_0_1_7_fu_3253_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6_reg_4032_pp0_iter3_reg = ap_const_lv1_0))) then
                sum_V_1_1_7_reg_4334 <= sum_V_1_1_7_fu_3492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9_fu_2379_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    tmp_129_reg_3967(7 downto 1) <= tmp_129_fu_2400_p3(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6_fu_2544_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    tmp_58_reg_4041(9 downto 5) <= tmp_58_fu_2556_p3(9 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_2408_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    tmp_63_cast_reg_3980(10 downto 3) <= tmp_63_cast_fu_2429_p3(10 downto 3);
            end if;
        end if;
    end process;
    tmp_57_cast_reg_3949(0) <= '0';
    tmp_57_cast_reg_3949(6) <= '0';
    tmp_129_reg_3967(0) <= '0';
    tmp_63_cast_reg_3980(2 downto 0) <= "000";
    tmp_58_reg_4041(4 downto 0) <= "00000";
    tmp_58_reg_4041_pp0_iter1_reg(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_V_V_empty_n, ap_enable_reg_pp0_iter7, ap_CS_fsm_state8, exitcond7_fu_2474_p2, grp_nbreadreq_fu_500_p3, ap_CS_fsm_state18, tmp_24_fu_3760_p2, tmp_19_mid2_reg_4023, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state2, exitcond_fu_2350_p2, ap_CS_fsm_state3, exitcond9_fu_2379_p2, ap_CS_fsm_state4, exitcond3_fu_2408_p2, ap_CS_fsm_state5, exitcond5_fu_2437_p2, ap_predicate_op106_read_state8, exitcond_flatten_fu_2498_p2, ap_CS_fsm_state9, exitcond6_fu_2544_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_predicate_op809_read_state18, ap_predicate_op1068_read_state18, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter6, ap_predicate_op4953_read_state33)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond_fu_2350_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((exitcond9_fu_2379_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state4 => 
                if (((exitcond3_fu_2408_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((exitcond5_fu_2437_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state8 => 
                if ((not(((ap_predicate_op106_read_state8 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (exitcond7_fu_2474_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif ((not(((ap_predicate_op106_read_state8 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (exitcond7_fu_2474_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((exitcond_flatten_fu_2498_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond6_fu_2544_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond6_fu_2544_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state18 => 
                if ((not((((ap_predicate_op1068_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op809_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)))) and (tmp_24_fu_3760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                elsif ((not((((ap_predicate_op1068_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op809_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)))) and (tmp_19_mid2_reg_4023 = ap_const_lv1_1) and (tmp_24_fu_3760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif ((not((((ap_predicate_op1068_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op809_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)))) and (tmp_19_mid2_reg_4023 = ap_const_lv1_0) and (tmp_24_fu_3760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if ((not(((ap_predicate_op4953_read_state33 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                if ((not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_1_fu_2356_p2 <= std_logic_vector(unsigned(a_reg_973) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state18 <= ap_CS_fsm(10);
    ap_CS_fsm_state19 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(12);
    ap_CS_fsm_state21 <= ap_CS_fsm(13);
    ap_CS_fsm_state22 <= ap_CS_fsm(14);
    ap_CS_fsm_state23 <= ap_CS_fsm(15);
    ap_CS_fsm_state24 <= ap_CS_fsm(16);
    ap_CS_fsm_state25 <= ap_CS_fsm(17);
    ap_CS_fsm_state26 <= ap_CS_fsm(18);
    ap_CS_fsm_state27 <= ap_CS_fsm(19);
    ap_CS_fsm_state28 <= ap_CS_fsm(20);
    ap_CS_fsm_state29 <= ap_CS_fsm(21);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(22);
    ap_CS_fsm_state31 <= ap_CS_fsm(23);
    ap_CS_fsm_state32 <= ap_CS_fsm(24);
    ap_CS_fsm_state33 <= ap_CS_fsm(25);
    ap_CS_fsm_state34 <= ap_CS_fsm(26);
    ap_CS_fsm_state35 <= ap_CS_fsm(27);
    ap_CS_fsm_state36 <= ap_CS_fsm(28);
    ap_CS_fsm_state37 <= ap_CS_fsm(29);
    ap_CS_fsm_state38 <= ap_CS_fsm(30);
    ap_CS_fsm_state39 <= ap_CS_fsm(31);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(32);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter7, exitcond6_reg_4032_pp0_iter6_reg)
    begin
                ap_block_pp0_stage0_01001 <= ((exitcond6_reg_4032_pp0_iter6_reg = ap_const_lv1_0) and (out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter7, exitcond6_reg_4032_pp0_iter6_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((exitcond6_reg_4032_pp0_iter6_reg = ap_const_lv1_0) and (out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter7, exitcond6_reg_4032_pp0_iter6_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((exitcond6_reg_4032_pp0_iter6_reg = ap_const_lv1_0) and (out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state17_pp0_stage0_iter7_assign_proc : process(out_V_V_full_n, exitcond6_reg_4032_pp0_iter6_reg)
    begin
                ap_block_state17_pp0_stage0_iter7 <= ((exitcond6_reg_4032_pp0_iter6_reg = ap_const_lv1_0) and (out_V_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state18_assign_proc : process(in_V_V_empty_n, ap_predicate_op809_read_state18, ap_predicate_op1068_read_state18)
    begin
                ap_block_state18 <= (((ap_predicate_op1068_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op809_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state19_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state19 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state20_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state20 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state21_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state21 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state22_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state22 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state23_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state23 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state24_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state24 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state25_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state25 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state26_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state26 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state27_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state27 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state28_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state28 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state29_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state29 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state30_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state30 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state31_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state31 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state32_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state32 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state33_assign_proc : process(in_V_V_empty_n, ap_predicate_op4953_read_state33)
    begin
                ap_block_state33 <= ((ap_predicate_op4953_read_state33 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state34_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state34 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state35_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state35 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state36_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state36 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state37_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state37 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state38_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state38 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state39_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state39 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state40_assign_proc : process(in_V_V_empty_n, grp_nbreadreq_fu_500_p3)
    begin
                ap_block_state40 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(in_V_V_empty_n, ap_predicate_op106_read_state8)
    begin
                ap_block_state8 <= ((ap_predicate_op106_read_state8 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state10_assign_proc : process(exitcond6_fu_2544_p2)
    begin
        if ((exitcond6_fu_2544_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond_flatten_fu_2498_p2, ap_CS_fsm_state9)
    begin
        if (((exitcond_flatten_fu_2498_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_filter_phi_fu_1066_p4_assign_proc : process(ap_block_pp0_stage0, exitcond6_reg_4032, filter_reg_1062, ap_CS_fsm_pp0_stage0, filter_1_reg_4036, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond6_reg_4032 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_filter_phi_fu_1066_p4 <= filter_1_reg_4036;
        else 
            ap_phi_mux_filter_phi_fu_1066_p4 <= filter_reg_1062;
        end if; 
    end process;


    ap_predicate_op1068_read_state18_assign_proc : process(grp_nbreadreq_fu_500_p3, tmp_24_fu_3760_p2)
    begin
                ap_predicate_op1068_read_state18 <= ((tmp_24_fu_3760_p2 = ap_const_lv1_1) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op106_read_state8_assign_proc : process(exitcond7_fu_2474_p2, grp_nbreadreq_fu_500_p3)
    begin
                ap_predicate_op106_read_state8 <= ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (exitcond7_fu_2474_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op4953_read_state33_assign_proc : process(grp_nbreadreq_fu_500_p3, tmp_19_mid2_reg_4023, tmp_24_reg_4396)
    begin
                ap_predicate_op4953_read_state33 <= ((tmp_19_mid2_reg_4023 = ap_const_lv1_1) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (tmp_24_reg_4396 = ap_const_lv1_0));
    end process;


    ap_predicate_op809_read_state18_assign_proc : process(grp_nbreadreq_fu_500_p3, tmp_24_fu_3760_p2, tmp_19_mid2_reg_4023)
    begin
                ap_predicate_op809_read_state18 <= ((tmp_19_mid2_reg_4023 = ap_const_lv1_1) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (tmp_24_fu_3760_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond_flatten_fu_2498_p2, ap_CS_fsm_state9)
    begin
        if (((exitcond_flatten_fu_2498_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_1_fu_2385_p2 <= std_logic_vector(unsigned(b_reg_984) + unsigned(ap_const_lv2_1));
    brmerge39_i_i_fu_3693_p2 <= (p_not38_i_i_fu_3688_p2 or newsignbit_0_not_i_i_fu_3682_p2);
    brmerge_fu_3716_p2 <= (underflow_not_fu_3710_p2 or overflow_fu_3676_p2);
    brmerge_i_i_fu_3665_p2 <= (p_not_i_i_fu_3660_p2 or newsignbit_fu_3652_p3);
    brmerge_i_i_i_fu_3704_p2 <= (underflow_fu_3699_p2 or overflow_fu_3676_p2);
    c_1_fu_2414_p2 <= std_logic_vector(unsigned(c_reg_995) + unsigned(ap_const_lv2_1));
    conv_layer2_bias_V_address0 <= tmp_25_fu_3402_p1(4 - 1 downto 0);

    conv_layer2_bias_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            conv_layer2_bias_V_ce0 <= ap_const_logic_1;
        else 
            conv_layer2_bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_address0_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, ap_enable_reg_pp0_iter0, tmp_128_cast_fu_2458_p1, tmp_59_fu_2564_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_address0 <= tmp_59_fu_2564_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_layer2_weights_s_address0 <= tmp_128_cast_fu_2458_p1(9 - 1 downto 0);
        else 
            conv_layer2_weights_s_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    conv_layer2_weights_s_address1 <= tmp_61_fu_2575_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address10 <= tmp_79_fu_2707_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address11 <= tmp_81_fu_2721_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address12 <= tmp_83_fu_2735_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address13 <= tmp_85_fu_2749_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address14 <= tmp_87_fu_2763_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address15 <= tmp_89_fu_2777_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address16 <= tmp_119_fu_2791_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address17 <= tmp_121_fu_2805_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address18 <= tmp_91_fu_2889_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address19 <= tmp_93_fu_2903_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address2 <= tmp_63_fu_2590_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address20 <= tmp_95_fu_2917_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address21 <= tmp_97_fu_2931_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address22 <= tmp_99_fu_2945_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address23 <= tmp_101_fu_2959_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address24 <= tmp_103_fu_2973_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address25 <= tmp_105_fu_2987_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address26 <= tmp_107_fu_3001_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address27 <= tmp_109_fu_3015_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address28 <= tmp_111_fu_3029_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address29 <= tmp_113_fu_3043_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address3 <= tmp_65_fu_2605_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address30 <= tmp_115_fu_3057_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address31 <= tmp_117_fu_3071_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address4 <= tmp_67_fu_2620_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address5 <= tmp_69_fu_2635_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address6 <= tmp_71_fu_2650_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address7 <= tmp_73_fu_2665_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address8 <= tmp_75_fu_2679_p3(9 - 1 downto 0);
    conv_layer2_weights_s_address9 <= tmp_77_fu_2693_p3(9 - 1 downto 0);

    conv_layer2_weights_s_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            conv_layer2_weights_s_ce0 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce1 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce10_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce10 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce11_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce11 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce12_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce12 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce13_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce13 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce14_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce14 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce15_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce15 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce16_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce16 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce16 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce17_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce17 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce17 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce18_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce18 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce18 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce19_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce19 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce19 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce2 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce20_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce20 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce20 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce21_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce21 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce21 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce22_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce22 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce22 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce23_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce23 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce23 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce24_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce24 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce24 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce25_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce25 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce25 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce26_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce26 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce26 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce27_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce27 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce27 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce28_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce28 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce28 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce29_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce29 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce29 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce3 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce30_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce30 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce30 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce31_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            conv_layer2_weights_s_ce31 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce31 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce4 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce5 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce6 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce7 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce8_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce8 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    conv_layer2_weights_s_ce9_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_layer2_weights_s_ce9 <= ap_const_logic_1;
        else 
            conv_layer2_weights_s_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    d_1_fu_2443_p2 <= std_logic_vector(unsigned(d_reg_1006) + unsigned(ap_const_lv4_1));
    exitcond1_fu_2522_p2 <= "1" when (j_reg_1050 = ap_const_lv4_D) else "0";
    exitcond3_fu_2408_p2 <= "1" when (c_reg_995 = ap_const_lv2_2) else "0";
    exitcond5_fu_2437_p2 <= "1" when (d_reg_1006 = ap_const_lv4_8) else "0";
    exitcond6_fu_2544_p2 <= "1" when (ap_phi_mux_filter_phi_fu_1066_p4 = ap_const_lv5_10) else "0";
    exitcond7_fu_2474_p2 <= "1" when (i_reg_1017 = ap_const_lv8_80) else "0";
    exitcond9_fu_2379_p2 <= "1" when (b_reg_984 = ap_const_lv2_2) else "0";
    exitcond_flatten_fu_2498_p2 <= "1" when (indvar_flatten_reg_1028 = ap_const_lv8_A9) else "0";
    exitcond_fu_2350_p2 <= "1" when (a_reg_973 = ap_const_lv5_10) else "0";
    filter_1_fu_2550_p2 <= std_logic_vector(unsigned(ap_phi_mux_filter_phi_fu_1066_p4) + unsigned(ap_const_lv5_1));
    grp_fu_3773_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_0_1_fu_2834_p0) * signed(r_V_12_0_0_1_fu_2834_p1))), 16));
    grp_fu_3781_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_0_3_fu_2856_p0) * signed(r_V_12_0_0_3_fu_2856_p1))), 16));
    grp_fu_3789_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_0_7_fu_2878_p0) * signed(r_V_12_0_0_7_fu_2878_p1))), 16));
    grp_fu_3823_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_1_4_fu_3149_p0) * signed(r_V_12_0_1_4_fu_3149_p1))), 16));
    grp_fu_3831_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_1_7_fu_3171_p0) * signed(r_V_12_0_1_7_fu_3171_p1))), 16));
    grp_fu_3839_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_1_1_7_fu_3193_p0) * signed(r_V_12_1_1_7_fu_3193_p1))), 16));
    grp_fu_3847_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_0_1_2_fu_3213_p0) * signed(r_V_12_0_1_2_fu_3213_p1))), 16));
    grp_fu_3865_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_1_0_2_fu_3275_p0) * signed(r_V_12_1_0_2_fu_3275_p1))), 16));
    grp_fu_3873_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_1_0_4_fu_3297_p0) * signed(r_V_12_1_0_4_fu_3297_p1))), 16));
    grp_fu_3881_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_1_0_6_fu_3319_p0) * signed(r_V_12_1_0_6_fu_3319_p1))), 16));
    grp_fu_3889_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_1_1_fu_3341_p0) * signed(r_V_12_1_1_fu_3341_p1))), 16));
    grp_fu_3897_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_1_1_2_fu_3363_p0) * signed(r_V_12_1_1_2_fu_3363_p1))), 16));
    grp_fu_3905_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_1_1_4_fu_3385_p0) * signed(r_V_12_1_1_4_fu_3385_p1))), 16));
    grp_fu_3930_p1 <= grp_fu_3930_p10(20 - 1 downto 0);
    grp_fu_3930_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(scale_0_V_load_reg_4369),33));
    grp_nbreadreq_fu_500_p3 <= (0=>in_V_V_empty_n, others=>'-');
    i_1_mid2_fu_2536_p3 <= 
        i_8_fu_2486_p2 when (exitcond1_fu_2522_p2(0) = '1') else 
        i_1_reg_1039;
    i_8_fu_2486_p2 <= std_logic_vector(unsigned(i_1_reg_1039) + unsigned(ap_const_lv4_1));
    i_9_fu_2480_p2 <= std_logic_vector(unsigned(i_reg_1017) + unsigned(ap_const_lv8_1));
    i_9_mid1_fu_2510_p2 <= std_logic_vector(unsigned(i_1_reg_1039) + unsigned(ap_const_lv4_2));

    in_V_V_blk_n_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state8, exitcond7_fu_2474_p2, grp_nbreadreq_fu_500_p3, ap_CS_fsm_state18, tmp_24_fu_3760_p2, tmp_19_mid2_reg_4023, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, tmp_24_reg_4396, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if ((((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((tmp_19_mid2_reg_4023 = ap_const_lv1_1) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (tmp_24_reg_4396 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((tmp_24_fu_3760_p2 = ap_const_lv1_1) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((tmp_19_mid2_reg_4023 = ap_const_lv1_1) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (tmp_24_fu_3760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (exitcond7_fu_2474_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            in_V_V_blk_n <= in_V_V_empty_n;
        else 
            in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_V_read_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state8, grp_nbreadreq_fu_500_p3, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_predicate_op106_read_state8, ap_predicate_op809_read_state18, ap_predicate_op1068_read_state18, ap_predicate_op4953_read_state33)
    begin
        if (((not(((ap_predicate_op4953_read_state33 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_predicate_op4953_read_state33 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state33)) or (not((((ap_predicate_op1068_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op809_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op1068_read_state18 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or (not((((ap_predicate_op1068_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op809_read_state18 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op809_read_state18 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state40)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state39)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or (not(((grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_0))) and (grp_nbreadreq_fu_500_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or (not(((ap_predicate_op106_read_state8 = ap_const_boolean_1) and (in_V_V_empty_n = ap_const_logic_0))) and (ap_predicate_op106_read_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            in_V_V_read <= ap_const_logic_1;
        else 
            in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_2504_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_1028) + unsigned(ap_const_lv8_1));
    j_4_fu_3753_p3 <= 
        ap_const_lv4_1 when (exitcond1_reg_4018(0) = '1') else 
        j_op_fu_3747_p2;
    j_op_fu_3747_p2 <= std_logic_vector(unsigned(j_reg_1050) + unsigned(ap_const_lv4_1));

    kernel_sum_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_state2, kernel_sum_V_addr_reg_3954, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_enable_reg_pp0_iter4, ap_CS_fsm_state7, ap_CS_fsm_state6, tmp_s_fu_2362_p1, tmp_25_fu_3402_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            kernel_sum_V_address0 <= tmp_25_fu_3402_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            kernel_sum_V_address0 <= kernel_sum_V_addr_reg_3954;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_sum_V_address0 <= tmp_s_fu_2362_p1(4 - 1 downto 0);
        else 
            kernel_sum_V_address0 <= "XXXX";
        end if; 
    end process;


    kernel_sum_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_enable_reg_pp0_iter4, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then 
            kernel_sum_V_ce0 <= ap_const_logic_1;
        else 
            kernel_sum_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_sum_V_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state6, tmp_23_fu_2467_p2, tmp_14_fu_3766_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            kernel_sum_V_d0 <= tmp_14_fu_3766_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            kernel_sum_V_d0 <= tmp_23_fu_2467_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_sum_V_d0 <= ap_const_lv24_0;
        else 
            kernel_sum_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    kernel_sum_V_we0_assign_proc : process(ap_CS_fsm_state2, exitcond_fu_2350_p2, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((exitcond_fu_2350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            kernel_sum_V_we0 <= ap_const_logic_1;
        else 
            kernel_sum_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

        lhs_V_fu_3498_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_V_1_1_7_reg_4334),25));

    newsignbit_0_not_i_i_fu_3682_p2 <= (newsignbit_fu_3652_p3 xor ap_const_lv1_1);
    newsignbit_fu_3652_p3 <= p_Val2_8_fu_3647_p2(7 downto 7);
    not_s_i_i4_fu_3567_p2 <= (tmp_130_fu_3531_p3 xor ap_const_lv1_1);

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0, exitcond6_reg_4032_pp0_iter6_reg)
    begin
        if (((exitcond6_reg_4032_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_V_din <= 
        p_Val2_49_mux_fu_3722_p3 when (brmerge_fu_3716_p2(0) = '1') else 
        p_Val2_s_fu_3730_p3;

    out_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter7, exitcond6_reg_4032_pp0_iter6_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6_reg_4032_pp0_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    overflow_fu_3676_p2 <= (tmp_31_fu_3671_p2 and brmerge_i_i_fu_3665_p2);
    p_Val2_21_fu_3589_p2 <= std_logic_vector(unsigned(tmp_26_cast_fu_3585_p1) + unsigned(p_Val2_7_cast_fu_3547_p1));
    p_Val2_49_mux_fu_3722_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_i_fu_3704_p2(0) = '1') else 
        p_Val2_8_fu_3647_p2;
    p_Val2_5_fu_3519_p0 <= p_Val2_5_fu_3519_p00(20 - 1 downto 0);
    p_Val2_5_fu_3519_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(scale_1_V_q0),44));
    p_Val2_5_fu_3519_p1 <= r_V_fu_3505_p2;
    p_Val2_5_fu_3519_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &p_Val2_5_fu_3519_p0) * signed(p_Val2_5_fu_3519_p1))), 44));
        p_Val2_7_cast_fu_3547_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_131_fu_3538_p4),18));

    p_Val2_8_fu_3647_p2 <= std_logic_vector(signed(ap_const_lv8_FE) + signed(tmp_135_reg_4374));
    p_Val2_s_fu_3730_p3 <= 
        ap_const_lv8_80 when (underflow_fu_3699_p2(0) = '1') else 
        p_Val2_8_fu_3647_p2;
        p_a_V_i_cast1_fu_3611_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_a_V_i_fu_3603_p3),23));

    p_a_V_i_cast_fu_3615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_a_V_i_cast1_fu_3611_p1),24));
    p_a_V_i_fu_3603_p3 <= 
        ap_const_lv18_0 when (tmp_134_fu_3595_p3(0) = '1') else 
        p_Val2_21_fu_3589_p2;
    p_not38_i_i_fu_3688_p2 <= "0" when (tmp_30_reg_4385 = ap_const_lv16_FFFF) else "1";
    p_not_i_i_fu_3660_p2 <= "0" when (tmp_30_reg_4385 = ap_const_lv16_0) else "1";
    qb_assign_5_fu_3579_p2 <= (r_i_i4_fu_3573_p2 and qbit_fu_3551_p3);
    qbit_fu_3551_p3 <= grp_fu_3930_p3(27 downto 27);
    r_V_12_0_0_1_fu_2834_p0 <= conv_layer2_weights_s_q1;
    r_V_12_0_0_1_fu_2834_p1 <= conv_buff_val_V_1_1_s;
    r_V_12_0_0_3_fu_2856_p0 <= conv_layer2_weights_s_q3;
    r_V_12_0_0_3_fu_2856_p1 <= conv_buff_val_V_1_3_s;
    r_V_12_0_0_7_fu_2878_p0 <= conv_layer2_weights_s_q7;
    r_V_12_0_0_7_fu_2878_p1 <= conv_buff_val_V_1_7_s;
    r_V_12_0_1_2_fu_3213_p0 <= conv_layer2_weights_45_reg_4259;
    r_V_12_0_1_2_fu_3213_p1 <= conv_buff_val_V_1_10_10;
    r_V_12_0_1_4_fu_3149_p0 <= conv_layer2_weights_s_q12;
    r_V_12_0_1_4_fu_3149_p1 <= conv_buff_val_V_1_12_8;
    r_V_12_0_1_7_fu_3171_p0 <= conv_layer2_weights_s_q15;
    r_V_12_0_1_7_fu_3171_p1 <= conv_buff_val_V_1_15;
    r_V_12_1_0_2_fu_3275_p0 <= conv_layer2_weights_s_q20;
    r_V_12_1_0_2_fu_3275_p1 <= conv_buff_val_V_1_11_5;
    r_V_12_1_0_4_fu_3297_p0 <= conv_layer2_weights_s_q22;
    r_V_12_1_0_4_fu_3297_p1 <= conv_buff_val_V_1_11_3;
    r_V_12_1_0_6_fu_3319_p0 <= conv_layer2_weights_s_q24;
    r_V_12_1_0_6_fu_3319_p1 <= conv_buff_val_V_1_11_1;
    r_V_12_1_1_2_fu_3363_p0 <= conv_layer2_weights_s_q28;
    r_V_12_1_1_2_fu_3363_p1 <= conv_buff_val_V_1_12_5;
    r_V_12_1_1_4_fu_3385_p0 <= conv_layer2_weights_s_q30;
    r_V_12_1_1_4_fu_3385_p1 <= conv_buff_val_V_1_12_3;
    r_V_12_1_1_7_fu_3193_p0 <= conv_layer2_weights_s_q17;
    r_V_12_1_1_7_fu_3193_p1 <= conv_buff_val_V_1_12;
    r_V_12_1_1_fu_3341_p0 <= conv_layer2_weights_s_q26;
    r_V_12_1_1_fu_3341_p1 <= conv_buff_val_V_1_12_7;
    r_V_8_fu_3623_p2 <= std_logic_vector(signed(ap_const_lv24_FFFFFE) + signed(p_a_V_i_cast_fu_3615_p1));
    r_V_fu_3505_p2 <= std_logic_vector(signed(lhs_V_fu_3498_p1) - signed(rhs_V_fu_3501_p1));
    r_fu_3561_p2 <= "0" when (tmp_133_fu_3558_p1 = ap_const_lv27_0) else "1";
    r_i_i4_fu_3573_p2 <= (r_fu_3561_p2 or not_s_i_i4_fu_3567_p2);
        rhs_V_fu_3501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_sum_V_q0),25));

    scale_0_V_address0 <= tmp_25_fu_3402_p1(4 - 1 downto 0);

    scale_0_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            scale_0_V_ce0 <= ap_const_logic_1;
        else 
            scale_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    scale_1_V_address0 <= tmp_25_fu_3402_p1(4 - 1 downto 0);

    scale_1_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            scale_1_V_ce0 <= ap_const_logic_1;
        else 
            scale_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        sum_V_0_0_1_cast_fu_3080_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_V_0_0_1_reg_4159),17));

    sum_V_0_0_3_fu_3086_p2 <= std_logic_vector(signed(sum_V_0_0_1_cast_fu_3080_p1) + signed(tmp1_cast_fu_3083_p1));
    sum_V_0_0_7_fu_3116_p2 <= std_logic_vector(signed(grp_fu_3797_p3) + signed(tmp3_cast_fu_3113_p1));
    sum_V_0_1_7_fu_3253_p2 <= std_logic_vector(unsigned(tmp5_fu_3229_p2) + unsigned(tmp8_cast_fu_3249_p1));
    sum_V_1_1_7_fu_3492_p2 <= std_logic_vector(unsigned(tmp12_fu_3444_p2) + unsigned(tmp19_cast_fu_3488_p1));
        tmp10_cast_fu_3240_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_3856_p3),18));

    tmp12_fu_3444_p2 <= std_logic_vector(unsigned(tmp13_fu_3423_p2) + unsigned(tmp16_cast_fu_3440_p1));
    tmp13_fu_3423_p2 <= std_logic_vector(signed(grp_fu_3921_p3) + signed(tmp15_cast_fu_3420_p1));
        tmp15_cast_fu_3420_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp15_reg_4299),20));

        tmp16_cast_fu_3440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp16_fu_3434_p2),20));

    tmp16_fu_3434_p2 <= std_logic_vector(signed(tmp17_cast_fu_3428_p1) + signed(tmp18_cast_fu_3431_p1));
        tmp17_cast_fu_3428_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp17_reg_4304),17));

        tmp18_cast_fu_3431_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp18_reg_4309),17));

        tmp19_cast_fu_3488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp19_fu_3482_p2),20));

    tmp19_fu_3482_p2 <= std_logic_vector(signed(tmp20_cast_fu_3462_p1) + signed(tmp23_cast_fu_3478_p1));
        tmp1_cast_fu_3083_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp1_reg_4164),17));

        tmp20_cast_fu_3462_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp20_fu_3456_p2),19));

    tmp20_fu_3456_p2 <= std_logic_vector(signed(tmp21_cast_fu_3450_p1) + signed(tmp22_cast_fu_3453_p1));
        tmp21_cast_fu_3450_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp21_reg_4314),17));

        tmp22_cast_fu_3453_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp22_reg_4319),17));

        tmp23_cast_fu_3478_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp23_fu_3472_p2),19));

    tmp23_fu_3472_p2 <= std_logic_vector(signed(tmp24_cast_fu_3466_p1) + signed(tmp25_cast_fu_3469_p1));
        tmp24_cast_fu_3466_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp24_reg_4324),18));

        tmp25_cast_fu_3469_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp25_reg_4329),18));

        tmp3_cast_fu_3113_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_3806_p3),18));

    tmp5_fu_3229_p2 <= std_logic_vector(signed(tmp6_reg_4269) + signed(tmp7_cast_fu_3226_p1));
        tmp7_cast_fu_3226_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_3847_p3),19));

        tmp8_cast_fu_3249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp8_fu_3243_p2),19));

    tmp8_fu_3243_p2 <= std_logic_vector(signed(tmp9_cast_fu_3234_p1) + signed(tmp10_cast_fu_3240_p1));
        tmp9_cast_fu_3234_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp9_reg_4274),18));

    tmp_100_fu_2954_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_15);
    tmp_101_fu_2959_p3 <= (ap_const_lv54_0 & tmp_100_fu_2954_p2);
    tmp_102_fu_2968_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_16);
    tmp_103_fu_2973_p3 <= (ap_const_lv54_0 & tmp_102_fu_2968_p2);
    tmp_104_fu_2982_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_17);
    tmp_105_fu_2987_p3 <= (ap_const_lv54_0 & tmp_104_fu_2982_p2);
    tmp_106_fu_2996_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_18);
    tmp_107_fu_3001_p3 <= (ap_const_lv54_0 & tmp_106_fu_2996_p2);
    tmp_108_fu_3010_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_19);
    tmp_109_fu_3015_p3 <= (ap_const_lv54_0 & tmp_108_fu_3010_p2);
    tmp_110_fu_3024_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_1A);
    tmp_111_fu_3029_p3 <= (ap_const_lv54_0 & tmp_110_fu_3024_p2);
    tmp_112_fu_3038_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_1B);
    tmp_113_fu_3043_p3 <= (ap_const_lv54_0 & tmp_112_fu_3038_p2);
    tmp_114_fu_3052_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_1C);
    tmp_115_fu_3057_p3 <= (ap_const_lv54_0 & tmp_114_fu_3052_p2);
    tmp_116_fu_3066_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_1D);
    tmp_117_fu_3071_p3 <= (ap_const_lv54_0 & tmp_116_fu_3066_p2);
    tmp_118_fu_2786_p2 <= (tmp_58_reg_4041 or ap_const_lv10_1E);
    tmp_119_fu_2791_p3 <= (ap_const_lv54_0 & tmp_118_fu_2786_p2);
    tmp_120_fu_2800_p2 <= (tmp_58_reg_4041 or ap_const_lv10_1F);
    tmp_121_fu_2805_p3 <= (ap_const_lv54_0 & tmp_120_fu_2800_p2);
    tmp_122_fu_2453_p2 <= std_logic_vector(unsigned(tmp_63_cast_reg_3980) + unsigned(tmp_21_cast_fu_2449_p1));
    tmp_128_cast_fu_2458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_122_fu_2453_p2),64));
    tmp_129_fu_2400_p3 <= (tmp_56_fu_2395_p2 & ap_const_lv1_0);
    tmp_130_fu_3531_p3 <= grp_fu_3930_p3(43 downto 43);
    tmp_131_fu_3538_p4 <= grp_fu_3930_p3(43 downto 28);
    tmp_133_fu_3558_p1 <= grp_fu_3930_p3(27 - 1 downto 0);
    tmp_134_fu_3595_p3 <= p_Val2_21_fu_3589_p2(17 downto 17);
    tmp_135_fu_3619_p1 <= p_a_V_i_fu_3603_p3(8 - 1 downto 0);
    tmp_14_fu_3766_p1 <= ap_const_lv24_FFFFEB(6 - 1 downto 0);
    tmp_15_cast_fu_2391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_reg_984),7));
    tmp_19_fu_2492_p2 <= "1" when (unsigned(i_8_fu_2486_p2) < unsigned(ap_const_lv4_D)) else "0";
    tmp_19_mid1_fu_2516_p2 <= "1" when (unsigned(i_9_mid1_fu_2510_p2) < unsigned(ap_const_lv4_D)) else "0";
    tmp_19_mid2_fu_2528_p3 <= 
        tmp_19_mid1_fu_2516_p2 when (exitcond1_fu_2522_p2(0) = '1') else 
        tmp_19_fu_2492_p2;
    tmp_20_fu_2420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_reg_995),8));
    tmp_21_cast_fu_2449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d_reg_1006),11));
        tmp_22_fu_2463_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer2_weights_s_q0),24));

    tmp_23_fu_2467_p2 <= std_logic_vector(signed(tmp_22_fu_2463_p1) + signed(kernel_sum_V_q0));
    tmp_24_fu_3760_p2 <= "1" when (unsigned(j_4_fu_3753_p3) < unsigned(ap_const_lv4_D)) else "0";
    tmp_25_fu_3402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(filter_reg_1062_pp0_iter3_reg),64));
    tmp_26_cast_fu_3585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_5_fu_3579_p2),18));
    tmp_31_fu_3671_p2 <= (isneg_reg_4379 xor ap_const_lv1_1);
    tmp_56_fu_2395_p2 <= std_logic_vector(unsigned(tmp_15_cast_fu_2391_p1) + unsigned(tmp_57_cast_reg_3949));
    tmp_57_cast_fu_2375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_2367_p3),7));
    tmp_57_fu_2424_p2 <= std_logic_vector(unsigned(tmp_129_reg_3967) + unsigned(tmp_20_fu_2420_p1));
    tmp_58_fu_2556_p3 <= (ap_phi_mux_filter_phi_fu_1066_p4 & ap_const_lv5_0);
    tmp_59_fu_2564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_2556_p3),64));
    tmp_60_fu_2569_p2 <= (tmp_58_fu_2556_p3 or ap_const_lv10_1);
    tmp_61_fu_2575_p3 <= (ap_const_lv54_0 & tmp_60_fu_2569_p2);
    tmp_62_fu_2584_p2 <= (tmp_58_fu_2556_p3 or ap_const_lv10_2);
    tmp_63_cast_fu_2429_p3 <= (tmp_57_fu_2424_p2 & ap_const_lv3_0);
    tmp_63_fu_2590_p3 <= (ap_const_lv54_0 & tmp_62_fu_2584_p2);
    tmp_64_fu_2599_p2 <= (tmp_58_fu_2556_p3 or ap_const_lv10_3);
    tmp_65_fu_2605_p3 <= (ap_const_lv54_0 & tmp_64_fu_2599_p2);
    tmp_66_fu_2614_p2 <= (tmp_58_fu_2556_p3 or ap_const_lv10_4);
    tmp_67_fu_2620_p3 <= (ap_const_lv54_0 & tmp_66_fu_2614_p2);
    tmp_68_fu_2629_p2 <= (tmp_58_fu_2556_p3 or ap_const_lv10_5);
    tmp_69_fu_2635_p3 <= (ap_const_lv54_0 & tmp_68_fu_2629_p2);
    tmp_70_fu_2644_p2 <= (tmp_58_fu_2556_p3 or ap_const_lv10_6);
    tmp_71_fu_2650_p3 <= (ap_const_lv54_0 & tmp_70_fu_2644_p2);
    tmp_72_fu_2659_p2 <= (tmp_58_fu_2556_p3 or ap_const_lv10_7);
    tmp_73_fu_2665_p3 <= (ap_const_lv54_0 & tmp_72_fu_2659_p2);
    tmp_74_fu_2674_p2 <= (tmp_58_reg_4041 or ap_const_lv10_8);
    tmp_75_fu_2679_p3 <= (ap_const_lv54_0 & tmp_74_fu_2674_p2);
    tmp_76_fu_2688_p2 <= (tmp_58_reg_4041 or ap_const_lv10_9);
    tmp_77_fu_2693_p3 <= (ap_const_lv54_0 & tmp_76_fu_2688_p2);
    tmp_78_fu_2702_p2 <= (tmp_58_reg_4041 or ap_const_lv10_A);
    tmp_79_fu_2707_p3 <= (ap_const_lv54_0 & tmp_78_fu_2702_p2);
    tmp_80_fu_2716_p2 <= (tmp_58_reg_4041 or ap_const_lv10_B);
    tmp_81_fu_2721_p3 <= (ap_const_lv54_0 & tmp_80_fu_2716_p2);
    tmp_82_fu_2730_p2 <= (tmp_58_reg_4041 or ap_const_lv10_C);
    tmp_83_fu_2735_p3 <= (ap_const_lv54_0 & tmp_82_fu_2730_p2);
    tmp_84_fu_2744_p2 <= (tmp_58_reg_4041 or ap_const_lv10_D);
    tmp_85_fu_2749_p3 <= (ap_const_lv54_0 & tmp_84_fu_2744_p2);
    tmp_86_fu_2758_p2 <= (tmp_58_reg_4041 or ap_const_lv10_E);
    tmp_87_fu_2763_p3 <= (ap_const_lv54_0 & tmp_86_fu_2758_p2);
    tmp_88_fu_2772_p2 <= (tmp_58_reg_4041 or ap_const_lv10_F);
    tmp_89_fu_2777_p3 <= (ap_const_lv54_0 & tmp_88_fu_2772_p2);
    tmp_90_fu_2884_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_10);
    tmp_91_fu_2889_p3 <= (ap_const_lv54_0 & tmp_90_fu_2884_p2);
    tmp_92_fu_2898_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_11);
    tmp_93_fu_2903_p3 <= (ap_const_lv54_0 & tmp_92_fu_2898_p2);
    tmp_94_fu_2912_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_12);
    tmp_95_fu_2917_p3 <= (ap_const_lv54_0 & tmp_94_fu_2912_p2);
    tmp_96_fu_2926_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_13);
    tmp_97_fu_2931_p3 <= (ap_const_lv54_0 & tmp_96_fu_2926_p2);
    tmp_98_fu_2940_p2 <= (tmp_58_reg_4041_pp0_iter1_reg or ap_const_lv10_14);
    tmp_99_fu_2945_p3 <= (ap_const_lv54_0 & tmp_98_fu_2940_p2);
    tmp_fu_2367_p3 <= (a_reg_973 & ap_const_lv1_0);
    tmp_s_fu_2362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_reg_973),64));
    underflow_fu_3699_p2 <= (isneg_reg_4379 and brmerge39_i_i_fu_3693_p2);
    underflow_not_fu_3710_p2 <= (underflow_fu_3699_p2 xor ap_const_lv1_1);
end behav;

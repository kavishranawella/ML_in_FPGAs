-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fc_layer3_fc_layeceu_rom is 
    generic(
             DWIDTH     : integer := 8; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 840
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          addr1      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce1       : in std_logic; 
          q1         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of fc_layer3_fc_layeceu_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr1_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "01010001", 1 => "01011100", 2 => "00101110", 3 => "00110100", 
    4 => "10111011", 5 => "00100011", 6 => "00111110", 7 => "10111101", 
    8 => "00001111", 9 => "01010011", 10 to 11=> "11001100", 12 => "00111011", 
    13 => "00110110", 14 => "11010101", 15 => "11010111", 16 => "11011110", 
    17 => "01001111", 18 => "00110101", 19 => "11001111", 20 => "10100110", 
    21 to 22=> "01001011", 23 => "00100001", 24 => "00010100", 25 => "10110110", 
    26 => "00011111", 27 => "00010001", 28 => "11001011", 29 => "11001010", 
    30 => "11100110", 31 => "01011001", 32 => "11101001", 33 => "00101010", 
    34 => "00001100", 35 => "00011111", 36 => "11000100", 37 => "00001110", 
    38 => "10110011", 39 => "11110010", 40 => "11000011", 41 => "11111110", 
    42 => "11101110", 43 => "00001101", 44 => "11011000", 45 => "00000101", 
    46 => "10111101", 47 => "01001001", 48 => "01011100", 49 => "00010010", 
    50 => "10110101", 51 => "10111010", 52 => "10100000", 53 => "10110000", 
    54 => "10001100", 55 => "00111010", 56 => "11111000", 57 => "11100000", 
    58 => "00001100", 59 => "11011110", 60 => "10000110", 61 => "01000001", 
    62 => "10011001", 63 => "00001110", 64 => "00010011", 65 => "10110000", 
    66 => "01100010", 67 => "01010110", 68 => "10111111", 69 => "11000101", 
    70 => "01001001", 71 => "01001010", 72 => "11001000", 73 => "11100101", 
    74 => "11000100", 75 => "01000111", 76 => "00101111", 77 => "01100010", 
    78 => "11000110", 79 => "01011110", 80 => "11100101", 81 => "10111100", 
    82 => "10011101", 83 => "01011110", 84 => "00101001", 85 => "10111010", 
    86 => "00001111", 87 => "10001100", 88 => "11101101", 89 => "11111011", 
    90 => "10111000", 91 => "11000111", 92 => "01001111", 93 => "11001100", 
    94 => "11011010", 95 => "10110100", 96 => "10100110", 97 => "11011010", 
    98 => "11010110", 99 => "00011100", 100 => "10110000", 101 => "00010110", 
    102 => "01011101", 103 => "00011010", 104 => "11000101", 105 => "11001110", 
    106 => "00110101", 107 => "00010010", 108 => "11010100", 109 => "01001001", 
    110 => "11101010", 111 => "00001001", 112 => "11101001", 113 => "00000110", 
    114 => "11011111", 115 => "11101000", 116 => "11111011", 117 => "01001100", 
    118 => "11111100", 119 => "00101111", 120 => "11011001", 121 => "00011101", 
    122 => "10110100", 123 => "00111000", 124 => "11100101", 125 => "10101111", 
    126 => "00000110", 127 => "11000111", 128 => "00000000", 129 => "00010111", 
    130 => "11110101", 131 => "00110110", 132 => "11111111", 133 => "10111001", 
    134 => "00100001", 135 => "00100110", 136 => "10101011", 137 => "01100100", 
    138 => "11110000", 139 => "01000100", 140 => "11100000", 141 => "01000001", 
    142 => "00011010", 143 => "10110101", 144 => "10100000", 145 => "00001110", 
    146 => "10101010", 147 => "01100010", 148 => "11100000", 149 => "11111100", 
    150 => "00110000", 151 => "00100011", 152 => "10110111", 153 => "01000101", 
    154 => "00010100", 155 => "10110110", 156 => "01001000", 157 => "10111101", 
    158 => "01000011", 159 => "11000011", 160 => "11111111", 161 => "00111010", 
    162 => "01001011", 163 => "00110111", 164 => "00111101", 165 => "01000001", 
    166 => "10101011", 167 => "01101010", 168 => "00101010", 169 => "01011100", 
    170 => "00000011", 171 => "10111110", 172 => "11000111", 173 => "11101111", 
    174 => "01001010", 175 => "10101100", 176 => "10100000", 177 => "11000101", 
    178 => "00011110", 179 => "11110110", 180 => "11101011", 181 => "00100000", 
    182 => "10110100", 183 => "11100010", 184 => "01010110", 185 => "01001011", 
    186 => "11011111", 187 => "11101111", 188 => "11011001", 189 => "11110100", 
    190 => "10110111", 191 => "10101101", 192 => "11100101", 193 => "00101011", 
    194 => "10011111", 195 => "11110110", 196 => "00010000", 197 => "01011001", 
    198 => "00001101", 199 => "00000011", 200 => "01010101", 201 to 202=> "11101101", 
    203 => "10010101", 204 => "00010110", 205 => "00101110", 206 => "01011000", 
    207 => "00100110", 208 => "00000111", 209 => "11000100", 210 => "00101011", 
    211 => "01010000", 212 => "00101101", 213 => "00111011", 214 => "01000110", 
    215 => "00000111", 216 => "10111110", 217 => "00000000", 218 => "00001011", 
    219 => "00101101", 220 => "10110100", 221 => "01001111", 222 => "11111100", 
    223 => "00000010", 224 => "11100001", 225 => "11010011", 226 => "00110001", 
    227 => "00101011", 228 => "00111001", 229 => "10100110", 230 => "11011000", 
    231 => "10101111", 232 => "11000010", 233 => "10110000", 234 => "01011001", 
    235 => "01100011", 236 => "11011110", 237 => "11100001", 238 => "00111100", 
    239 => "00110100", 240 => "11011101", 241 => "11101011", 242 => "11011010", 
    243 => "11011011", 244 => "00111001", 245 => "00010101", 246 => "00111000", 
    247 => "11000010", 248 => "01010011", 249 => "10100010", 250 => "01001001", 
    251 => "11001100", 252 => "01010011", 253 => "11111110", 254 => "11111011", 
    255 => "00011100", 256 => "01011010", 257 => "11110000", 258 => "00101011", 
    259 => "01011100", 260 => "10100101", 261 => "10100010", 262 => "11011100", 
    263 => "00010101", 264 => "00110100", 265 => "00011000", 266 => "11110101", 
    267 => "10110111", 268 => "10111010", 269 => "10101010", 270 => "00110101", 
    271 => "11110001", 272 => "00111100", 273 => "10111101", 274 => "00100111", 
    275 => "10111010", 276 => "00000010", 277 => "11111010", 278 => "11000011", 
    279 => "00010101", 280 => "00000001", 281 => "10100101", 282 => "00000011", 
    283 => "00101011", 284 => "11100011", 285 => "01001010", 286 => "11001010", 
    287 => "01011100", 288 => "11100010", 289 => "11110011", 290 => "00100101", 
    291 => "11100001", 292 => "00101000", 293 => "00110011", 294 => "00101001", 
    295 => "00001010", 296 => "11001100", 297 => "11000101", 298 => "00010001", 
    299 => "11000110", 300 => "00011001", 301 => "10111111", 302 => "11011101", 
    303 => "11001011", 304 => "01100110", 305 => "11111101", 306 => "00010001", 
    307 => "00101101", 308 => "10101001", 309 => "01000011", 310 => "00100101", 
    311 => "11110000", 312 => "10111011", 313 => "00110101", 314 => "00010011", 
    315 => "11001001", 316 => "00110100", 317 => "00000010", 318 => "10011110", 
    319 => "00111011", 320 => "00001010", 321 => "10011010", 322 => "01011001", 
    323 => "01001001", 324 => "11111101", 325 => "11110100", 326 => "00000100", 
    327 => "11011110", 328 => "11010101", 329 => "00110110", 330 => "01100110", 
    331 => "00001000", 332 => "11111110", 333 => "01101101", 334 => "10100001", 
    335 => "01000000", 336 => "11011111", 337 => "01000110", 338 => "01000011", 
    339 => "00000100", 340 => "11101101", 341 => "11101010", 342 => "10111111", 
    343 => "00111001", 344 => "01011101", 345 => "00100010", 346 => "00001011", 
    347 => "01000100", 348 => "10011001", 349 => "00110110", 350 => "00011101", 
    351 => "00010011", 352 => "11011010", 353 => "01011100", 354 => "11001101", 
    355 => "10111000", 356 => "10101110", 357 => "00010111", 358 => "00111001", 
    359 => "11001111", 360 => "00100111", 361 => "11110110", 362 => "11011110", 
    363 => "11011101", 364 => "11110101", 365 => "00011010", 366 => "00101101", 
    367 => "00100111", 368 => "00101001", 369 => "00111000", 370 => "11111000", 
    371 => "10110101", 372 => "00111011", 373 => "11100100", 374 => "11101111", 
    375 => "01001101", 376 => "11101010", 377 => "00111111", 378 => "10111011", 
    379 => "01010100", 380 => "10100111", 381 => "00000010", 382 => "10111000", 
    383 => "11011011", 384 => "00010101", 385 => "11110111", 386 => "10100111", 
    387 => "11000100", 388 => "10111001", 389 => "10011100", 390 => "01100010", 
    391 => "00110111", 392 => "11110101", 393 => "11001101", 394 => "00000000", 
    395 => "00111100", 396 => "11111111", 397 => "00110000", 398 => "11100111", 
    399 => "01001111", 400 => "00101101", 401 => "11000111", 402 => "11110101", 
    403 => "01011000", 404 => "01010101", 405 => "01001011", 406 => "11100100", 
    407 => "11011100", 408 => "10100000", 409 => "00100010", 410 => "11001110", 
    411 => "01000110", 412 => "11010100", 413 => "10110011", 414 => "00111001", 
    415 => "00111110", 416 => "00110011", 417 => "00110101", 418 => "00010000", 
    419 => "11001100", 420 => "10101111", 421 => "01100001", 422 => "11001101", 
    423 => "10111001", 424 => "01010000", 425 => "10100110", 426 => "11010000", 
    427 => "00101101", 428 => "00010101", 429 => "11010110", 430 => "00001000", 
    431 => "10101110", 432 => "10010110", 433 => "11011101", 434 => "01000110", 
    435 => "11111001", 436 => "10111010", 437 => "01100011", 438 => "00101110", 
    439 => "00100000", 440 => "00001001", 441 => "00100001", 442 => "00111011", 
    443 => "00100011", 444 => "01100001", 445 => "00100010", 446 => "11001000", 
    447 => "01010110", 448 => "00010011", 449 => "11111001", 450 => "00101011", 
    451 => "10110101", 452 to 453=> "00001101", 454 => "01001101", 455 => "10110101", 
    456 => "11001110", 457 => "01001010", 458 => "11011100", 459 => "11101111", 
    460 => "00100010", 461 => "00010111", 462 => "01010110", 463 => "00101101", 
    464 => "01001001", 465 => "01001010", 466 => "01000011", 467 => "00100000", 
    468 => "01011100", 469 => "00100011", 470 => "01000000", 471 => "00001100", 
    472 => "11111111", 473 => "11011100", 474 => "00001111", 475 => "00010110", 
    476 => "00110000", 477 => "11110011", 478 => "11111010", 479 => "00001111", 
    480 => "00100100", 481 => "11100011", 482 => "11010001", 483 => "11101111", 
    484 => "00111000", 485 => "00101101", 486 => "10111011", 487 => "11110001", 
    488 => "00001001", 489 => "11011000", 490 => "00000001", 491 => "00001010", 
    492 => "10111100", 493 => "10101111", 494 => "11100110", 495 => "01011100", 
    496 => "11010000", 497 => "00001101", 498 => "00111100", 499 => "10110011", 
    500 => "01101100", 501 => "00101000", 502 => "00111110", 503 => "10100000", 
    504 => "00010101", 505 => "00110101", 506 => "00010111", 507 => "10111011", 
    508 => "11111000", 509 => "00000011", 510 => "11101110", 511 => "01000100", 
    512 to 513=> "10101110", 514 => "00000101", 515 => "00011111", 516 => "00101111", 
    517 => "11101000", 518 => "01010111", 519 => "11111100", 520 => "00011000", 
    521 => "01000110", 522 => "01000010", 523 => "00100000", 524 => "11001100", 
    525 => "11100001", 526 => "11110101", 527 => "10101011", 528 => "11001110", 
    529 => "11100001", 530 => "00100110", 531 => "11101001", 532 => "01011000", 
    533 => "11100101", 534 => "01101111", 535 => "00101100", 536 => "10110000", 
    537 => "01010100", 538 => "11111001", 539 => "01011011", 540 => "10110111", 
    541 => "00000111", 542 => "11001011", 543 => "11111001", 544 => "00011000", 
    545 => "10101001", 546 => "00000101", 547 => "01011110", 548 => "00101000", 
    549 => "11001111", 550 => "10000001", 551 => "11110000", 552 => "11110011", 
    553 => "01100011", 554 => "11111001", 555 => "11001011", 556 => "00011011", 
    557 => "00011110", 558 => "00100101", 559 => "01001111", 560 => "00110010", 
    561 => "10100010", 562 => "00001010", 563 => "00011010", 564 => "10111100", 
    565 => "11001110", 566 => "01001100", 567 => "11101001", 568 => "00001001", 
    569 => "10111001", 570 => "00100110", 571 => "00101100", 572 => "11011100", 
    573 => "10111101", 574 => "10100000", 575 => "11010010", 576 => "00110110", 
    577 => "00001011", 578 => "10101111", 579 => "00101000", 580 => "11011011", 
    581 => "11011111", 582 => "10110011", 583 => "01011100", 584 => "00110110", 
    585 => "11100111", 586 => "11110110", 587 => "11101010", 588 => "01000010", 
    589 => "01010001", 590 => "11010111", 591 => "10100100", 592 => "10110110", 
    593 => "11110111", 594 => "11100101", 595 => "01011000", 596 => "01100101", 
    597 => "00100000", 598 => "10110111", 599 => "00010011", 600 => "00111111", 
    601 => "01000011", 602 => "01011001", 603 => "10011101", 604 => "01011010", 
    605 => "00001110", 606 => "00110100", 607 => "00011110", 608 => "00011101", 
    609 => "10110101", 610 => "10110111", 611 => "00101110", 612 => "11100101", 
    613 => "11001000", 614 => "11000110", 615 => "11110111", 616 => "00110011", 
    617 => "11011011", 618 => "10100111", 619 => "11010111", 620 => "00010001", 
    621 => "00100110", 622 => "00001010", 623 => "00000100", 624 => "00001001", 
    625 => "01000111", 626 => "00110111", 627 => "00010000", 628 => "00000101", 
    629 => "11111101", 630 => "00010010", 631 => "00010001", 632 => "00010010", 
    633 => "11000111", 634 => "11110111", 635 => "01011110", 636 => "11111011", 
    637 => "11001011", 638 => "11101001", 639 => "00010100", 640 => "00001101", 
    641 => "00111100", 642 => "10100101", 643 => "11001111", 644 => "11110111", 
    645 => "00111011", 646 => "11011000", 647 => "00110011", 648 => "10100100", 
    649 => "00110011", 650 => "10111110", 651 => "11000000", 652 => "01001101", 
    653 => "01010101", 654 => "01001101", 655 => "01000100", 656 => "11111011", 
    657 => "11110110", 658 => "00101001", 659 => "10110100", 660 => "00101000", 
    661 => "01100101", 662 => "00011100", 663 => "01011101", 664 => "11000111", 
    665 => "10101111", 666 => "10111001", 667 => "10111101", 668 => "00011111", 
    669 to 670=> "11010001", 671 => "10101111", 672 => "00100110", 673 => "00100100", 
    674 => "01000101", 675 => "00111010", 676 => "11101101", 677 => "01101000", 
    678 => "00001010", 679 => "11011010", 680 => "01011101", 681 => "11100101", 
    682 => "01000011", 683 => "11011110", 684 => "10110101", 685 => "11011011", 
    686 => "10110101", 687 => "10011001", 688 => "11000111", 689 => "01000000", 
    690 => "11011111", 691 => "10101011", 692 => "11101100", 693 => "00111101", 
    694 => "11010010", 695 => "01000101", 696 => "01010001", 697 => "10111000", 
    698 => "11111100", 699 => "11110000", 700 => "00000001", 701 => "10101110", 
    702 => "00011001", 703 => "11011111", 704 => "00101110", 705 => "11101011", 
    706 => "00001001", 707 => "01001001", 708 => "11111110", 709 => "11100001", 
    710 => "01000001", 711 => "00011100", 712 => "11100011", 713 => "11101110", 
    714 => "11100100", 715 => "10111100", 716 => "00010010", 717 => "11100001", 
    718 => "11101101", 719 => "00000011", 720 => "10110010", 721 => "00011010", 
    722 => "10100010", 723 => "10101001", 724 => "10110000", 725 => "11010010", 
    726 => "01001010", 727 => "11100000", 728 => "11100001", 729 => "11000101", 
    730 => "10100011", 731 => "11101010", 732 => "11010011", 733 => "01100010", 
    734 => "00110100", 735 => "10110101", 736 => "00000101", 737 => "00001010", 
    738 => "10100100", 739 => "11111011", 740 => "10100111", 741 => "00110000", 
    742 => "01011100", 743 => "10100001", 744 => "11011100", 745 => "00000111", 
    746 => "11100000", 747 => "10110001", 748 => "01011001", 749 => "11001010", 
    750 => "00011110", 751 => "11010000", 752 => "11110101", 753 => "01000010", 
    754 => "11111011", 755 => "00110000", 756 => "00110011", 757 => "11100011", 
    758 => "00001100", 759 => "11010000", 760 => "11111001", 761 => "11010110", 
    762 => "10111101", 763 => "11001011", 764 => "11110010", 765 => "00111110", 
    766 => "11000010", 767 => "10100000", 768 => "00011001", 769 => "00001110", 
    770 => "01011111", 771 => "01011101", 772 => "01000001", 773 => "11110110", 
    774 => "11101101", 775 => "10111010", 776 => "01000000", 777 => "00010011", 
    778 => "00001111", 779 => "00010001", 780 => "01010000", 781 => "00100111", 
    782 => "11011010", 783 => "10111111", 784 => "11001001", 785 => "00000110", 
    786 => "00100011", 787 => "01100010", 788 => "11111011", 789 => "01001111", 
    790 => "11110110", 791 => "00010010", 792 => "10110101", 793 => "11110000", 
    794 => "11100110", 795 => "10110100", 796 => "10001011", 797 => "10100110", 
    798 => "11100100", 799 => "00000010", 800 => "00000000", 801 => "00111000", 
    802 => "00000100", 803 => "00110111", 804 => "00010010", 805 => "11010011", 
    806 => "11100100", 807 => "00011111", 808 => "11111001", 809 => "11100001", 
    810 => "00111010", 811 => "01101000", 812 => "00000111", 813 => "11001000", 
    814 => "11000000", 815 => "00111100", 816 => "00000000", 817 => "00111000", 
    818 => "11010101", 819 => "10100000", 820 => "01010100", 821 => "01001010", 
    822 => "11001001", 823 => "10100110", 824 => "00011010", 825 => "00010010", 
    826 => "00100010", 827 => "01011011", 828 => "11100101", 829 => "11100010", 
    830 => "01000011", 831 => "00010011", 832 => "00111000", 833 => "00100010", 
    834 => "10100000", 835 => "10101001", 836 => "00000110", 837 => "11101011", 
    838 => "00011100", 839 => "10100110" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

memory_access_guard_1: process (addr1) 
begin
      addr1_tmp <= addr1;
--synthesis translate_off
      if (CONV_INTEGER(addr1) > mem_size-1) then
           addr1_tmp <= (others => '0');
      else 
           addr1_tmp <= addr1;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
        if (ce1 = '1') then 
            q1 <= mem(CONV_INTEGER(addr1_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity fc_layer3_fc_layeceu is
    generic (
        DataWidth : INTEGER := 8;
        AddressRange : INTEGER := 840;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address1 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of fc_layer3_fc_layeceu is
    component fc_layer3_fc_layeceu_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR;
            addr1 : IN STD_LOGIC_VECTOR;
            ce1 : IN STD_LOGIC;
            q1 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    fc_layer3_fc_layeceu_rom_U :  component fc_layer3_fc_layeceu_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0,
        addr1 => address1,
        ce1 => ce1,
        q1 => q1);

end architecture;


